{"version":3,"file":"js/chunk-vendors.36c473b8.js","mappings":"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","sources":["webpack://client/./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack://client/./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack://client/./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack://client/./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack://client/./node_modules/vue-loader/dist/exportHelper.js","webpack://client/./node_modules/axios/dist/browser/axios.cjs","webpack://client/./node_modules/@azure/msal-common/dist/cache/entities/ThrottlingEntity.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/cache/BrowserCacheManager.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/cache/BrowserStorage.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/cache/MemoryStorage.mjs","webpack://client/./node_modules/@azure/msal-common/dist/network/INetworkModule.mjs","webpack://client/./node_modules/@azure/msal-common/dist/telemetry/performance/StubPerformanceClient.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/network/FetchClient.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/config/Configuration.mjs","webpack://client/./node_modules/@azure/msal-common/dist/authority/OpenIdConfigResponse.mjs","webpack://client/./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryResponse.mjs","webpack://client/./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryErrorResponse.mjs","webpack://client/./node_modules/@azure/msal-common/dist/authority/RegionDiscovery.mjs","webpack://client/./node_modules/@azure/msal-common/dist/authority/Authority.mjs","webpack://client/./node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs","webpack://client/./node_modules/@azure/msal-common/dist/network/NetworkManager.mjs","webpack://client/./node_modules/@azure/msal-common/dist/request/RequestValidator.mjs","webpack://client/./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs","webpack://client/./node_modules/@azure/msal-common/dist/client/BaseClient.mjs","webpack://client/./node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs","webpack://client/./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs","webpack://client/./node_modules/@azure/msal-common/dist/client/AuthorizationCodeClient.mjs","webpack://client/./node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs","webpack://client/./node_modules/@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/interaction_client/BaseInteractionClient.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/crypto/PkceGenerator.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/error/NativeAuthErrorCodes.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeStatusCodes.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/error/NativeAuthError.mjs","webpack://client/./node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs","webpack://client/./node_modules/@azure/msal-common/dist/client/SilentFlowClient.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/interaction_client/SilentCacheClient.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/interaction_handler/InteractionHandler.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/interaction_client/PopupClient.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/interaction_handler/RedirectHandler.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/interaction_client/RedirectClient.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/interaction_handler/SilentHandler.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/interaction_client/SilentIframeClient.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/interaction_client/SilentRefreshClient.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/cache/TokenCache.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/interaction_client/HybridSpaAuthorizationCodeClient.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/interaction_client/SilentAuthCodeClient.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/controllers/StandardController.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs","webpack://client/./node_modules/@azure/msal-common/dist/error/JoseHeaderErrorCodes.mjs","webpack://client/./node_modules/@azure/msal-common/dist/error/JoseHeaderError.mjs","webpack://client/./node_modules/@azure/msal-common/dist/crypto/JoseHeader.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/cache/DatabaseStorage.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/cache/AsyncMemoryStorage.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/cache/CryptoKeyStore.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/crypto/CryptoOps.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/encode/Base64Decode.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/encode/Base64Encode.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthErrorCodes.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/event/EventHandler.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/event/EventType.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/operatingcontext/BaseOperatingContext.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/naa/BridgeProxy.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/operatingcontext/TeamsAppOperatingContext.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/operatingcontext/StandardOperatingContext.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/controllers/ControllerFactory.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/app/PublicClientApplication.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/controllers/UnknownOperatingContextController.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/operatingcontext/UnknownOperatingContext.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/app/PublicClientNext.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/app/IPublicClientApplication.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/event/EventMessage.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/crypto/SignedHttpRequest.mjs","webpack://client/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceClient.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceMeasurement.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceClient.mjs","webpack://client/./node_modules/@azure/msal-common/dist/request/AuthenticationHeaderParser.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/navigation/NavigationClient.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/packageMetadata.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/utils/BrowserProtocolUtils.mjs","webpack://client/./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs","webpack://client/./node_modules/@azure/msal-common/dist/account/AuthToken.mjs","webpack://client/./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs","webpack://client/./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs","webpack://client/./node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs","webpack://client/./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs","webpack://client/./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs","webpack://client/./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs","webpack://client/./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs","webpack://client/./node_modules/@azure/msal-common/dist/cache/entities/AccessTokenEntity.mjs","webpack://client/./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs","webpack://client/./node_modules/@azure/msal-common/dist/cache/entities/AppMetadataEntity.mjs","webpack://client/./node_modules/@azure/msal-common/dist/cache/entities/AuthorityMetadataEntity.mjs","webpack://client/./node_modules/@azure/msal-common/dist/cache/entities/CacheRecord.mjs","webpack://client/./node_modules/@azure/msal-common/dist/cache/entities/CredentialEntity.mjs","webpack://client/./node_modules/@azure/msal-common/dist/cache/entities/IdTokenEntity.mjs","webpack://client/./node_modules/@azure/msal-common/dist/cache/entities/RefreshTokenEntity.mjs","webpack://client/./node_modules/@azure/msal-common/dist/cache/entities/ServerTelemetryEntity.mjs","webpack://client/./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs","webpack://client/./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs","webpack://client/./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs","webpack://client/./node_modules/@azure/msal-common/dist/error/AuthError.mjs","webpack://client/./node_modules/@azure/msal-common/dist/error/AuthErrorCodes.mjs","webpack://client/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs","webpack://client/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs","webpack://client/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs","webpack://client/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs","webpack://client/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs","webpack://client/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs","webpack://client/./node_modules/@azure/msal-common/dist/error/ServerError.mjs","webpack://client/./node_modules/@azure/msal-common/dist/logger/Logger.mjs","webpack://client/./node_modules/@azure/msal-common/dist/packageMetadata.mjs","webpack://client/./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs","webpack://client/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs","webpack://client/./node_modules/@azure/msal-common/dist/url/UrlString.mjs","webpack://client/./node_modules/@azure/msal-common/dist/utils/Constants.mjs","webpack://client/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs","webpack://client/./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs","webpack://client/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs","webpack://client/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs"],"sourcesContent":["import { extend, isArray, isMap, isIntegerKey, hasOwn, isSymbol, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nfunction warn(msg, ...args) {\n  console.warn(`[Vue warn] ${msg}`, ...args);\n}\n\nlet activeEffectScope;\nclass EffectScope {\n  constructor(detached = false) {\n    this.detached = detached;\n    /**\n     * @internal\n     */\n    this._active = true;\n    /**\n     * @internal\n     */\n    this.effects = [];\n    /**\n     * @internal\n     */\n    this.cleanups = [];\n    this.parent = activeEffectScope;\n    if (!detached && activeEffectScope) {\n      this.index = (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(\n        this\n      ) - 1;\n    }\n  }\n  get active() {\n    return this._active;\n  }\n  run(fn) {\n    if (this._active) {\n      const currentEffectScope = activeEffectScope;\n      try {\n        activeEffectScope = this;\n        return fn();\n      } finally {\n        activeEffectScope = currentEffectScope;\n      }\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(`cannot run an inactive effect scope.`);\n    }\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  on() {\n    activeEffectScope = this;\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  off() {\n    activeEffectScope = this.parent;\n  }\n  stop(fromParent) {\n    if (this._active) {\n      let i, l;\n      for (i = 0, l = this.effects.length; i < l; i++) {\n        this.effects[i].stop();\n      }\n      for (i = 0, l = this.cleanups.length; i < l; i++) {\n        this.cleanups[i]();\n      }\n      if (this.scopes) {\n        for (i = 0, l = this.scopes.length; i < l; i++) {\n          this.scopes[i].stop(true);\n        }\n      }\n      if (!this.detached && this.parent && !fromParent) {\n        const last = this.parent.scopes.pop();\n        if (last && last !== this) {\n          this.parent.scopes[this.index] = last;\n          last.index = this.index;\n        }\n      }\n      this.parent = void 0;\n      this._active = false;\n    }\n  }\n}\nfunction effectScope(detached) {\n  return new EffectScope(detached);\n}\nfunction recordEffectScope(effect, scope = activeEffectScope) {\n  if (scope && scope.active) {\n    scope.effects.push(effect);\n  }\n}\nfunction getCurrentScope() {\n  return activeEffectScope;\n}\nfunction onScopeDispose(fn) {\n  if (activeEffectScope) {\n    activeEffectScope.cleanups.push(fn);\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn(\n      `onScopeDispose() is called when there is no active effect scope to be associated with.`\n    );\n  }\n}\n\nconst createDep = (effects) => {\n  const dep = new Set(effects);\n  dep.w = 0;\n  dep.n = 0;\n  return dep;\n};\nconst wasTracked = (dep) => (dep.w & trackOpBit) > 0;\nconst newTracked = (dep) => (dep.n & trackOpBit) > 0;\nconst initDepMarkers = ({ deps }) => {\n  if (deps.length) {\n    for (let i = 0; i < deps.length; i++) {\n      deps[i].w |= trackOpBit;\n    }\n  }\n};\nconst finalizeDepMarkers = (effect) => {\n  const { deps } = effect;\n  if (deps.length) {\n    let ptr = 0;\n    for (let i = 0; i < deps.length; i++) {\n      const dep = deps[i];\n      if (wasTracked(dep) && !newTracked(dep)) {\n        dep.delete(effect);\n      } else {\n        deps[ptr++] = dep;\n      }\n      dep.w &= ~trackOpBit;\n      dep.n &= ~trackOpBit;\n    }\n    deps.length = ptr;\n  }\n};\n\nconst targetMap = /* @__PURE__ */ new WeakMap();\nlet effectTrackDepth = 0;\nlet trackOpBit = 1;\nconst maxMarkerBits = 30;\nlet activeEffect;\nconst ITERATE_KEY = Symbol(!!(process.env.NODE_ENV !== \"production\") ? \"iterate\" : \"\");\nconst MAP_KEY_ITERATE_KEY = Symbol(!!(process.env.NODE_ENV !== \"production\") ? \"Map key iterate\" : \"\");\nclass ReactiveEffect {\n  constructor(fn, scheduler = null, scope) {\n    this.fn = fn;\n    this.scheduler = scheduler;\n    this.active = true;\n    this.deps = [];\n    this.parent = void 0;\n    recordEffectScope(this, scope);\n  }\n  run() {\n    if (!this.active) {\n      return this.fn();\n    }\n    let parent = activeEffect;\n    let lastShouldTrack = shouldTrack;\n    while (parent) {\n      if (parent === this) {\n        return;\n      }\n      parent = parent.parent;\n    }\n    try {\n      this.parent = activeEffect;\n      activeEffect = this;\n      shouldTrack = true;\n      trackOpBit = 1 << ++effectTrackDepth;\n      if (effectTrackDepth <= maxMarkerBits) {\n        initDepMarkers(this);\n      } else {\n        cleanupEffect(this);\n      }\n      return this.fn();\n    } finally {\n      if (effectTrackDepth <= maxMarkerBits) {\n        finalizeDepMarkers(this);\n      }\n      trackOpBit = 1 << --effectTrackDepth;\n      activeEffect = this.parent;\n      shouldTrack = lastShouldTrack;\n      this.parent = void 0;\n      if (this.deferStop) {\n        this.stop();\n      }\n    }\n  }\n  stop() {\n    if (activeEffect === this) {\n      this.deferStop = true;\n    } else if (this.active) {\n      cleanupEffect(this);\n      if (this.onStop) {\n        this.onStop();\n      }\n      this.active = false;\n    }\n  }\n}\nfunction cleanupEffect(effect2) {\n  const { deps } = effect2;\n  if (deps.length) {\n    for (let i = 0; i < deps.length; i++) {\n      deps[i].delete(effect2);\n    }\n    deps.length = 0;\n  }\n}\nfunction effect(fn, options) {\n  if (fn.effect) {\n    fn = fn.effect.fn;\n  }\n  const _effect = new ReactiveEffect(fn);\n  if (options) {\n    extend(_effect, options);\n    if (options.scope)\n      recordEffectScope(_effect, options.scope);\n  }\n  if (!options || !options.lazy) {\n    _effect.run();\n  }\n  const runner = _effect.run.bind(_effect);\n  runner.effect = _effect;\n  return runner;\n}\nfunction stop(runner) {\n  runner.effect.stop();\n}\nlet shouldTrack = true;\nconst trackStack = [];\nfunction pauseTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = false;\n}\nfunction enableTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = true;\n}\nfunction resetTracking() {\n  const last = trackStack.pop();\n  shouldTrack = last === void 0 ? true : last;\n}\nfunction track(target, type, key) {\n  if (shouldTrack && activeEffect) {\n    let depsMap = targetMap.get(target);\n    if (!depsMap) {\n      targetMap.set(target, depsMap = /* @__PURE__ */ new Map());\n    }\n    let dep = depsMap.get(key);\n    if (!dep) {\n      depsMap.set(key, dep = createDep());\n    }\n    const eventInfo = !!(process.env.NODE_ENV !== \"production\") ? { effect: activeEffect, target, type, key } : void 0;\n    trackEffects(dep, eventInfo);\n  }\n}\nfunction trackEffects(dep, debuggerEventExtraInfo) {\n  let shouldTrack2 = false;\n  if (effectTrackDepth <= maxMarkerBits) {\n    if (!newTracked(dep)) {\n      dep.n |= trackOpBit;\n      shouldTrack2 = !wasTracked(dep);\n    }\n  } else {\n    shouldTrack2 = !dep.has(activeEffect);\n  }\n  if (shouldTrack2) {\n    dep.add(activeEffect);\n    activeEffect.deps.push(dep);\n    if (!!(process.env.NODE_ENV !== \"production\") && activeEffect.onTrack) {\n      activeEffect.onTrack(\n        extend(\n          {\n            effect: activeEffect\n          },\n          debuggerEventExtraInfo\n        )\n      );\n    }\n  }\n}\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\n  const depsMap = targetMap.get(target);\n  if (!depsMap) {\n    return;\n  }\n  let deps = [];\n  if (type === \"clear\") {\n    deps = [...depsMap.values()];\n  } else if (key === \"length\" && isArray(target)) {\n    const newLength = Number(newValue);\n    depsMap.forEach((dep, key2) => {\n      if (key2 === \"length\" || key2 >= newLength) {\n        deps.push(dep);\n      }\n    });\n  } else {\n    if (key !== void 0) {\n      deps.push(depsMap.get(key));\n    }\n    switch (type) {\n      case \"add\":\n        if (!isArray(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n          if (isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        } else if (isIntegerKey(key)) {\n          deps.push(depsMap.get(\"length\"));\n        }\n        break;\n      case \"delete\":\n        if (!isArray(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n          if (isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        }\n        break;\n      case \"set\":\n        if (isMap(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n        }\n        break;\n    }\n  }\n  const eventInfo = !!(process.env.NODE_ENV !== \"production\") ? { target, type, key, newValue, oldValue, oldTarget } : void 0;\n  if (deps.length === 1) {\n    if (deps[0]) {\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        triggerEffects(deps[0], eventInfo);\n      } else {\n        triggerEffects(deps[0]);\n      }\n    }\n  } else {\n    const effects = [];\n    for (const dep of deps) {\n      if (dep) {\n        effects.push(...dep);\n      }\n    }\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      triggerEffects(createDep(effects), eventInfo);\n    } else {\n      triggerEffects(createDep(effects));\n    }\n  }\n}\nfunction triggerEffects(dep, debuggerEventExtraInfo) {\n  const effects = isArray(dep) ? dep : [...dep];\n  for (const effect2 of effects) {\n    if (effect2.computed) {\n      triggerEffect(effect2, debuggerEventExtraInfo);\n    }\n  }\n  for (const effect2 of effects) {\n    if (!effect2.computed) {\n      triggerEffect(effect2, debuggerEventExtraInfo);\n    }\n  }\n}\nfunction triggerEffect(effect2, debuggerEventExtraInfo) {\n  if (effect2 !== activeEffect || effect2.allowRecurse) {\n    if (!!(process.env.NODE_ENV !== \"production\") && effect2.onTrigger) {\n      effect2.onTrigger(extend({ effect: effect2 }, debuggerEventExtraInfo));\n    }\n    if (effect2.scheduler) {\n      effect2.scheduler();\n    } else {\n      effect2.run();\n    }\n  }\n}\nfunction getDepFromReactive(object, key) {\n  var _a;\n  return (_a = targetMap.get(object)) == null ? void 0 : _a.get(key);\n}\n\nconst isNonTrackableKeys = /* @__PURE__ */ makeMap(`__proto__,__v_isRef,__isVue`);\nconst builtInSymbols = new Set(\n  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((key) => key !== \"arguments\" && key !== \"caller\").map((key) => Symbol[key]).filter(isSymbol)\n);\nconst get$1 = /* @__PURE__ */ createGetter();\nconst shallowGet = /* @__PURE__ */ createGetter(false, true);\nconst readonlyGet = /* @__PURE__ */ createGetter(true);\nconst shallowReadonlyGet = /* @__PURE__ */ createGetter(true, true);\nconst arrayInstrumentations = /* @__PURE__ */ createArrayInstrumentations();\nfunction createArrayInstrumentations() {\n  const instrumentations = {};\n  [\"includes\", \"indexOf\", \"lastIndexOf\"].forEach((key) => {\n    instrumentations[key] = function(...args) {\n      const arr = toRaw(this);\n      for (let i = 0, l = this.length; i < l; i++) {\n        track(arr, \"get\", i + \"\");\n      }\n      const res = arr[key](...args);\n      if (res === -1 || res === false) {\n        return arr[key](...args.map(toRaw));\n      } else {\n        return res;\n      }\n    };\n  });\n  [\"push\", \"pop\", \"shift\", \"unshift\", \"splice\"].forEach((key) => {\n    instrumentations[key] = function(...args) {\n      pauseTracking();\n      const res = toRaw(this)[key].apply(this, args);\n      resetTracking();\n      return res;\n    };\n  });\n  return instrumentations;\n}\nfunction hasOwnProperty(key) {\n  const obj = toRaw(this);\n  track(obj, \"has\", key);\n  return obj.hasOwnProperty(key);\n}\nfunction createGetter(isReadonly2 = false, shallow = false) {\n  return function get2(target, key, receiver) {\n    if (key === \"__v_isReactive\") {\n      return !isReadonly2;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly2;\n    } else if (key === \"__v_isShallow\") {\n      return shallow;\n    } else if (key === \"__v_raw\" && receiver === (isReadonly2 ? shallow ? shallowReadonlyMap : readonlyMap : shallow ? shallowReactiveMap : reactiveMap).get(target)) {\n      return target;\n    }\n    const targetIsArray = isArray(target);\n    if (!isReadonly2) {\n      if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\n        return Reflect.get(arrayInstrumentations, key, receiver);\n      }\n      if (key === \"hasOwnProperty\") {\n        return hasOwnProperty;\n      }\n    }\n    const res = Reflect.get(target, key, receiver);\n    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n      return res;\n    }\n    if (!isReadonly2) {\n      track(target, \"get\", key);\n    }\n    if (shallow) {\n      return res;\n    }\n    if (isRef(res)) {\n      return targetIsArray && isIntegerKey(key) ? res : res.value;\n    }\n    if (isObject(res)) {\n      return isReadonly2 ? readonly(res) : reactive(res);\n    }\n    return res;\n  };\n}\nconst set$1 = /* @__PURE__ */ createSetter();\nconst shallowSet = /* @__PURE__ */ createSetter(true);\nfunction createSetter(shallow = false) {\n  return function set2(target, key, value, receiver) {\n    let oldValue = target[key];\n    if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {\n      return false;\n    }\n    if (!shallow) {\n      if (!isShallow(value) && !isReadonly(value)) {\n        oldValue = toRaw(oldValue);\n        value = toRaw(value);\n      }\n      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\n        oldValue.value = value;\n        return true;\n      }\n    }\n    const hadKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target, key);\n    const result = Reflect.set(target, key, value, receiver);\n    if (target === toRaw(receiver)) {\n      if (!hadKey) {\n        trigger(target, \"add\", key, value);\n      } else if (hasChanged(value, oldValue)) {\n        trigger(target, \"set\", key, value, oldValue);\n      }\n    }\n    return result;\n  };\n}\nfunction deleteProperty(target, key) {\n  const hadKey = hasOwn(target, key);\n  const oldValue = target[key];\n  const result = Reflect.deleteProperty(target, key);\n  if (result && hadKey) {\n    trigger(target, \"delete\", key, void 0, oldValue);\n  }\n  return result;\n}\nfunction has$1(target, key) {\n  const result = Reflect.has(target, key);\n  if (!isSymbol(key) || !builtInSymbols.has(key)) {\n    track(target, \"has\", key);\n  }\n  return result;\n}\nfunction ownKeys(target) {\n  track(target, \"iterate\", isArray(target) ? \"length\" : ITERATE_KEY);\n  return Reflect.ownKeys(target);\n}\nconst mutableHandlers = {\n  get: get$1,\n  set: set$1,\n  deleteProperty,\n  has: has$1,\n  ownKeys\n};\nconst readonlyHandlers = {\n  get: readonlyGet,\n  set(target, key) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(\n        `Set operation on key \"${String(key)}\" failed: target is readonly.`,\n        target\n      );\n    }\n    return true;\n  },\n  deleteProperty(target, key) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(\n        `Delete operation on key \"${String(key)}\" failed: target is readonly.`,\n        target\n      );\n    }\n    return true;\n  }\n};\nconst shallowReactiveHandlers = /* @__PURE__ */ extend(\n  {},\n  mutableHandlers,\n  {\n    get: shallowGet,\n    set: shallowSet\n  }\n);\nconst shallowReadonlyHandlers = /* @__PURE__ */ extend(\n  {},\n  readonlyHandlers,\n  {\n    get: shallowReadonlyGet\n  }\n);\n\nconst toShallow = (value) => value;\nconst getProto = (v) => Reflect.getPrototypeOf(v);\nfunction get(target, key, isReadonly = false, isShallow = false) {\n  target = target[\"__v_raw\"];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n  if (!isReadonly) {\n    if (key !== rawKey) {\n      track(rawTarget, \"get\", key);\n    }\n    track(rawTarget, \"get\", rawKey);\n  }\n  const { has: has2 } = getProto(rawTarget);\n  const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n  if (has2.call(rawTarget, key)) {\n    return wrap(target.get(key));\n  } else if (has2.call(rawTarget, rawKey)) {\n    return wrap(target.get(rawKey));\n  } else if (target !== rawTarget) {\n    target.get(key);\n  }\n}\nfunction has(key, isReadonly = false) {\n  const target = this[\"__v_raw\"];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n  if (!isReadonly) {\n    if (key !== rawKey) {\n      track(rawTarget, \"has\", key);\n    }\n    track(rawTarget, \"has\", rawKey);\n  }\n  return key === rawKey ? target.has(key) : target.has(key) || target.has(rawKey);\n}\nfunction size(target, isReadonly = false) {\n  target = target[\"__v_raw\"];\n  !isReadonly && track(toRaw(target), \"iterate\", ITERATE_KEY);\n  return Reflect.get(target, \"size\", target);\n}\nfunction add(value) {\n  value = toRaw(value);\n  const target = toRaw(this);\n  const proto = getProto(target);\n  const hadKey = proto.has.call(target, value);\n  if (!hadKey) {\n    target.add(value);\n    trigger(target, \"add\", value, value);\n  }\n  return this;\n}\nfunction set(key, value) {\n  value = toRaw(value);\n  const target = toRaw(this);\n  const { has: has2, get: get2 } = getProto(target);\n  let hadKey = has2.call(target, key);\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    checkIdentityKeys(target, has2, key);\n  }\n  const oldValue = get2.call(target, key);\n  target.set(key, value);\n  if (!hadKey) {\n    trigger(target, \"add\", key, value);\n  } else if (hasChanged(value, oldValue)) {\n    trigger(target, \"set\", key, value, oldValue);\n  }\n  return this;\n}\nfunction deleteEntry(key) {\n  const target = toRaw(this);\n  const { has: has2, get: get2 } = getProto(target);\n  let hadKey = has2.call(target, key);\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    checkIdentityKeys(target, has2, key);\n  }\n  const oldValue = get2 ? get2.call(target, key) : void 0;\n  const result = target.delete(key);\n  if (hadKey) {\n    trigger(target, \"delete\", key, void 0, oldValue);\n  }\n  return result;\n}\nfunction clear() {\n  const target = toRaw(this);\n  const hadItems = target.size !== 0;\n  const oldTarget = !!(process.env.NODE_ENV !== \"production\") ? isMap(target) ? new Map(target) : new Set(target) : void 0;\n  const result = target.clear();\n  if (hadItems) {\n    trigger(target, \"clear\", void 0, void 0, oldTarget);\n  }\n  return result;\n}\nfunction createForEach(isReadonly, isShallow) {\n  return function forEach(callback, thisArg) {\n    const observed = this;\n    const target = observed[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(rawTarget, \"iterate\", ITERATE_KEY);\n    return target.forEach((value, key) => {\n      return callback.call(thisArg, wrap(value), wrap(key), observed);\n    });\n  };\n}\nfunction createIterableMethod(method, isReadonly, isShallow) {\n  return function(...args) {\n    const target = this[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const targetIsMap = isMap(rawTarget);\n    const isPair = method === \"entries\" || method === Symbol.iterator && targetIsMap;\n    const isKeyOnly = method === \"keys\" && targetIsMap;\n    const innerIterator = target[method](...args);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(\n      rawTarget,\n      \"iterate\",\n      isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY\n    );\n    return {\n      // iterator protocol\n      next() {\n        const { value, done } = innerIterator.next();\n        return done ? { value, done } : {\n          value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n          done\n        };\n      },\n      // iterable protocol\n      [Symbol.iterator]() {\n        return this;\n      }\n    };\n  };\n}\nfunction createReadonlyMethod(type) {\n  return function(...args) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      const key = args[0] ? `on key \"${args[0]}\" ` : ``;\n      console.warn(\n        `${capitalize(type)} operation ${key}failed: target is readonly.`,\n        toRaw(this)\n      );\n    }\n    return type === \"delete\" ? false : this;\n  };\n}\nfunction createInstrumentations() {\n  const mutableInstrumentations2 = {\n    get(key) {\n      return get(this, key);\n    },\n    get size() {\n      return size(this);\n    },\n    has,\n    add,\n    set,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, false)\n  };\n  const shallowInstrumentations2 = {\n    get(key) {\n      return get(this, key, false, true);\n    },\n    get size() {\n      return size(this);\n    },\n    has,\n    add,\n    set,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, true)\n  };\n  const readonlyInstrumentations2 = {\n    get(key) {\n      return get(this, key, true);\n    },\n    get size() {\n      return size(this, true);\n    },\n    has(key) {\n      return has.call(this, key, true);\n    },\n    add: createReadonlyMethod(\"add\"),\n    set: createReadonlyMethod(\"set\"),\n    delete: createReadonlyMethod(\"delete\"),\n    clear: createReadonlyMethod(\"clear\"),\n    forEach: createForEach(true, false)\n  };\n  const shallowReadonlyInstrumentations2 = {\n    get(key) {\n      return get(this, key, true, true);\n    },\n    get size() {\n      return size(this, true);\n    },\n    has(key) {\n      return has.call(this, key, true);\n    },\n    add: createReadonlyMethod(\"add\"),\n    set: createReadonlyMethod(\"set\"),\n    delete: createReadonlyMethod(\"delete\"),\n    clear: createReadonlyMethod(\"clear\"),\n    forEach: createForEach(true, true)\n  };\n  const iteratorMethods = [\"keys\", \"values\", \"entries\", Symbol.iterator];\n  iteratorMethods.forEach((method) => {\n    mutableInstrumentations2[method] = createIterableMethod(\n      method,\n      false,\n      false\n    );\n    readonlyInstrumentations2[method] = createIterableMethod(\n      method,\n      true,\n      false\n    );\n    shallowInstrumentations2[method] = createIterableMethod(\n      method,\n      false,\n      true\n    );\n    shallowReadonlyInstrumentations2[method] = createIterableMethod(\n      method,\n      true,\n      true\n    );\n  });\n  return [\n    mutableInstrumentations2,\n    readonlyInstrumentations2,\n    shallowInstrumentations2,\n    shallowReadonlyInstrumentations2\n  ];\n}\nconst [\n  mutableInstrumentations,\n  readonlyInstrumentations,\n  shallowInstrumentations,\n  shallowReadonlyInstrumentations\n] = /* @__PURE__ */ createInstrumentations();\nfunction createInstrumentationGetter(isReadonly, shallow) {\n  const instrumentations = shallow ? isReadonly ? shallowReadonlyInstrumentations : shallowInstrumentations : isReadonly ? readonlyInstrumentations : mutableInstrumentations;\n  return (target, key, receiver) => {\n    if (key === \"__v_isReactive\") {\n      return !isReadonly;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly;\n    } else if (key === \"__v_raw\") {\n      return target;\n    }\n    return Reflect.get(\n      hasOwn(instrumentations, key) && key in target ? instrumentations : target,\n      key,\n      receiver\n    );\n  };\n}\nconst mutableCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, false)\n};\nconst shallowCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, true)\n};\nconst readonlyCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(true, false)\n};\nconst shallowReadonlyCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(true, true)\n};\nfunction checkIdentityKeys(target, has2, key) {\n  const rawKey = toRaw(key);\n  if (rawKey !== key && has2.call(target, rawKey)) {\n    const type = toRawType(target);\n    console.warn(\n      `Reactive ${type} contains both the raw and reactive versions of the same object${type === `Map` ? ` as keys` : ``}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`\n    );\n  }\n}\n\nconst reactiveMap = /* @__PURE__ */ new WeakMap();\nconst shallowReactiveMap = /* @__PURE__ */ new WeakMap();\nconst readonlyMap = /* @__PURE__ */ new WeakMap();\nconst shallowReadonlyMap = /* @__PURE__ */ new WeakMap();\nfunction targetTypeMap(rawType) {\n  switch (rawType) {\n    case \"Object\":\n    case \"Array\":\n      return 1 /* COMMON */;\n    case \"Map\":\n    case \"Set\":\n    case \"WeakMap\":\n    case \"WeakSet\":\n      return 2 /* COLLECTION */;\n    default:\n      return 0 /* INVALID */;\n  }\n}\nfunction getTargetType(value) {\n  return value[\"__v_skip\"] || !Object.isExtensible(value) ? 0 /* INVALID */ : targetTypeMap(toRawType(value));\n}\nfunction reactive(target) {\n  if (isReadonly(target)) {\n    return target;\n  }\n  return createReactiveObject(\n    target,\n    false,\n    mutableHandlers,\n    mutableCollectionHandlers,\n    reactiveMap\n  );\n}\nfunction shallowReactive(target) {\n  return createReactiveObject(\n    target,\n    false,\n    shallowReactiveHandlers,\n    shallowCollectionHandlers,\n    shallowReactiveMap\n  );\n}\nfunction readonly(target) {\n  return createReactiveObject(\n    target,\n    true,\n    readonlyHandlers,\n    readonlyCollectionHandlers,\n    readonlyMap\n  );\n}\nfunction shallowReadonly(target) {\n  return createReactiveObject(\n    target,\n    true,\n    shallowReadonlyHandlers,\n    shallowReadonlyCollectionHandlers,\n    shallowReadonlyMap\n  );\n}\nfunction createReactiveObject(target, isReadonly2, baseHandlers, collectionHandlers, proxyMap) {\n  if (!isObject(target)) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      console.warn(`value cannot be made reactive: ${String(target)}`);\n    }\n    return target;\n  }\n  if (target[\"__v_raw\"] && !(isReadonly2 && target[\"__v_isReactive\"])) {\n    return target;\n  }\n  const existingProxy = proxyMap.get(target);\n  if (existingProxy) {\n    return existingProxy;\n  }\n  const targetType = getTargetType(target);\n  if (targetType === 0 /* INVALID */) {\n    return target;\n  }\n  const proxy = new Proxy(\n    target,\n    targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers\n  );\n  proxyMap.set(target, proxy);\n  return proxy;\n}\nfunction isReactive(value) {\n  if (isReadonly(value)) {\n    return isReactive(value[\"__v_raw\"]);\n  }\n  return !!(value && value[\"__v_isReactive\"]);\n}\nfunction isReadonly(value) {\n  return !!(value && value[\"__v_isReadonly\"]);\n}\nfunction isShallow(value) {\n  return !!(value && value[\"__v_isShallow\"]);\n}\nfunction isProxy(value) {\n  return isReactive(value) || isReadonly(value);\n}\nfunction toRaw(observed) {\n  const raw = observed && observed[\"__v_raw\"];\n  return raw ? toRaw(raw) : observed;\n}\nfunction markRaw(value) {\n  def(value, \"__v_skip\", true);\n  return value;\n}\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\n\nfunction trackRefValue(ref2) {\n  if (shouldTrack && activeEffect) {\n    ref2 = toRaw(ref2);\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      trackEffects(ref2.dep || (ref2.dep = createDep()), {\n        target: ref2,\n        type: \"get\",\n        key: \"value\"\n      });\n    } else {\n      trackEffects(ref2.dep || (ref2.dep = createDep()));\n    }\n  }\n}\nfunction triggerRefValue(ref2, newVal) {\n  ref2 = toRaw(ref2);\n  const dep = ref2.dep;\n  if (dep) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      triggerEffects(dep, {\n        target: ref2,\n        type: \"set\",\n        key: \"value\",\n        newValue: newVal\n      });\n    } else {\n      triggerEffects(dep);\n    }\n  }\n}\nfunction isRef(r) {\n  return !!(r && r.__v_isRef === true);\n}\nfunction ref(value) {\n  return createRef(value, false);\n}\nfunction shallowRef(value) {\n  return createRef(value, true);\n}\nfunction createRef(rawValue, shallow) {\n  if (isRef(rawValue)) {\n    return rawValue;\n  }\n  return new RefImpl(rawValue, shallow);\n}\nclass RefImpl {\n  constructor(value, __v_isShallow) {\n    this.__v_isShallow = __v_isShallow;\n    this.dep = void 0;\n    this.__v_isRef = true;\n    this._rawValue = __v_isShallow ? value : toRaw(value);\n    this._value = __v_isShallow ? value : toReactive(value);\n  }\n  get value() {\n    trackRefValue(this);\n    return this._value;\n  }\n  set value(newVal) {\n    const useDirectValue = this.__v_isShallow || isShallow(newVal) || isReadonly(newVal);\n    newVal = useDirectValue ? newVal : toRaw(newVal);\n    if (hasChanged(newVal, this._rawValue)) {\n      this._rawValue = newVal;\n      this._value = useDirectValue ? newVal : toReactive(newVal);\n      triggerRefValue(this, newVal);\n    }\n  }\n}\nfunction triggerRef(ref2) {\n  triggerRefValue(ref2, !!(process.env.NODE_ENV !== \"production\") ? ref2.value : void 0);\n}\nfunction unref(ref2) {\n  return isRef(ref2) ? ref2.value : ref2;\n}\nfunction toValue(source) {\n  return isFunction(source) ? source() : unref(source);\n}\nconst shallowUnwrapHandlers = {\n  get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\n  set: (target, key, value, receiver) => {\n    const oldValue = target[key];\n    if (isRef(oldValue) && !isRef(value)) {\n      oldValue.value = value;\n      return true;\n    } else {\n      return Reflect.set(target, key, value, receiver);\n    }\n  }\n};\nfunction proxyRefs(objectWithRefs) {\n  return isReactive(objectWithRefs) ? objectWithRefs : new Proxy(objectWithRefs, shallowUnwrapHandlers);\n}\nclass CustomRefImpl {\n  constructor(factory) {\n    this.dep = void 0;\n    this.__v_isRef = true;\n    const { get, set } = factory(\n      () => trackRefValue(this),\n      () => triggerRefValue(this)\n    );\n    this._get = get;\n    this._set = set;\n  }\n  get value() {\n    return this._get();\n  }\n  set value(newVal) {\n    this._set(newVal);\n  }\n}\nfunction customRef(factory) {\n  return new CustomRefImpl(factory);\n}\nfunction toRefs(object) {\n  if (!!(process.env.NODE_ENV !== \"production\") && !isProxy(object)) {\n    console.warn(`toRefs() expects a reactive object but received a plain one.`);\n  }\n  const ret = isArray(object) ? new Array(object.length) : {};\n  for (const key in object) {\n    ret[key] = propertyToRef(object, key);\n  }\n  return ret;\n}\nclass ObjectRefImpl {\n  constructor(_object, _key, _defaultValue) {\n    this._object = _object;\n    this._key = _key;\n    this._defaultValue = _defaultValue;\n    this.__v_isRef = true;\n  }\n  get value() {\n    const val = this._object[this._key];\n    return val === void 0 ? this._defaultValue : val;\n  }\n  set value(newVal) {\n    this._object[this._key] = newVal;\n  }\n  get dep() {\n    return getDepFromReactive(toRaw(this._object), this._key);\n  }\n}\nclass GetterRefImpl {\n  constructor(_getter) {\n    this._getter = _getter;\n    this.__v_isRef = true;\n    this.__v_isReadonly = true;\n  }\n  get value() {\n    return this._getter();\n  }\n}\nfunction toRef(source, key, defaultValue) {\n  if (isRef(source)) {\n    return source;\n  } else if (isFunction(source)) {\n    return new GetterRefImpl(source);\n  } else if (isObject(source) && arguments.length > 1) {\n    return propertyToRef(source, key, defaultValue);\n  } else {\n    return ref(source);\n  }\n}\nfunction propertyToRef(source, key, defaultValue) {\n  const val = source[key];\n  return isRef(val) ? val : new ObjectRefImpl(\n    source,\n    key,\n    defaultValue\n  );\n}\n\nclass ComputedRefImpl {\n  constructor(getter, _setter, isReadonly, isSSR) {\n    this._setter = _setter;\n    this.dep = void 0;\n    this.__v_isRef = true;\n    this[\"__v_isReadonly\"] = false;\n    this._dirty = true;\n    this.effect = new ReactiveEffect(getter, () => {\n      if (!this._dirty) {\n        this._dirty = true;\n        triggerRefValue(this);\n      }\n    });\n    this.effect.computed = this;\n    this.effect.active = this._cacheable = !isSSR;\n    this[\"__v_isReadonly\"] = isReadonly;\n  }\n  get value() {\n    const self = toRaw(this);\n    trackRefValue(self);\n    if (self._dirty || !self._cacheable) {\n      self._dirty = false;\n      self._value = self.effect.run();\n    }\n    return self._value;\n  }\n  set value(newValue) {\n    this._setter(newValue);\n  }\n}\nfunction computed(getterOrOptions, debugOptions, isSSR = false) {\n  let getter;\n  let setter;\n  const onlyGetter = isFunction(getterOrOptions);\n  if (onlyGetter) {\n    getter = getterOrOptions;\n    setter = !!(process.env.NODE_ENV !== \"production\") ? () => {\n      console.warn(\"Write operation failed: computed value is readonly\");\n    } : NOOP;\n  } else {\n    getter = getterOrOptions.get;\n    setter = getterOrOptions.set;\n  }\n  const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR);\n  if (!!(process.env.NODE_ENV !== \"production\") && debugOptions && !isSSR) {\n    cRef.effect.onTrack = debugOptions.onTrack;\n    cRef.effect.onTrigger = debugOptions.onTrigger;\n  }\n  return cRef;\n}\n\nconst tick = /* @__PURE__ */ Promise.resolve();\nconst queue = [];\nlet queued = false;\nconst scheduler = (fn) => {\n  queue.push(fn);\n  if (!queued) {\n    queued = true;\n    tick.then(flush);\n  }\n};\nconst flush = () => {\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]();\n  }\n  queue.length = 0;\n  queued = false;\n};\nclass DeferredComputedRefImpl {\n  constructor(getter) {\n    this.dep = void 0;\n    this._dirty = true;\n    this.__v_isRef = true;\n    this[\"__v_isReadonly\"] = true;\n    let compareTarget;\n    let hasCompareTarget = false;\n    let scheduled = false;\n    this.effect = new ReactiveEffect(getter, (computedTrigger) => {\n      if (this.dep) {\n        if (computedTrigger) {\n          compareTarget = this._value;\n          hasCompareTarget = true;\n        } else if (!scheduled) {\n          const valueToCompare = hasCompareTarget ? compareTarget : this._value;\n          scheduled = true;\n          hasCompareTarget = false;\n          scheduler(() => {\n            if (this.effect.active && this._get() !== valueToCompare) {\n              triggerRefValue(this);\n            }\n            scheduled = false;\n          });\n        }\n        for (const e of this.dep) {\n          if (e.computed instanceof DeferredComputedRefImpl) {\n            e.scheduler(\n              true\n              /* computedTrigger */\n            );\n          }\n        }\n      }\n      this._dirty = true;\n    });\n    this.effect.computed = this;\n  }\n  _get() {\n    if (this._dirty) {\n      this._dirty = false;\n      return this._value = this.effect.run();\n    }\n    return this._value;\n  }\n  get value() {\n    trackRefValue(this);\n    return toRaw(this)._get();\n  }\n}\nfunction deferredComputed(getter) {\n  return new DeferredComputedRefImpl(getter);\n}\n\nexport { EffectScope, ITERATE_KEY, ReactiveEffect, computed, customRef, deferredComputed, effect, effectScope, enableTracking, getCurrentScope, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, onScopeDispose, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, toValue, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, getCurrentScope, isShallow as isShallow$1, isReactive, ReactiveEffect, ref, shallowReadonly, track, reactive, shallowReactive, trigger, isProxy, proxyRefs, markRaw, EffectScope, computed as computed$1, isReadonly } from '@vue/reactivity';\nexport { EffectScope, ReactiveEffect, customRef, effect, effectScope, getCurrentScope, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, onScopeDispose, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, toValue, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, NOOP, getGlobalThis, extend, EMPTY_OBJ, toHandlerKey, looseToNumber, hyphenate, camelize, isObject, isOn, hasOwn, isModelListener, toNumber, hasChanged, remove, isSet, isMap, isPlainObject, isBuiltInDirective, invokeArrayFns, isRegExp, capitalize, isGloballyWhitelisted, NO, def, isReservedProp, EMPTY_ARR, toRawType, makeMap, normalizeClass, normalizeStyle } from '@vue/shared';\nexport { camelize, capitalize, normalizeClass, normalizeProps, normalizeStyle, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\nfunction pushWarningContext(vnode) {\n  stack.push(vnode);\n}\nfunction popWarningContext() {\n  stack.pop();\n}\nfunction warn(msg, ...args) {\n  if (!!!(process.env.NODE_ENV !== \"production\"))\n    return;\n  pauseTracking();\n  const instance = stack.length ? stack[stack.length - 1].component : null;\n  const appWarnHandler = instance && instance.appContext.config.warnHandler;\n  const trace = getComponentTrace();\n  if (appWarnHandler) {\n    callWithErrorHandling(\n      appWarnHandler,\n      instance,\n      11,\n      [\n        msg + args.join(\"\"),\n        instance && instance.proxy,\n        trace.map(\n          ({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`\n        ).join(\"\\n\"),\n        trace\n      ]\n    );\n  } else {\n    const warnArgs = [`[Vue warn]: ${msg}`, ...args];\n    if (trace.length && // avoid spamming console during tests\n    true) {\n      warnArgs.push(`\n`, ...formatTrace(trace));\n    }\n    console.warn(...warnArgs);\n  }\n  resetTracking();\n}\nfunction getComponentTrace() {\n  let currentVNode = stack[stack.length - 1];\n  if (!currentVNode) {\n    return [];\n  }\n  const normalizedStack = [];\n  while (currentVNode) {\n    const last = normalizedStack[0];\n    if (last && last.vnode === currentVNode) {\n      last.recurseCount++;\n    } else {\n      normalizedStack.push({\n        vnode: currentVNode,\n        recurseCount: 0\n      });\n    }\n    const parentInstance = currentVNode.component && currentVNode.component.parent;\n    currentVNode = parentInstance && parentInstance.vnode;\n  }\n  return normalizedStack;\n}\nfunction formatTrace(trace) {\n  const logs = [];\n  trace.forEach((entry, i) => {\n    logs.push(...i === 0 ? [] : [`\n`], ...formatTraceEntry(entry));\n  });\n  return logs;\n}\nfunction formatTraceEntry({ vnode, recurseCount }) {\n  const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\n  const isRoot = vnode.component ? vnode.component.parent == null : false;\n  const open = ` at <${formatComponentName(\n    vnode.component,\n    vnode.type,\n    isRoot\n  )}`;\n  const close = `>` + postfix;\n  return vnode.props ? [open, ...formatProps(vnode.props), close] : [open + close];\n}\nfunction formatProps(props) {\n  const res = [];\n  const keys = Object.keys(props);\n  keys.slice(0, 3).forEach((key) => {\n    res.push(...formatProp(key, props[key]));\n  });\n  if (keys.length > 3) {\n    res.push(` ...`);\n  }\n  return res;\n}\nfunction formatProp(key, value, raw) {\n  if (isString(value)) {\n    value = JSON.stringify(value);\n    return raw ? value : [`${key}=${value}`];\n  } else if (typeof value === \"number\" || typeof value === \"boolean\" || value == null) {\n    return raw ? value : [`${key}=${value}`];\n  } else if (isRef(value)) {\n    value = formatProp(key, toRaw(value.value), true);\n    return raw ? value : [`${key}=Ref<`, value, `>`];\n  } else if (isFunction(value)) {\n    return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\n  } else {\n    value = toRaw(value);\n    return raw ? value : [`${key}=`, value];\n  }\n}\nfunction assertNumber(val, type) {\n  if (!!!(process.env.NODE_ENV !== \"production\"))\n    return;\n  if (val === void 0) {\n    return;\n  } else if (typeof val !== \"number\") {\n    warn(`${type} is not a valid number - got ${JSON.stringify(val)}.`);\n  } else if (isNaN(val)) {\n    warn(`${type} is NaN - the duration expression might be incorrect.`);\n  }\n}\n\nconst ErrorTypeStrings = {\n  [\"sp\"]: \"serverPrefetch hook\",\n  [\"bc\"]: \"beforeCreate hook\",\n  [\"c\"]: \"created hook\",\n  [\"bm\"]: \"beforeMount hook\",\n  [\"m\"]: \"mounted hook\",\n  [\"bu\"]: \"beforeUpdate hook\",\n  [\"u\"]: \"updated\",\n  [\"bum\"]: \"beforeUnmount hook\",\n  [\"um\"]: \"unmounted hook\",\n  [\"a\"]: \"activated hook\",\n  [\"da\"]: \"deactivated hook\",\n  [\"ec\"]: \"errorCaptured hook\",\n  [\"rtc\"]: \"renderTracked hook\",\n  [\"rtg\"]: \"renderTriggered hook\",\n  [0]: \"setup function\",\n  [1]: \"render function\",\n  [2]: \"watcher getter\",\n  [3]: \"watcher callback\",\n  [4]: \"watcher cleanup function\",\n  [5]: \"native event handler\",\n  [6]: \"component event handler\",\n  [7]: \"vnode hook\",\n  [8]: \"directive hook\",\n  [9]: \"transition hook\",\n  [10]: \"app errorHandler\",\n  [11]: \"app warnHandler\",\n  [12]: \"ref function\",\n  [13]: \"async component loader\",\n  [14]: \"scheduler flush. This is likely a Vue internals bug. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core\"\n};\nfunction callWithErrorHandling(fn, instance, type, args) {\n  let res;\n  try {\n    res = args ? fn(...args) : fn();\n  } catch (err) {\n    handleError(err, instance, type);\n  }\n  return res;\n}\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\n  if (isFunction(fn)) {\n    const res = callWithErrorHandling(fn, instance, type, args);\n    if (res && isPromise(res)) {\n      res.catch((err) => {\n        handleError(err, instance, type);\n      });\n    }\n    return res;\n  }\n  const values = [];\n  for (let i = 0; i < fn.length; i++) {\n    values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\n  }\n  return values;\n}\nfunction handleError(err, instance, type, throwInDev = true) {\n  const contextVNode = instance ? instance.vnode : null;\n  if (instance) {\n    let cur = instance.parent;\n    const exposedInstance = instance.proxy;\n    const errorInfo = !!(process.env.NODE_ENV !== \"production\") ? ErrorTypeStrings[type] : type;\n    while (cur) {\n      const errorCapturedHooks = cur.ec;\n      if (errorCapturedHooks) {\n        for (let i = 0; i < errorCapturedHooks.length; i++) {\n          if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\n            return;\n          }\n        }\n      }\n      cur = cur.parent;\n    }\n    const appErrorHandler = instance.appContext.config.errorHandler;\n    if (appErrorHandler) {\n      callWithErrorHandling(\n        appErrorHandler,\n        null,\n        10,\n        [err, exposedInstance, errorInfo]\n      );\n      return;\n    }\n  }\n  logError(err, type, contextVNode, throwInDev);\n}\nfunction logError(err, type, contextVNode, throwInDev = true) {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    const info = ErrorTypeStrings[type];\n    if (contextVNode) {\n      pushWarningContext(contextVNode);\n    }\n    warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\n    if (contextVNode) {\n      popWarningContext();\n    }\n    if (throwInDev) {\n      throw err;\n    } else {\n      console.error(err);\n    }\n  } else {\n    console.error(err);\n  }\n}\n\nlet isFlushing = false;\nlet isFlushPending = false;\nconst queue = [];\nlet flushIndex = 0;\nconst pendingPostFlushCbs = [];\nlet activePostFlushCbs = null;\nlet postFlushIndex = 0;\nconst resolvedPromise = /* @__PURE__ */ Promise.resolve();\nlet currentFlushPromise = null;\nconst RECURSION_LIMIT = 100;\nfunction nextTick(fn) {\n  const p = currentFlushPromise || resolvedPromise;\n  return fn ? p.then(this ? fn.bind(this) : fn) : p;\n}\nfunction findInsertionIndex(id) {\n  let start = flushIndex + 1;\n  let end = queue.length;\n  while (start < end) {\n    const middle = start + end >>> 1;\n    const middleJobId = getId(queue[middle]);\n    middleJobId < id ? start = middle + 1 : end = middle;\n  }\n  return start;\n}\nfunction queueJob(job) {\n  if (!queue.length || !queue.includes(\n    job,\n    isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex\n  )) {\n    if (job.id == null) {\n      queue.push(job);\n    } else {\n      queue.splice(findInsertionIndex(job.id), 0, job);\n    }\n    queueFlush();\n  }\n}\nfunction queueFlush() {\n  if (!isFlushing && !isFlushPending) {\n    isFlushPending = true;\n    currentFlushPromise = resolvedPromise.then(flushJobs);\n  }\n}\nfunction invalidateJob(job) {\n  const i = queue.indexOf(job);\n  if (i > flushIndex) {\n    queue.splice(i, 1);\n  }\n}\nfunction queuePostFlushCb(cb) {\n  if (!isArray(cb)) {\n    if (!activePostFlushCbs || !activePostFlushCbs.includes(\n      cb,\n      cb.allowRecurse ? postFlushIndex + 1 : postFlushIndex\n    )) {\n      pendingPostFlushCbs.push(cb);\n    }\n  } else {\n    pendingPostFlushCbs.push(...cb);\n  }\n  queueFlush();\n}\nfunction flushPreFlushCbs(seen, i = isFlushing ? flushIndex + 1 : 0) {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    seen = seen || /* @__PURE__ */ new Map();\n  }\n  for (; i < queue.length; i++) {\n    const cb = queue[i];\n    if (cb && cb.pre) {\n      if (!!(process.env.NODE_ENV !== \"production\") && checkRecursiveUpdates(seen, cb)) {\n        continue;\n      }\n      queue.splice(i, 1);\n      i--;\n      cb();\n    }\n  }\n}\nfunction flushPostFlushCbs(seen) {\n  if (pendingPostFlushCbs.length) {\n    const deduped = [...new Set(pendingPostFlushCbs)];\n    pendingPostFlushCbs.length = 0;\n    if (activePostFlushCbs) {\n      activePostFlushCbs.push(...deduped);\n      return;\n    }\n    activePostFlushCbs = deduped;\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      seen = seen || /* @__PURE__ */ new Map();\n    }\n    activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\n    for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\n      if (!!(process.env.NODE_ENV !== \"production\") && checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex])) {\n        continue;\n      }\n      activePostFlushCbs[postFlushIndex]();\n    }\n    activePostFlushCbs = null;\n    postFlushIndex = 0;\n  }\n}\nconst getId = (job) => job.id == null ? Infinity : job.id;\nconst comparator = (a, b) => {\n  const diff = getId(a) - getId(b);\n  if (diff === 0) {\n    if (a.pre && !b.pre)\n      return -1;\n    if (b.pre && !a.pre)\n      return 1;\n  }\n  return diff;\n};\nfunction flushJobs(seen) {\n  isFlushPending = false;\n  isFlushing = true;\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    seen = seen || /* @__PURE__ */ new Map();\n  }\n  queue.sort(comparator);\n  const check = !!(process.env.NODE_ENV !== \"production\") ? (job) => checkRecursiveUpdates(seen, job) : NOOP;\n  try {\n    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\n      const job = queue[flushIndex];\n      if (job && job.active !== false) {\n        if (!!(process.env.NODE_ENV !== \"production\") && check(job)) {\n          continue;\n        }\n        callWithErrorHandling(job, null, 14);\n      }\n    }\n  } finally {\n    flushIndex = 0;\n    queue.length = 0;\n    flushPostFlushCbs(seen);\n    isFlushing = false;\n    currentFlushPromise = null;\n    if (queue.length || pendingPostFlushCbs.length) {\n      flushJobs(seen);\n    }\n  }\n}\nfunction checkRecursiveUpdates(seen, fn) {\n  if (!seen.has(fn)) {\n    seen.set(fn, 1);\n  } else {\n    const count = seen.get(fn);\n    if (count > RECURSION_LIMIT) {\n      const instance = fn.ownerInstance;\n      const componentName = instance && getComponentName(instance.type);\n      warn(\n        `Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function.`\n      );\n      return true;\n    } else {\n      seen.set(fn, count + 1);\n    }\n  }\n}\n\nlet isHmrUpdating = false;\nconst hmrDirtyComponents = /* @__PURE__ */ new Set();\nif (!!(process.env.NODE_ENV !== \"production\")) {\n  getGlobalThis().__VUE_HMR_RUNTIME__ = {\n    createRecord: tryWrap(createRecord),\n    rerender: tryWrap(rerender),\n    reload: tryWrap(reload)\n  };\n}\nconst map = /* @__PURE__ */ new Map();\nfunction registerHMR(instance) {\n  const id = instance.type.__hmrId;\n  let record = map.get(id);\n  if (!record) {\n    createRecord(id, instance.type);\n    record = map.get(id);\n  }\n  record.instances.add(instance);\n}\nfunction unregisterHMR(instance) {\n  map.get(instance.type.__hmrId).instances.delete(instance);\n}\nfunction createRecord(id, initialDef) {\n  if (map.has(id)) {\n    return false;\n  }\n  map.set(id, {\n    initialDef: normalizeClassComponent(initialDef),\n    instances: /* @__PURE__ */ new Set()\n  });\n  return true;\n}\nfunction normalizeClassComponent(component) {\n  return isClassComponent(component) ? component.__vccOpts : component;\n}\nfunction rerender(id, newRender) {\n  const record = map.get(id);\n  if (!record) {\n    return;\n  }\n  record.initialDef.render = newRender;\n  [...record.instances].forEach((instance) => {\n    if (newRender) {\n      instance.render = newRender;\n      normalizeClassComponent(instance.type).render = newRender;\n    }\n    instance.renderCache = [];\n    isHmrUpdating = true;\n    instance.update();\n    isHmrUpdating = false;\n  });\n}\nfunction reload(id, newComp) {\n  const record = map.get(id);\n  if (!record)\n    return;\n  newComp = normalizeClassComponent(newComp);\n  updateComponentDef(record.initialDef, newComp);\n  const instances = [...record.instances];\n  for (const instance of instances) {\n    const oldComp = normalizeClassComponent(instance.type);\n    if (!hmrDirtyComponents.has(oldComp)) {\n      if (oldComp !== record.initialDef) {\n        updateComponentDef(oldComp, newComp);\n      }\n      hmrDirtyComponents.add(oldComp);\n    }\n    instance.appContext.propsCache.delete(instance.type);\n    instance.appContext.emitsCache.delete(instance.type);\n    instance.appContext.optionsCache.delete(instance.type);\n    if (instance.ceReload) {\n      hmrDirtyComponents.add(oldComp);\n      instance.ceReload(newComp.styles);\n      hmrDirtyComponents.delete(oldComp);\n    } else if (instance.parent) {\n      queueJob(instance.parent.update);\n    } else if (instance.appContext.reload) {\n      instance.appContext.reload();\n    } else if (typeof window !== \"undefined\") {\n      window.location.reload();\n    } else {\n      console.warn(\n        \"[HMR] Root or manually mounted instance modified. Full reload required.\"\n      );\n    }\n  }\n  queuePostFlushCb(() => {\n    for (const instance of instances) {\n      hmrDirtyComponents.delete(\n        normalizeClassComponent(instance.type)\n      );\n    }\n  });\n}\nfunction updateComponentDef(oldComp, newComp) {\n  extend(oldComp, newComp);\n  for (const key in oldComp) {\n    if (key !== \"__file\" && !(key in newComp)) {\n      delete oldComp[key];\n    }\n  }\n}\nfunction tryWrap(fn) {\n  return (id, arg) => {\n    try {\n      return fn(id, arg);\n    } catch (e) {\n      console.error(e);\n      console.warn(\n        `[HMR] Something went wrong during Vue component hot-reload. Full reload required.`\n      );\n    }\n  };\n}\n\nlet devtools;\nlet buffer = [];\nlet devtoolsNotInstalled = false;\nfunction emit$1(event, ...args) {\n  if (devtools) {\n    devtools.emit(event, ...args);\n  } else if (!devtoolsNotInstalled) {\n    buffer.push({ event, args });\n  }\n}\nfunction setDevtoolsHook(hook, target) {\n  var _a, _b;\n  devtools = hook;\n  if (devtools) {\n    devtools.enabled = true;\n    buffer.forEach(({ event, args }) => devtools.emit(event, ...args));\n    buffer = [];\n  } else if (\n    // handle late devtools injection - only do this if we are in an actual\n    // browser environment to avoid the timer handle stalling test runner exit\n    // (#4815)\n    typeof window !== \"undefined\" && // some envs mock window but not fully\n    window.HTMLElement && // also exclude jsdom\n    !((_b = (_a = window.navigator) == null ? void 0 : _a.userAgent) == null ? void 0 : _b.includes(\"jsdom\"))\n  ) {\n    const replay = target.__VUE_DEVTOOLS_HOOK_REPLAY__ = target.__VUE_DEVTOOLS_HOOK_REPLAY__ || [];\n    replay.push((newHook) => {\n      setDevtoolsHook(newHook, target);\n    });\n    setTimeout(() => {\n      if (!devtools) {\n        target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null;\n        devtoolsNotInstalled = true;\n        buffer = [];\n      }\n    }, 3e3);\n  } else {\n    devtoolsNotInstalled = true;\n    buffer = [];\n  }\n}\nfunction devtoolsInitApp(app, version) {\n  emit$1(\"app:init\" /* APP_INIT */, app, version, {\n    Fragment,\n    Text,\n    Comment,\n    Static\n  });\n}\nfunction devtoolsUnmountApp(app) {\n  emit$1(\"app:unmount\" /* APP_UNMOUNT */, app);\n}\nconst devtoolsComponentAdded = /* @__PURE__ */ createDevtoolsComponentHook(\n  \"component:added\" /* COMPONENT_ADDED */\n);\nconst devtoolsComponentUpdated = /* @__PURE__ */ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\nconst _devtoolsComponentRemoved = /* @__PURE__ */ createDevtoolsComponentHook(\n  \"component:removed\" /* COMPONENT_REMOVED */\n);\nconst devtoolsComponentRemoved = (component) => {\n  if (devtools && typeof devtools.cleanupBuffer === \"function\" && // remove the component if it wasn't buffered\n  !devtools.cleanupBuffer(component)) {\n    _devtoolsComponentRemoved(component);\n  }\n};\nfunction createDevtoolsComponentHook(hook) {\n  return (component) => {\n    emit$1(\n      hook,\n      component.appContext.app,\n      component.uid,\n      component.parent ? component.parent.uid : void 0,\n      component\n    );\n  };\n}\nconst devtoolsPerfStart = /* @__PURE__ */ createDevtoolsPerformanceHook(\n  \"perf:start\" /* PERFORMANCE_START */\n);\nconst devtoolsPerfEnd = /* @__PURE__ */ createDevtoolsPerformanceHook(\n  \"perf:end\" /* PERFORMANCE_END */\n);\nfunction createDevtoolsPerformanceHook(hook) {\n  return (component, type, time) => {\n    emit$1(hook, component.appContext.app, component.uid, component, type, time);\n  };\n}\nfunction devtoolsComponentEmit(component, event, params) {\n  emit$1(\n    \"component:emit\" /* COMPONENT_EMIT */,\n    component.appContext.app,\n    component,\n    event,\n    params\n  );\n}\n\nfunction emit(instance, event, ...rawArgs) {\n  if (instance.isUnmounted)\n    return;\n  const props = instance.vnode.props || EMPTY_OBJ;\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    const {\n      emitsOptions,\n      propsOptions: [propsOptions]\n    } = instance;\n    if (emitsOptions) {\n      if (!(event in emitsOptions) && true) {\n        if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\n          warn(\n            `Component emitted event \"${event}\" but it is neither declared in the emits option nor as an \"${toHandlerKey(event)}\" prop.`\n          );\n        }\n      } else {\n        const validator = emitsOptions[event];\n        if (isFunction(validator)) {\n          const isValid = validator(...rawArgs);\n          if (!isValid) {\n            warn(\n              `Invalid event arguments: event validation failed for event \"${event}\".`\n            );\n          }\n        }\n      }\n    }\n  }\n  let args = rawArgs;\n  const isModelListener = event.startsWith(\"update:\");\n  const modelArg = isModelListener && event.slice(7);\n  if (modelArg && modelArg in props) {\n    const modifiersKey = `${modelArg === \"modelValue\" ? \"model\" : modelArg}Modifiers`;\n    const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\n    if (trim) {\n      args = rawArgs.map((a) => isString(a) ? a.trim() : a);\n    }\n    if (number) {\n      args = rawArgs.map(looseToNumber);\n    }\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n    devtoolsComponentEmit(instance, event, args);\n  }\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    const lowerCaseEvent = event.toLowerCase();\n    if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\n      warn(\n        `Event \"${lowerCaseEvent}\" is emitted in component ${formatComponentName(\n          instance,\n          instance.type\n        )} but the handler is registered for \"${event}\". Note that HTML attributes are case-insensitive and you cannot use v-on to listen to camelCase events when using in-DOM templates. You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`\n      );\n    }\n  }\n  let handlerName;\n  let handler = props[handlerName = toHandlerKey(event)] || // also try camelCase event handler (#2249)\n  props[handlerName = toHandlerKey(camelize(event))];\n  if (!handler && isModelListener) {\n    handler = props[handlerName = toHandlerKey(hyphenate(event))];\n  }\n  if (handler) {\n    callWithAsyncErrorHandling(\n      handler,\n      instance,\n      6,\n      args\n    );\n  }\n  const onceHandler = props[handlerName + `Once`];\n  if (onceHandler) {\n    if (!instance.emitted) {\n      instance.emitted = {};\n    } else if (instance.emitted[handlerName]) {\n      return;\n    }\n    instance.emitted[handlerName] = true;\n    callWithAsyncErrorHandling(\n      onceHandler,\n      instance,\n      6,\n      args\n    );\n  }\n}\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\n  const cache = appContext.emitsCache;\n  const cached = cache.get(comp);\n  if (cached !== void 0) {\n    return cached;\n  }\n  const raw = comp.emits;\n  let normalized = {};\n  let hasExtends = false;\n  if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\n    const extendEmits = (raw2) => {\n      const normalizedFromExtend = normalizeEmitsOptions(raw2, appContext, true);\n      if (normalizedFromExtend) {\n        hasExtends = true;\n        extend(normalized, normalizedFromExtend);\n      }\n    };\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendEmits);\n    }\n    if (comp.extends) {\n      extendEmits(comp.extends);\n    }\n    if (comp.mixins) {\n      comp.mixins.forEach(extendEmits);\n    }\n  }\n  if (!raw && !hasExtends) {\n    if (isObject(comp)) {\n      cache.set(comp, null);\n    }\n    return null;\n  }\n  if (isArray(raw)) {\n    raw.forEach((key) => normalized[key] = null);\n  } else {\n    extend(normalized, raw);\n  }\n  if (isObject(comp)) {\n    cache.set(comp, normalized);\n  }\n  return normalized;\n}\nfunction isEmitListener(options, key) {\n  if (!options || !isOn(key)) {\n    return false;\n  }\n  key = key.slice(2).replace(/Once$/, \"\");\n  return hasOwn(options, key[0].toLowerCase() + key.slice(1)) || hasOwn(options, hyphenate(key)) || hasOwn(options, key);\n}\n\nlet currentRenderingInstance = null;\nlet currentScopeId = null;\nfunction setCurrentRenderingInstance(instance) {\n  const prev = currentRenderingInstance;\n  currentRenderingInstance = instance;\n  currentScopeId = instance && instance.type.__scopeId || null;\n  return prev;\n}\nfunction pushScopeId(id) {\n  currentScopeId = id;\n}\nfunction popScopeId() {\n  currentScopeId = null;\n}\nconst withScopeId = (_id) => withCtx;\nfunction withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot) {\n  if (!ctx)\n    return fn;\n  if (fn._n) {\n    return fn;\n  }\n  const renderFnWithContext = (...args) => {\n    if (renderFnWithContext._d) {\n      setBlockTracking(-1);\n    }\n    const prevInstance = setCurrentRenderingInstance(ctx);\n    let res;\n    try {\n      res = fn(...args);\n    } finally {\n      setCurrentRenderingInstance(prevInstance);\n      if (renderFnWithContext._d) {\n        setBlockTracking(1);\n      }\n    }\n    if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n      devtoolsComponentUpdated(ctx);\n    }\n    return res;\n  };\n  renderFnWithContext._n = true;\n  renderFnWithContext._c = true;\n  renderFnWithContext._d = true;\n  return renderFnWithContext;\n}\n\nlet accessedAttrs = false;\nfunction markAttrsAccessed() {\n  accessedAttrs = true;\n}\nfunction renderComponentRoot(instance) {\n  const {\n    type: Component,\n    vnode,\n    proxy,\n    withProxy,\n    props,\n    propsOptions: [propsOptions],\n    slots,\n    attrs,\n    emit,\n    render,\n    renderCache,\n    data,\n    setupState,\n    ctx,\n    inheritAttrs\n  } = instance;\n  let result;\n  let fallthroughAttrs;\n  const prev = setCurrentRenderingInstance(instance);\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    accessedAttrs = false;\n  }\n  try {\n    if (vnode.shapeFlag & 4) {\n      const proxyToUse = withProxy || proxy;\n      result = normalizeVNode(\n        render.call(\n          proxyToUse,\n          proxyToUse,\n          renderCache,\n          props,\n          setupState,\n          data,\n          ctx\n        )\n      );\n      fallthroughAttrs = attrs;\n    } else {\n      const render2 = Component;\n      if (!!(process.env.NODE_ENV !== \"production\") && attrs === props) {\n        markAttrsAccessed();\n      }\n      result = normalizeVNode(\n        render2.length > 1 ? render2(\n          props,\n          !!(process.env.NODE_ENV !== \"production\") ? {\n            get attrs() {\n              markAttrsAccessed();\n              return attrs;\n            },\n            slots,\n            emit\n          } : { attrs, slots, emit }\n        ) : render2(\n          props,\n          null\n          /* we know it doesn't need it */\n        )\n      );\n      fallthroughAttrs = Component.props ? attrs : getFunctionalFallthrough(attrs);\n    }\n  } catch (err) {\n    blockStack.length = 0;\n    handleError(err, instance, 1);\n    result = createVNode(Comment);\n  }\n  let root = result;\n  let setRoot = void 0;\n  if (!!(process.env.NODE_ENV !== \"production\") && result.patchFlag > 0 && result.patchFlag & 2048) {\n    [root, setRoot] = getChildRoot(result);\n  }\n  if (fallthroughAttrs && inheritAttrs !== false) {\n    const keys = Object.keys(fallthroughAttrs);\n    const { shapeFlag } = root;\n    if (keys.length) {\n      if (shapeFlag & (1 | 6)) {\n        if (propsOptions && keys.some(isModelListener)) {\n          fallthroughAttrs = filterModelListeners(\n            fallthroughAttrs,\n            propsOptions\n          );\n        }\n        root = cloneVNode(root, fallthroughAttrs);\n      } else if (!!(process.env.NODE_ENV !== \"production\") && !accessedAttrs && root.type !== Comment) {\n        const allAttrs = Object.keys(attrs);\n        const eventAttrs = [];\n        const extraAttrs = [];\n        for (let i = 0, l = allAttrs.length; i < l; i++) {\n          const key = allAttrs[i];\n          if (isOn(key)) {\n            if (!isModelListener(key)) {\n              eventAttrs.push(key[2].toLowerCase() + key.slice(3));\n            }\n          } else {\n            extraAttrs.push(key);\n          }\n        }\n        if (extraAttrs.length) {\n          warn(\n            `Extraneous non-props attributes (${extraAttrs.join(\", \")}) were passed to component but could not be automatically inherited because component renders fragment or text root nodes.`\n          );\n        }\n        if (eventAttrs.length) {\n          warn(\n            `Extraneous non-emits event listeners (${eventAttrs.join(\", \")}) were passed to component but could not be automatically inherited because component renders fragment or text root nodes. If the listener is intended to be a component custom event listener only, declare it using the \"emits\" option.`\n          );\n        }\n      }\n    }\n  }\n  if (vnode.dirs) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !isElementRoot(root)) {\n      warn(\n        `Runtime directive used on component with non-element root node. The directives will not function as intended.`\n      );\n    }\n    root = cloneVNode(root);\n    root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\n  }\n  if (vnode.transition) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !isElementRoot(root)) {\n      warn(\n        `Component inside <Transition> renders non-element root node that cannot be animated.`\n      );\n    }\n    root.transition = vnode.transition;\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && setRoot) {\n    setRoot(root);\n  } else {\n    result = root;\n  }\n  setCurrentRenderingInstance(prev);\n  return result;\n}\nconst getChildRoot = (vnode) => {\n  const rawChildren = vnode.children;\n  const dynamicChildren = vnode.dynamicChildren;\n  const childRoot = filterSingleRoot(rawChildren);\n  if (!childRoot) {\n    return [vnode, void 0];\n  }\n  const index = rawChildren.indexOf(childRoot);\n  const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\n  const setRoot = (updatedRoot) => {\n    rawChildren[index] = updatedRoot;\n    if (dynamicChildren) {\n      if (dynamicIndex > -1) {\n        dynamicChildren[dynamicIndex] = updatedRoot;\n      } else if (updatedRoot.patchFlag > 0) {\n        vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\n      }\n    }\n  };\n  return [normalizeVNode(childRoot), setRoot];\n};\nfunction filterSingleRoot(children) {\n  let singleRoot;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (isVNode(child)) {\n      if (child.type !== Comment || child.children === \"v-if\") {\n        if (singleRoot) {\n          return;\n        } else {\n          singleRoot = child;\n        }\n      }\n    } else {\n      return;\n    }\n  }\n  return singleRoot;\n}\nconst getFunctionalFallthrough = (attrs) => {\n  let res;\n  for (const key in attrs) {\n    if (key === \"class\" || key === \"style\" || isOn(key)) {\n      (res || (res = {}))[key] = attrs[key];\n    }\n  }\n  return res;\n};\nconst filterModelListeners = (attrs, props) => {\n  const res = {};\n  for (const key in attrs) {\n    if (!isModelListener(key) || !(key.slice(9) in props)) {\n      res[key] = attrs[key];\n    }\n  }\n  return res;\n};\nconst isElementRoot = (vnode) => {\n  return vnode.shapeFlag & (6 | 1) || vnode.type === Comment;\n};\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\n  const { props: prevProps, children: prevChildren, component } = prevVNode;\n  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\n  const emits = component.emitsOptions;\n  if (!!(process.env.NODE_ENV !== \"production\") && (prevChildren || nextChildren) && isHmrUpdating) {\n    return true;\n  }\n  if (nextVNode.dirs || nextVNode.transition) {\n    return true;\n  }\n  if (optimized && patchFlag >= 0) {\n    if (patchFlag & 1024) {\n      return true;\n    }\n    if (patchFlag & 16) {\n      if (!prevProps) {\n        return !!nextProps;\n      }\n      return hasPropsChanged(prevProps, nextProps, emits);\n    } else if (patchFlag & 8) {\n      const dynamicProps = nextVNode.dynamicProps;\n      for (let i = 0; i < dynamicProps.length; i++) {\n        const key = dynamicProps[i];\n        if (nextProps[key] !== prevProps[key] && !isEmitListener(emits, key)) {\n          return true;\n        }\n      }\n    }\n  } else {\n    if (prevChildren || nextChildren) {\n      if (!nextChildren || !nextChildren.$stable) {\n        return true;\n      }\n    }\n    if (prevProps === nextProps) {\n      return false;\n    }\n    if (!prevProps) {\n      return !!nextProps;\n    }\n    if (!nextProps) {\n      return true;\n    }\n    return hasPropsChanged(prevProps, nextProps, emits);\n  }\n  return false;\n}\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\n  const nextKeys = Object.keys(nextProps);\n  if (nextKeys.length !== Object.keys(prevProps).length) {\n    return true;\n  }\n  for (let i = 0; i < nextKeys.length; i++) {\n    const key = nextKeys[i];\n    if (nextProps[key] !== prevProps[key] && !isEmitListener(emitsOptions, key)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction updateHOCHostEl({ vnode, parent }, el) {\n  while (parent && parent.subTree === vnode) {\n    (vnode = parent.vnode).el = el;\n    parent = parent.parent;\n  }\n}\n\nconst isSuspense = (type) => type.__isSuspense;\nconst SuspenseImpl = {\n  name: \"Suspense\",\n  // In order to make Suspense tree-shakable, we need to avoid importing it\n  // directly in the renderer. The renderer checks for the __isSuspense flag\n  // on a vnode's type and calls the `process` method, passing in renderer\n  // internals.\n  __isSuspense: true,\n  process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\n    if (n1 == null) {\n      mountSuspense(\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized,\n        rendererInternals\n      );\n    } else {\n      patchSuspense(\n        n1,\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        isSVG,\n        slotScopeIds,\n        optimized,\n        rendererInternals\n      );\n    }\n  },\n  hydrate: hydrateSuspense,\n  create: createSuspenseBoundary,\n  normalize: normalizeSuspenseChildren\n};\nconst Suspense = SuspenseImpl ;\nfunction triggerEvent(vnode, name) {\n  const eventListener = vnode.props && vnode.props[name];\n  if (isFunction(eventListener)) {\n    eventListener();\n  }\n}\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\n  const {\n    p: patch,\n    o: { createElement }\n  } = rendererInternals;\n  const hiddenContainer = createElement(\"div\");\n  const suspense = vnode.suspense = createSuspenseBoundary(\n    vnode,\n    parentSuspense,\n    parentComponent,\n    container,\n    hiddenContainer,\n    anchor,\n    isSVG,\n    slotScopeIds,\n    optimized,\n    rendererInternals\n  );\n  patch(\n    null,\n    suspense.pendingBranch = vnode.ssContent,\n    hiddenContainer,\n    null,\n    parentComponent,\n    suspense,\n    isSVG,\n    slotScopeIds\n  );\n  if (suspense.deps > 0) {\n    triggerEvent(vnode, \"onPending\");\n    triggerEvent(vnode, \"onFallback\");\n    patch(\n      null,\n      vnode.ssFallback,\n      container,\n      anchor,\n      parentComponent,\n      null,\n      // fallback tree will not have suspense context\n      isSVG,\n      slotScopeIds\n    );\n    setActiveBranch(suspense, vnode.ssFallback);\n  } else {\n    suspense.resolve(false, true);\n  }\n}\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\n  const suspense = n2.suspense = n1.suspense;\n  suspense.vnode = n2;\n  n2.el = n1.el;\n  const newBranch = n2.ssContent;\n  const newFallback = n2.ssFallback;\n  const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\n  if (pendingBranch) {\n    suspense.pendingBranch = newBranch;\n    if (isSameVNodeType(newBranch, pendingBranch)) {\n      patch(\n        pendingBranch,\n        newBranch,\n        suspense.hiddenContainer,\n        null,\n        parentComponent,\n        suspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n      if (suspense.deps <= 0) {\n        suspense.resolve();\n      } else if (isInFallback) {\n        patch(\n          activeBranch,\n          newFallback,\n          container,\n          anchor,\n          parentComponent,\n          null,\n          // fallback tree will not have suspense context\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        setActiveBranch(suspense, newFallback);\n      }\n    } else {\n      suspense.pendingId++;\n      if (isHydrating) {\n        suspense.isHydrating = false;\n        suspense.activeBranch = pendingBranch;\n      } else {\n        unmount(pendingBranch, parentComponent, suspense);\n      }\n      suspense.deps = 0;\n      suspense.effects.length = 0;\n      suspense.hiddenContainer = createElement(\"div\");\n      if (isInFallback) {\n        patch(\n          null,\n          newBranch,\n          suspense.hiddenContainer,\n          null,\n          parentComponent,\n          suspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        if (suspense.deps <= 0) {\n          suspense.resolve();\n        } else {\n          patch(\n            activeBranch,\n            newFallback,\n            container,\n            anchor,\n            parentComponent,\n            null,\n            // fallback tree will not have suspense context\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n          setActiveBranch(suspense, newFallback);\n        }\n      } else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n        patch(\n          activeBranch,\n          newBranch,\n          container,\n          anchor,\n          parentComponent,\n          suspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        suspense.resolve(true);\n      } else {\n        patch(\n          null,\n          newBranch,\n          suspense.hiddenContainer,\n          null,\n          parentComponent,\n          suspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        if (suspense.deps <= 0) {\n          suspense.resolve();\n        }\n      }\n    }\n  } else {\n    if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n      patch(\n        activeBranch,\n        newBranch,\n        container,\n        anchor,\n        parentComponent,\n        suspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n      setActiveBranch(suspense, newBranch);\n    } else {\n      triggerEvent(n2, \"onPending\");\n      suspense.pendingBranch = newBranch;\n      suspense.pendingId++;\n      patch(\n        null,\n        newBranch,\n        suspense.hiddenContainer,\n        null,\n        parentComponent,\n        suspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n      if (suspense.deps <= 0) {\n        suspense.resolve();\n      } else {\n        const { timeout, pendingId } = suspense;\n        if (timeout > 0) {\n          setTimeout(() => {\n            if (suspense.pendingId === pendingId) {\n              suspense.fallback(newFallback);\n            }\n          }, timeout);\n        } else if (timeout === 0) {\n          suspense.fallback(newFallback);\n        }\n      }\n    }\n  }\n}\nlet hasWarned = false;\nfunction createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\n  if (!!(process.env.NODE_ENV !== \"production\") && true && !hasWarned) {\n    hasWarned = true;\n    console[console.info ? \"info\" : \"log\"](\n      `<Suspense> is an experimental feature and its API will likely change.`\n    );\n  }\n  const {\n    p: patch,\n    m: move,\n    um: unmount,\n    n: next,\n    o: { parentNode, remove }\n  } = rendererInternals;\n  let parentSuspenseId;\n  const isSuspensible = isVNodeSuspensible(vnode);\n  if (isSuspensible) {\n    if (parentSuspense == null ? void 0 : parentSuspense.pendingBranch) {\n      parentSuspenseId = parentSuspense.pendingId;\n      parentSuspense.deps++;\n    }\n  }\n  const timeout = vnode.props ? toNumber(vnode.props.timeout) : void 0;\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    assertNumber(timeout, `Suspense timeout`);\n  }\n  const suspense = {\n    vnode,\n    parent: parentSuspense,\n    parentComponent,\n    isSVG,\n    container,\n    hiddenContainer,\n    anchor,\n    deps: 0,\n    pendingId: 0,\n    timeout: typeof timeout === \"number\" ? timeout : -1,\n    activeBranch: null,\n    pendingBranch: null,\n    isInFallback: true,\n    isHydrating,\n    isUnmounted: false,\n    effects: [],\n    resolve(resume = false, sync = false) {\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        if (!resume && !suspense.pendingBranch) {\n          throw new Error(\n            `suspense.resolve() is called without a pending branch.`\n          );\n        }\n        if (suspense.isUnmounted) {\n          throw new Error(\n            `suspense.resolve() is called on an already unmounted suspense boundary.`\n          );\n        }\n      }\n      const {\n        vnode: vnode2,\n        activeBranch,\n        pendingBranch,\n        pendingId,\n        effects,\n        parentComponent: parentComponent2,\n        container: container2\n      } = suspense;\n      if (suspense.isHydrating) {\n        suspense.isHydrating = false;\n      } else if (!resume) {\n        const delayEnter = activeBranch && pendingBranch.transition && pendingBranch.transition.mode === \"out-in\";\n        if (delayEnter) {\n          activeBranch.transition.afterLeave = () => {\n            if (pendingId === suspense.pendingId) {\n              move(pendingBranch, container2, anchor2, 0);\n            }\n          };\n        }\n        let { anchor: anchor2 } = suspense;\n        if (activeBranch) {\n          anchor2 = next(activeBranch);\n          unmount(activeBranch, parentComponent2, suspense, true);\n        }\n        if (!delayEnter) {\n          move(pendingBranch, container2, anchor2, 0);\n        }\n      }\n      setActiveBranch(suspense, pendingBranch);\n      suspense.pendingBranch = null;\n      suspense.isInFallback = false;\n      let parent = suspense.parent;\n      let hasUnresolvedAncestor = false;\n      while (parent) {\n        if (parent.pendingBranch) {\n          parent.effects.push(...effects);\n          hasUnresolvedAncestor = true;\n          break;\n        }\n        parent = parent.parent;\n      }\n      if (!hasUnresolvedAncestor) {\n        queuePostFlushCb(effects);\n      }\n      suspense.effects = [];\n      if (isSuspensible) {\n        if (parentSuspense && parentSuspense.pendingBranch && parentSuspenseId === parentSuspense.pendingId) {\n          parentSuspense.deps--;\n          if (parentSuspense.deps === 0 && !sync) {\n            parentSuspense.resolve();\n          }\n        }\n      }\n      triggerEvent(vnode2, \"onResolve\");\n    },\n    fallback(fallbackVNode) {\n      if (!suspense.pendingBranch) {\n        return;\n      }\n      const { vnode: vnode2, activeBranch, parentComponent: parentComponent2, container: container2, isSVG: isSVG2 } = suspense;\n      triggerEvent(vnode2, \"onFallback\");\n      const anchor2 = next(activeBranch);\n      const mountFallback = () => {\n        if (!suspense.isInFallback) {\n          return;\n        }\n        patch(\n          null,\n          fallbackVNode,\n          container2,\n          anchor2,\n          parentComponent2,\n          null,\n          // fallback tree will not have suspense context\n          isSVG2,\n          slotScopeIds,\n          optimized\n        );\n        setActiveBranch(suspense, fallbackVNode);\n      };\n      const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === \"out-in\";\n      if (delayEnter) {\n        activeBranch.transition.afterLeave = mountFallback;\n      }\n      suspense.isInFallback = true;\n      unmount(\n        activeBranch,\n        parentComponent2,\n        null,\n        // no suspense so unmount hooks fire now\n        true\n        // shouldRemove\n      );\n      if (!delayEnter) {\n        mountFallback();\n      }\n    },\n    move(container2, anchor2, type) {\n      suspense.activeBranch && move(suspense.activeBranch, container2, anchor2, type);\n      suspense.container = container2;\n    },\n    next() {\n      return suspense.activeBranch && next(suspense.activeBranch);\n    },\n    registerDep(instance, setupRenderEffect) {\n      const isInPendingSuspense = !!suspense.pendingBranch;\n      if (isInPendingSuspense) {\n        suspense.deps++;\n      }\n      const hydratedEl = instance.vnode.el;\n      instance.asyncDep.catch((err) => {\n        handleError(err, instance, 0);\n      }).then((asyncSetupResult) => {\n        if (instance.isUnmounted || suspense.isUnmounted || suspense.pendingId !== instance.suspenseId) {\n          return;\n        }\n        instance.asyncResolved = true;\n        const { vnode: vnode2 } = instance;\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          pushWarningContext(vnode2);\n        }\n        handleSetupResult(instance, asyncSetupResult, false);\n        if (hydratedEl) {\n          vnode2.el = hydratedEl;\n        }\n        const placeholder = !hydratedEl && instance.subTree.el;\n        setupRenderEffect(\n          instance,\n          vnode2,\n          // component may have been moved before resolve.\n          // if this is not a hydration, instance.subTree will be the comment\n          // placeholder.\n          parentNode(hydratedEl || instance.subTree.el),\n          // anchor will not be used if this is hydration, so only need to\n          // consider the comment placeholder case.\n          hydratedEl ? null : next(instance.subTree),\n          suspense,\n          isSVG,\n          optimized\n        );\n        if (placeholder) {\n          remove(placeholder);\n        }\n        updateHOCHostEl(instance, vnode2.el);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          popWarningContext();\n        }\n        if (isInPendingSuspense && --suspense.deps === 0) {\n          suspense.resolve();\n        }\n      });\n    },\n    unmount(parentSuspense2, doRemove) {\n      suspense.isUnmounted = true;\n      if (suspense.activeBranch) {\n        unmount(\n          suspense.activeBranch,\n          parentComponent,\n          parentSuspense2,\n          doRemove\n        );\n      }\n      if (suspense.pendingBranch) {\n        unmount(\n          suspense.pendingBranch,\n          parentComponent,\n          parentSuspense2,\n          doRemove\n        );\n      }\n    }\n  };\n  return suspense;\n}\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\n  const suspense = vnode.suspense = createSuspenseBoundary(\n    vnode,\n    parentSuspense,\n    parentComponent,\n    node.parentNode,\n    document.createElement(\"div\"),\n    null,\n    isSVG,\n    slotScopeIds,\n    optimized,\n    rendererInternals,\n    true\n    /* hydrating */\n  );\n  const result = hydrateNode(\n    node,\n    suspense.pendingBranch = vnode.ssContent,\n    parentComponent,\n    suspense,\n    slotScopeIds,\n    optimized\n  );\n  if (suspense.deps === 0) {\n    suspense.resolve(false, true);\n  }\n  return result;\n}\nfunction normalizeSuspenseChildren(vnode) {\n  const { shapeFlag, children } = vnode;\n  const isSlotChildren = shapeFlag & 32;\n  vnode.ssContent = normalizeSuspenseSlot(\n    isSlotChildren ? children.default : children\n  );\n  vnode.ssFallback = isSlotChildren ? normalizeSuspenseSlot(children.fallback) : createVNode(Comment);\n}\nfunction normalizeSuspenseSlot(s) {\n  let block;\n  if (isFunction(s)) {\n    const trackBlock = isBlockTreeEnabled && s._c;\n    if (trackBlock) {\n      s._d = false;\n      openBlock();\n    }\n    s = s();\n    if (trackBlock) {\n      s._d = true;\n      block = currentBlock;\n      closeBlock();\n    }\n  }\n  if (isArray(s)) {\n    const singleChild = filterSingleRoot(s);\n    if (!!(process.env.NODE_ENV !== \"production\") && !singleChild) {\n      warn(`<Suspense> slots expect a single root node.`);\n    }\n    s = singleChild;\n  }\n  s = normalizeVNode(s);\n  if (block && !s.dynamicChildren) {\n    s.dynamicChildren = block.filter((c) => c !== s);\n  }\n  return s;\n}\nfunction queueEffectWithSuspense(fn, suspense) {\n  if (suspense && suspense.pendingBranch) {\n    if (isArray(fn)) {\n      suspense.effects.push(...fn);\n    } else {\n      suspense.effects.push(fn);\n    }\n  } else {\n    queuePostFlushCb(fn);\n  }\n}\nfunction setActiveBranch(suspense, branch) {\n  suspense.activeBranch = branch;\n  const { vnode, parentComponent } = suspense;\n  const el = vnode.el = branch.el;\n  if (parentComponent && parentComponent.subTree === vnode) {\n    parentComponent.vnode.el = el;\n    updateHOCHostEl(parentComponent, el);\n  }\n}\nfunction isVNodeSuspensible(vnode) {\n  var _a;\n  return ((_a = vnode.props) == null ? void 0 : _a.suspensible) != null && vnode.props.suspensible !== false;\n}\n\nfunction watchEffect(effect, options) {\n  return doWatch(effect, null, options);\n}\nfunction watchPostEffect(effect, options) {\n  return doWatch(\n    effect,\n    null,\n    !!(process.env.NODE_ENV !== \"production\") ? extend({}, options, { flush: \"post\" }) : { flush: \"post\" }\n  );\n}\nfunction watchSyncEffect(effect, options) {\n  return doWatch(\n    effect,\n    null,\n    !!(process.env.NODE_ENV !== \"production\") ? extend({}, options, { flush: \"sync\" }) : { flush: \"sync\" }\n  );\n}\nconst INITIAL_WATCHER_VALUE = {};\nfunction watch(source, cb, options) {\n  if (!!(process.env.NODE_ENV !== \"production\") && !isFunction(cb)) {\n    warn(\n      `\\`watch(fn, options?)\\` signature has been moved to a separate API. Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only supports \\`watch(source, cb, options?) signature.`\n    );\n  }\n  return doWatch(source, cb, options);\n}\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ) {\n  var _a;\n  if (!!(process.env.NODE_ENV !== \"production\") && !cb) {\n    if (immediate !== void 0) {\n      warn(\n        `watch() \"immediate\" option is only respected when using the watch(source, callback, options?) signature.`\n      );\n    }\n    if (deep !== void 0) {\n      warn(\n        `watch() \"deep\" option is only respected when using the watch(source, callback, options?) signature.`\n      );\n    }\n  }\n  const warnInvalidSource = (s) => {\n    warn(\n      `Invalid watch source: `,\n      s,\n      `A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.`\n    );\n  };\n  const instance = getCurrentScope() === ((_a = currentInstance) == null ? void 0 : _a.scope) ? currentInstance : null;\n  let getter;\n  let forceTrigger = false;\n  let isMultiSource = false;\n  if (isRef(source)) {\n    getter = () => source.value;\n    forceTrigger = isShallow$1(source);\n  } else if (isReactive(source)) {\n    getter = () => source;\n    deep = true;\n  } else if (isArray(source)) {\n    isMultiSource = true;\n    forceTrigger = source.some((s) => isReactive(s) || isShallow$1(s));\n    getter = () => source.map((s) => {\n      if (isRef(s)) {\n        return s.value;\n      } else if (isReactive(s)) {\n        return traverse(s);\n      } else if (isFunction(s)) {\n        return callWithErrorHandling(s, instance, 2);\n      } else {\n        !!(process.env.NODE_ENV !== \"production\") && warnInvalidSource(s);\n      }\n    });\n  } else if (isFunction(source)) {\n    if (cb) {\n      getter = () => callWithErrorHandling(source, instance, 2);\n    } else {\n      getter = () => {\n        if (instance && instance.isUnmounted) {\n          return;\n        }\n        if (cleanup) {\n          cleanup();\n        }\n        return callWithAsyncErrorHandling(\n          source,\n          instance,\n          3,\n          [onCleanup]\n        );\n      };\n    }\n  } else {\n    getter = NOOP;\n    !!(process.env.NODE_ENV !== \"production\") && warnInvalidSource(source);\n  }\n  if (cb && deep) {\n    const baseGetter = getter;\n    getter = () => traverse(baseGetter());\n  }\n  let cleanup;\n  let onCleanup = (fn) => {\n    cleanup = effect.onStop = () => {\n      callWithErrorHandling(fn, instance, 4);\n    };\n  };\n  let ssrCleanup;\n  if (isInSSRComponentSetup) {\n    onCleanup = NOOP;\n    if (!cb) {\n      getter();\n    } else if (immediate) {\n      callWithAsyncErrorHandling(cb, instance, 3, [\n        getter(),\n        isMultiSource ? [] : void 0,\n        onCleanup\n      ]);\n    }\n    if (flush === \"sync\") {\n      const ctx = useSSRContext();\n      ssrCleanup = ctx.__watcherHandles || (ctx.__watcherHandles = []);\n    } else {\n      return NOOP;\n    }\n  }\n  let oldValue = isMultiSource ? new Array(source.length).fill(INITIAL_WATCHER_VALUE) : INITIAL_WATCHER_VALUE;\n  const job = () => {\n    if (!effect.active) {\n      return;\n    }\n    if (cb) {\n      const newValue = effect.run();\n      if (deep || forceTrigger || (isMultiSource ? newValue.some(\n        (v, i) => hasChanged(v, oldValue[i])\n      ) : hasChanged(newValue, oldValue)) || false) {\n        if (cleanup) {\n          cleanup();\n        }\n        callWithAsyncErrorHandling(cb, instance, 3, [\n          newValue,\n          // pass undefined as the old value when it's changed for the first time\n          oldValue === INITIAL_WATCHER_VALUE ? void 0 : isMultiSource && oldValue[0] === INITIAL_WATCHER_VALUE ? [] : oldValue,\n          onCleanup\n        ]);\n        oldValue = newValue;\n      }\n    } else {\n      effect.run();\n    }\n  };\n  job.allowRecurse = !!cb;\n  let scheduler;\n  if (flush === \"sync\") {\n    scheduler = job;\n  } else if (flush === \"post\") {\n    scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\n  } else {\n    job.pre = true;\n    if (instance)\n      job.id = instance.uid;\n    scheduler = () => queueJob(job);\n  }\n  const effect = new ReactiveEffect(getter, scheduler);\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    effect.onTrack = onTrack;\n    effect.onTrigger = onTrigger;\n  }\n  if (cb) {\n    if (immediate) {\n      job();\n    } else {\n      oldValue = effect.run();\n    }\n  } else if (flush === \"post\") {\n    queuePostRenderEffect(\n      effect.run.bind(effect),\n      instance && instance.suspense\n    );\n  } else {\n    effect.run();\n  }\n  const unwatch = () => {\n    effect.stop();\n    if (instance && instance.scope) {\n      remove(instance.scope.effects, effect);\n    }\n  };\n  if (ssrCleanup)\n    ssrCleanup.push(unwatch);\n  return unwatch;\n}\nfunction instanceWatch(source, value, options) {\n  const publicThis = this.proxy;\n  const getter = isString(source) ? source.includes(\".\") ? createPathGetter(publicThis, source) : () => publicThis[source] : source.bind(publicThis, publicThis);\n  let cb;\n  if (isFunction(value)) {\n    cb = value;\n  } else {\n    cb = value.handler;\n    options = value;\n  }\n  const cur = currentInstance;\n  setCurrentInstance(this);\n  const res = doWatch(getter, cb.bind(publicThis), options);\n  if (cur) {\n    setCurrentInstance(cur);\n  } else {\n    unsetCurrentInstance();\n  }\n  return res;\n}\nfunction createPathGetter(ctx, path) {\n  const segments = path.split(\".\");\n  return () => {\n    let cur = ctx;\n    for (let i = 0; i < segments.length && cur; i++) {\n      cur = cur[segments[i]];\n    }\n    return cur;\n  };\n}\nfunction traverse(value, seen) {\n  if (!isObject(value) || value[\"__v_skip\"]) {\n    return value;\n  }\n  seen = seen || /* @__PURE__ */ new Set();\n  if (seen.has(value)) {\n    return value;\n  }\n  seen.add(value);\n  if (isRef(value)) {\n    traverse(value.value, seen);\n  } else if (isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      traverse(value[i], seen);\n    }\n  } else if (isSet(value) || isMap(value)) {\n    value.forEach((v) => {\n      traverse(v, seen);\n    });\n  } else if (isPlainObject(value)) {\n    for (const key in value) {\n      traverse(value[key], seen);\n    }\n  }\n  return value;\n}\n\nfunction validateDirectiveName(name) {\n  if (isBuiltInDirective(name)) {\n    warn(\"Do not use built-in directive ids as custom directive id: \" + name);\n  }\n}\nfunction withDirectives(vnode, directives) {\n  const internalInstance = currentRenderingInstance;\n  if (internalInstance === null) {\n    !!(process.env.NODE_ENV !== \"production\") && warn(`withDirectives can only be used inside render functions.`);\n    return vnode;\n  }\n  const instance = getExposeProxy(internalInstance) || internalInstance.proxy;\n  const bindings = vnode.dirs || (vnode.dirs = []);\n  for (let i = 0; i < directives.length; i++) {\n    let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\n    if (dir) {\n      if (isFunction(dir)) {\n        dir = {\n          mounted: dir,\n          updated: dir\n        };\n      }\n      if (dir.deep) {\n        traverse(value);\n      }\n      bindings.push({\n        dir,\n        instance,\n        value,\n        oldValue: void 0,\n        arg,\n        modifiers\n      });\n    }\n  }\n  return vnode;\n}\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\n  const bindings = vnode.dirs;\n  const oldBindings = prevVNode && prevVNode.dirs;\n  for (let i = 0; i < bindings.length; i++) {\n    const binding = bindings[i];\n    if (oldBindings) {\n      binding.oldValue = oldBindings[i].value;\n    }\n    let hook = binding.dir[name];\n    if (hook) {\n      pauseTracking();\n      callWithAsyncErrorHandling(hook, instance, 8, [\n        vnode.el,\n        binding,\n        vnode,\n        prevVNode\n      ]);\n      resetTracking();\n    }\n  }\n}\n\nfunction useTransitionState() {\n  const state = {\n    isMounted: false,\n    isLeaving: false,\n    isUnmounting: false,\n    leavingVNodes: /* @__PURE__ */ new Map()\n  };\n  onMounted(() => {\n    state.isMounted = true;\n  });\n  onBeforeUnmount(() => {\n    state.isUnmounting = true;\n  });\n  return state;\n}\nconst TransitionHookValidator = [Function, Array];\nconst BaseTransitionPropsValidators = {\n  mode: String,\n  appear: Boolean,\n  persisted: Boolean,\n  // enter\n  onBeforeEnter: TransitionHookValidator,\n  onEnter: TransitionHookValidator,\n  onAfterEnter: TransitionHookValidator,\n  onEnterCancelled: TransitionHookValidator,\n  // leave\n  onBeforeLeave: TransitionHookValidator,\n  onLeave: TransitionHookValidator,\n  onAfterLeave: TransitionHookValidator,\n  onLeaveCancelled: TransitionHookValidator,\n  // appear\n  onBeforeAppear: TransitionHookValidator,\n  onAppear: TransitionHookValidator,\n  onAfterAppear: TransitionHookValidator,\n  onAppearCancelled: TransitionHookValidator\n};\nconst BaseTransitionImpl = {\n  name: `BaseTransition`,\n  props: BaseTransitionPropsValidators,\n  setup(props, { slots }) {\n    const instance = getCurrentInstance();\n    const state = useTransitionState();\n    let prevTransitionKey;\n    return () => {\n      const children = slots.default && getTransitionRawChildren(slots.default(), true);\n      if (!children || !children.length) {\n        return;\n      }\n      let child = children[0];\n      if (children.length > 1) {\n        let hasFound = false;\n        for (const c of children) {\n          if (c.type !== Comment) {\n            if (!!(process.env.NODE_ENV !== \"production\") && hasFound) {\n              warn(\n                \"<transition> can only be used on a single element or component. Use <transition-group> for lists.\"\n              );\n              break;\n            }\n            child = c;\n            hasFound = true;\n            if (!!!(process.env.NODE_ENV !== \"production\"))\n              break;\n          }\n        }\n      }\n      const rawProps = toRaw(props);\n      const { mode } = rawProps;\n      if (!!(process.env.NODE_ENV !== \"production\") && mode && mode !== \"in-out\" && mode !== \"out-in\" && mode !== \"default\") {\n        warn(`invalid <transition> mode: ${mode}`);\n      }\n      if (state.isLeaving) {\n        return emptyPlaceholder(child);\n      }\n      const innerChild = getKeepAliveChild(child);\n      if (!innerChild) {\n        return emptyPlaceholder(child);\n      }\n      const enterHooks = resolveTransitionHooks(\n        innerChild,\n        rawProps,\n        state,\n        instance\n      );\n      setTransitionHooks(innerChild, enterHooks);\n      const oldChild = instance.subTree;\n      const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\n      let transitionKeyChanged = false;\n      const { getTransitionKey } = innerChild.type;\n      if (getTransitionKey) {\n        const key = getTransitionKey();\n        if (prevTransitionKey === void 0) {\n          prevTransitionKey = key;\n        } else if (key !== prevTransitionKey) {\n          prevTransitionKey = key;\n          transitionKeyChanged = true;\n        }\n      }\n      if (oldInnerChild && oldInnerChild.type !== Comment && (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\n        const leavingHooks = resolveTransitionHooks(\n          oldInnerChild,\n          rawProps,\n          state,\n          instance\n        );\n        setTransitionHooks(oldInnerChild, leavingHooks);\n        if (mode === \"out-in\") {\n          state.isLeaving = true;\n          leavingHooks.afterLeave = () => {\n            state.isLeaving = false;\n            if (instance.update.active !== false) {\n              instance.update();\n            }\n          };\n          return emptyPlaceholder(child);\n        } else if (mode === \"in-out\" && innerChild.type !== Comment) {\n          leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\n            const leavingVNodesCache = getLeavingNodesForType(\n              state,\n              oldInnerChild\n            );\n            leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\n            el._leaveCb = () => {\n              earlyRemove();\n              el._leaveCb = void 0;\n              delete enterHooks.delayedLeave;\n            };\n            enterHooks.delayedLeave = delayedLeave;\n          };\n        }\n      }\n      return child;\n    };\n  }\n};\nconst BaseTransition = BaseTransitionImpl;\nfunction getLeavingNodesForType(state, vnode) {\n  const { leavingVNodes } = state;\n  let leavingVNodesCache = leavingVNodes.get(vnode.type);\n  if (!leavingVNodesCache) {\n    leavingVNodesCache = /* @__PURE__ */ Object.create(null);\n    leavingVNodes.set(vnode.type, leavingVNodesCache);\n  }\n  return leavingVNodesCache;\n}\nfunction resolveTransitionHooks(vnode, props, state, instance) {\n  const {\n    appear,\n    mode,\n    persisted = false,\n    onBeforeEnter,\n    onEnter,\n    onAfterEnter,\n    onEnterCancelled,\n    onBeforeLeave,\n    onLeave,\n    onAfterLeave,\n    onLeaveCancelled,\n    onBeforeAppear,\n    onAppear,\n    onAfterAppear,\n    onAppearCancelled\n  } = props;\n  const key = String(vnode.key);\n  const leavingVNodesCache = getLeavingNodesForType(state, vnode);\n  const callHook = (hook, args) => {\n    hook && callWithAsyncErrorHandling(\n      hook,\n      instance,\n      9,\n      args\n    );\n  };\n  const callAsyncHook = (hook, args) => {\n    const done = args[1];\n    callHook(hook, args);\n    if (isArray(hook)) {\n      if (hook.every((hook2) => hook2.length <= 1))\n        done();\n    } else if (hook.length <= 1) {\n      done();\n    }\n  };\n  const hooks = {\n    mode,\n    persisted,\n    beforeEnter(el) {\n      let hook = onBeforeEnter;\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onBeforeAppear || onBeforeEnter;\n        } else {\n          return;\n        }\n      }\n      if (el._leaveCb) {\n        el._leaveCb(\n          true\n          /* cancelled */\n        );\n      }\n      const leavingVNode = leavingVNodesCache[key];\n      if (leavingVNode && isSameVNodeType(vnode, leavingVNode) && leavingVNode.el._leaveCb) {\n        leavingVNode.el._leaveCb();\n      }\n      callHook(hook, [el]);\n    },\n    enter(el) {\n      let hook = onEnter;\n      let afterHook = onAfterEnter;\n      let cancelHook = onEnterCancelled;\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onAppear || onEnter;\n          afterHook = onAfterAppear || onAfterEnter;\n          cancelHook = onAppearCancelled || onEnterCancelled;\n        } else {\n          return;\n        }\n      }\n      let called = false;\n      const done = el._enterCb = (cancelled) => {\n        if (called)\n          return;\n        called = true;\n        if (cancelled) {\n          callHook(cancelHook, [el]);\n        } else {\n          callHook(afterHook, [el]);\n        }\n        if (hooks.delayedLeave) {\n          hooks.delayedLeave();\n        }\n        el._enterCb = void 0;\n      };\n      if (hook) {\n        callAsyncHook(hook, [el, done]);\n      } else {\n        done();\n      }\n    },\n    leave(el, remove) {\n      const key2 = String(vnode.key);\n      if (el._enterCb) {\n        el._enterCb(\n          true\n          /* cancelled */\n        );\n      }\n      if (state.isUnmounting) {\n        return remove();\n      }\n      callHook(onBeforeLeave, [el]);\n      let called = false;\n      const done = el._leaveCb = (cancelled) => {\n        if (called)\n          return;\n        called = true;\n        remove();\n        if (cancelled) {\n          callHook(onLeaveCancelled, [el]);\n        } else {\n          callHook(onAfterLeave, [el]);\n        }\n        el._leaveCb = void 0;\n        if (leavingVNodesCache[key2] === vnode) {\n          delete leavingVNodesCache[key2];\n        }\n      };\n      leavingVNodesCache[key2] = vnode;\n      if (onLeave) {\n        callAsyncHook(onLeave, [el, done]);\n      } else {\n        done();\n      }\n    },\n    clone(vnode2) {\n      return resolveTransitionHooks(vnode2, props, state, instance);\n    }\n  };\n  return hooks;\n}\nfunction emptyPlaceholder(vnode) {\n  if (isKeepAlive(vnode)) {\n    vnode = cloneVNode(vnode);\n    vnode.children = null;\n    return vnode;\n  }\n}\nfunction getKeepAliveChild(vnode) {\n  return isKeepAlive(vnode) ? vnode.children ? vnode.children[0] : void 0 : vnode;\n}\nfunction setTransitionHooks(vnode, hooks) {\n  if (vnode.shapeFlag & 6 && vnode.component) {\n    setTransitionHooks(vnode.component.subTree, hooks);\n  } else if (vnode.shapeFlag & 128) {\n    vnode.ssContent.transition = hooks.clone(vnode.ssContent);\n    vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\n  } else {\n    vnode.transition = hooks;\n  }\n}\nfunction getTransitionRawChildren(children, keepComment = false, parentKey) {\n  let ret = [];\n  let keyedFragmentCount = 0;\n  for (let i = 0; i < children.length; i++) {\n    let child = children[i];\n    const key = parentKey == null ? child.key : String(parentKey) + String(child.key != null ? child.key : i);\n    if (child.type === Fragment) {\n      if (child.patchFlag & 128)\n        keyedFragmentCount++;\n      ret = ret.concat(\n        getTransitionRawChildren(child.children, keepComment, key)\n      );\n    } else if (keepComment || child.type !== Comment) {\n      ret.push(key != null ? cloneVNode(child, { key }) : child);\n    }\n  }\n  if (keyedFragmentCount > 1) {\n    for (let i = 0; i < ret.length; i++) {\n      ret[i].patchFlag = -2;\n    }\n  }\n  return ret;\n}\n\nfunction defineComponent(options, extraOptions) {\n  return isFunction(options) ? (\n    // #8326: extend call and options.name access are considered side-effects\n    // by Rollup, so we have to wrap it in a pure-annotated IIFE.\n    /* @__PURE__ */ (() => extend({ name: options.name }, extraOptions, { setup: options }))()\n  ) : options;\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\nfunction defineAsyncComponent(source) {\n  if (isFunction(source)) {\n    source = { loader: source };\n  }\n  const {\n    loader,\n    loadingComponent,\n    errorComponent,\n    delay = 200,\n    timeout,\n    // undefined = never times out\n    suspensible = true,\n    onError: userOnError\n  } = source;\n  let pendingRequest = null;\n  let resolvedComp;\n  let retries = 0;\n  const retry = () => {\n    retries++;\n    pendingRequest = null;\n    return load();\n  };\n  const load = () => {\n    let thisRequest;\n    return pendingRequest || (thisRequest = pendingRequest = loader().catch((err) => {\n      err = err instanceof Error ? err : new Error(String(err));\n      if (userOnError) {\n        return new Promise((resolve, reject) => {\n          const userRetry = () => resolve(retry());\n          const userFail = () => reject(err);\n          userOnError(err, userRetry, userFail, retries + 1);\n        });\n      } else {\n        throw err;\n      }\n    }).then((comp) => {\n      if (thisRequest !== pendingRequest && pendingRequest) {\n        return pendingRequest;\n      }\n      if (!!(process.env.NODE_ENV !== \"production\") && !comp) {\n        warn(\n          `Async component loader resolved to undefined. If you are using retry(), make sure to return its return value.`\n        );\n      }\n      if (comp && (comp.__esModule || comp[Symbol.toStringTag] === \"Module\")) {\n        comp = comp.default;\n      }\n      if (!!(process.env.NODE_ENV !== \"production\") && comp && !isObject(comp) && !isFunction(comp)) {\n        throw new Error(`Invalid async component load result: ${comp}`);\n      }\n      resolvedComp = comp;\n      return comp;\n    }));\n  };\n  return defineComponent({\n    name: \"AsyncComponentWrapper\",\n    __asyncLoader: load,\n    get __asyncResolved() {\n      return resolvedComp;\n    },\n    setup() {\n      const instance = currentInstance;\n      if (resolvedComp) {\n        return () => createInnerComp(resolvedComp, instance);\n      }\n      const onError = (err) => {\n        pendingRequest = null;\n        handleError(\n          err,\n          instance,\n          13,\n          !errorComponent\n          /* do not throw in dev if user provided error component */\n        );\n      };\n      if (suspensible && instance.suspense || isInSSRComponentSetup) {\n        return load().then((comp) => {\n          return () => createInnerComp(comp, instance);\n        }).catch((err) => {\n          onError(err);\n          return () => errorComponent ? createVNode(errorComponent, {\n            error: err\n          }) : null;\n        });\n      }\n      const loaded = ref(false);\n      const error = ref();\n      const delayed = ref(!!delay);\n      if (delay) {\n        setTimeout(() => {\n          delayed.value = false;\n        }, delay);\n      }\n      if (timeout != null) {\n        setTimeout(() => {\n          if (!loaded.value && !error.value) {\n            const err = new Error(\n              `Async component timed out after ${timeout}ms.`\n            );\n            onError(err);\n            error.value = err;\n          }\n        }, timeout);\n      }\n      load().then(() => {\n        loaded.value = true;\n        if (instance.parent && isKeepAlive(instance.parent.vnode)) {\n          queueJob(instance.parent.update);\n        }\n      }).catch((err) => {\n        onError(err);\n        error.value = err;\n      });\n      return () => {\n        if (loaded.value && resolvedComp) {\n          return createInnerComp(resolvedComp, instance);\n        } else if (error.value && errorComponent) {\n          return createVNode(errorComponent, {\n            error: error.value\n          });\n        } else if (loadingComponent && !delayed.value) {\n          return createVNode(loadingComponent);\n        }\n      };\n    }\n  });\n}\nfunction createInnerComp(comp, parent) {\n  const { ref: ref2, props, children, ce } = parent.vnode;\n  const vnode = createVNode(comp, props, children);\n  vnode.ref = ref2;\n  vnode.ce = ce;\n  delete parent.vnode.ce;\n  return vnode;\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\nconst KeepAliveImpl = {\n  name: `KeepAlive`,\n  // Marker for special handling inside the renderer. We are not using a ===\n  // check directly on KeepAlive in the renderer, because importing it directly\n  // would prevent it from being tree-shaken.\n  __isKeepAlive: true,\n  props: {\n    include: [String, RegExp, Array],\n    exclude: [String, RegExp, Array],\n    max: [String, Number]\n  },\n  setup(props, { slots }) {\n    const instance = getCurrentInstance();\n    const sharedContext = instance.ctx;\n    if (!sharedContext.renderer) {\n      return () => {\n        const children = slots.default && slots.default();\n        return children && children.length === 1 ? children[0] : children;\n      };\n    }\n    const cache = /* @__PURE__ */ new Map();\n    const keys = /* @__PURE__ */ new Set();\n    let current = null;\n    if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n      instance.__v_cache = cache;\n    }\n    const parentSuspense = instance.suspense;\n    const {\n      renderer: {\n        p: patch,\n        m: move,\n        um: _unmount,\n        o: { createElement }\n      }\n    } = sharedContext;\n    const storageContainer = createElement(\"div\");\n    sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\n      const instance2 = vnode.component;\n      move(vnode, container, anchor, 0, parentSuspense);\n      patch(\n        instance2.vnode,\n        vnode,\n        container,\n        anchor,\n        instance2,\n        parentSuspense,\n        isSVG,\n        vnode.slotScopeIds,\n        optimized\n      );\n      queuePostRenderEffect(() => {\n        instance2.isDeactivated = false;\n        if (instance2.a) {\n          invokeArrayFns(instance2.a);\n        }\n        const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\n        if (vnodeHook) {\n          invokeVNodeHook(vnodeHook, instance2.parent, vnode);\n        }\n      }, parentSuspense);\n      if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n        devtoolsComponentAdded(instance2);\n      }\n    };\n    sharedContext.deactivate = (vnode) => {\n      const instance2 = vnode.component;\n      move(vnode, storageContainer, null, 1, parentSuspense);\n      queuePostRenderEffect(() => {\n        if (instance2.da) {\n          invokeArrayFns(instance2.da);\n        }\n        const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\n        if (vnodeHook) {\n          invokeVNodeHook(vnodeHook, instance2.parent, vnode);\n        }\n        instance2.isDeactivated = true;\n      }, parentSuspense);\n      if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n        devtoolsComponentAdded(instance2);\n      }\n    };\n    function unmount(vnode) {\n      resetShapeFlag(vnode);\n      _unmount(vnode, instance, parentSuspense, true);\n    }\n    function pruneCache(filter) {\n      cache.forEach((vnode, key) => {\n        const name = getComponentName(vnode.type);\n        if (name && (!filter || !filter(name))) {\n          pruneCacheEntry(key);\n        }\n      });\n    }\n    function pruneCacheEntry(key) {\n      const cached = cache.get(key);\n      if (!current || !isSameVNodeType(cached, current)) {\n        unmount(cached);\n      } else if (current) {\n        resetShapeFlag(current);\n      }\n      cache.delete(key);\n      keys.delete(key);\n    }\n    watch(\n      () => [props.include, props.exclude],\n      ([include, exclude]) => {\n        include && pruneCache((name) => matches(include, name));\n        exclude && pruneCache((name) => !matches(exclude, name));\n      },\n      // prune post-render after `current` has been updated\n      { flush: \"post\", deep: true }\n    );\n    let pendingCacheKey = null;\n    const cacheSubtree = () => {\n      if (pendingCacheKey != null) {\n        cache.set(pendingCacheKey, getInnerChild(instance.subTree));\n      }\n    };\n    onMounted(cacheSubtree);\n    onUpdated(cacheSubtree);\n    onBeforeUnmount(() => {\n      cache.forEach((cached) => {\n        const { subTree, suspense } = instance;\n        const vnode = getInnerChild(subTree);\n        if (cached.type === vnode.type && cached.key === vnode.key) {\n          resetShapeFlag(vnode);\n          const da = vnode.component.da;\n          da && queuePostRenderEffect(da, suspense);\n          return;\n        }\n        unmount(cached);\n      });\n    });\n    return () => {\n      pendingCacheKey = null;\n      if (!slots.default) {\n        return null;\n      }\n      const children = slots.default();\n      const rawVNode = children[0];\n      if (children.length > 1) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(`KeepAlive should contain exactly one component child.`);\n        }\n        current = null;\n        return children;\n      } else if (!isVNode(rawVNode) || !(rawVNode.shapeFlag & 4) && !(rawVNode.shapeFlag & 128)) {\n        current = null;\n        return rawVNode;\n      }\n      let vnode = getInnerChild(rawVNode);\n      const comp = vnode.type;\n      const name = getComponentName(\n        isAsyncWrapper(vnode) ? vnode.type.__asyncResolved || {} : comp\n      );\n      const { include, exclude, max } = props;\n      if (include && (!name || !matches(include, name)) || exclude && name && matches(exclude, name)) {\n        current = vnode;\n        return rawVNode;\n      }\n      const key = vnode.key == null ? comp : vnode.key;\n      const cachedVNode = cache.get(key);\n      if (vnode.el) {\n        vnode = cloneVNode(vnode);\n        if (rawVNode.shapeFlag & 128) {\n          rawVNode.ssContent = vnode;\n        }\n      }\n      pendingCacheKey = key;\n      if (cachedVNode) {\n        vnode.el = cachedVNode.el;\n        vnode.component = cachedVNode.component;\n        if (vnode.transition) {\n          setTransitionHooks(vnode, vnode.transition);\n        }\n        vnode.shapeFlag |= 512;\n        keys.delete(key);\n        keys.add(key);\n      } else {\n        keys.add(key);\n        if (max && keys.size > parseInt(max, 10)) {\n          pruneCacheEntry(keys.values().next().value);\n        }\n      }\n      vnode.shapeFlag |= 256;\n      current = vnode;\n      return isSuspense(rawVNode.type) ? rawVNode : vnode;\n    };\n  }\n};\nconst KeepAlive = KeepAliveImpl;\nfunction matches(pattern, name) {\n  if (isArray(pattern)) {\n    return pattern.some((p) => matches(p, name));\n  } else if (isString(pattern)) {\n    return pattern.split(\",\").includes(name);\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name);\n  }\n  return false;\n}\nfunction onActivated(hook, target) {\n  registerKeepAliveHook(hook, \"a\", target);\n}\nfunction onDeactivated(hook, target) {\n  registerKeepAliveHook(hook, \"da\", target);\n}\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\n  const wrappedHook = hook.__wdc || (hook.__wdc = () => {\n    let current = target;\n    while (current) {\n      if (current.isDeactivated) {\n        return;\n      }\n      current = current.parent;\n    }\n    return hook();\n  });\n  injectHook(type, wrappedHook, target);\n  if (target) {\n    let current = target.parent;\n    while (current && current.parent) {\n      if (isKeepAlive(current.parent.vnode)) {\n        injectToKeepAliveRoot(wrappedHook, type, target, current);\n      }\n      current = current.parent;\n    }\n  }\n}\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\n  const injected = injectHook(\n    type,\n    hook,\n    keepAliveRoot,\n    true\n    /* prepend */\n  );\n  onUnmounted(() => {\n    remove(keepAliveRoot[type], injected);\n  }, target);\n}\nfunction resetShapeFlag(vnode) {\n  vnode.shapeFlag &= ~256;\n  vnode.shapeFlag &= ~512;\n}\nfunction getInnerChild(vnode) {\n  return vnode.shapeFlag & 128 ? vnode.ssContent : vnode;\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\n  if (target) {\n    const hooks = target[type] || (target[type] = []);\n    const wrappedHook = hook.__weh || (hook.__weh = (...args) => {\n      if (target.isUnmounted) {\n        return;\n      }\n      pauseTracking();\n      setCurrentInstance(target);\n      const res = callWithAsyncErrorHandling(hook, target, type, args);\n      unsetCurrentInstance();\n      resetTracking();\n      return res;\n    });\n    if (prepend) {\n      hooks.unshift(wrappedHook);\n    } else {\n      hooks.push(wrappedHook);\n    }\n    return wrappedHook;\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, \"\"));\n    warn(\n      `${apiName} is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup().` + (` If you are using async setup(), make sure to register lifecycle hooks before the first await statement.` )\n    );\n  }\n}\nconst createHook = (lifecycle) => (hook, target = currentInstance) => (\n  // post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\n  (!isInSSRComponentSetup || lifecycle === \"sp\") && injectHook(lifecycle, (...args) => hook(...args), target)\n);\nconst onBeforeMount = createHook(\"bm\");\nconst onMounted = createHook(\"m\");\nconst onBeforeUpdate = createHook(\"bu\");\nconst onUpdated = createHook(\"u\");\nconst onBeforeUnmount = createHook(\"bum\");\nconst onUnmounted = createHook(\"um\");\nconst onServerPrefetch = createHook(\"sp\");\nconst onRenderTriggered = createHook(\n  \"rtg\"\n);\nconst onRenderTracked = createHook(\n  \"rtc\"\n);\nfunction onErrorCaptured(hook, target = currentInstance) {\n  injectHook(\"ec\", hook, target);\n}\n\nconst COMPONENTS = \"components\";\nconst DIRECTIVES = \"directives\";\nfunction resolveComponent(name, maybeSelfReference) {\n  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\n}\nconst NULL_DYNAMIC_COMPONENT = Symbol.for(\"v-ndc\");\nfunction resolveDynamicComponent(component) {\n  if (isString(component)) {\n    return resolveAsset(COMPONENTS, component, false) || component;\n  } else {\n    return component || NULL_DYNAMIC_COMPONENT;\n  }\n}\nfunction resolveDirective(name) {\n  return resolveAsset(DIRECTIVES, name);\n}\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\n  const instance = currentRenderingInstance || currentInstance;\n  if (instance) {\n    const Component = instance.type;\n    if (type === COMPONENTS) {\n      const selfName = getComponentName(\n        Component,\n        false\n        /* do not include inferred name to avoid breaking existing code */\n      );\n      if (selfName && (selfName === name || selfName === camelize(name) || selfName === capitalize(camelize(name)))) {\n        return Component;\n      }\n    }\n    const res = (\n      // local registration\n      // check instance[type] first which is resolved for options API\n      resolve(instance[type] || Component[type], name) || // global registration\n      resolve(instance.appContext[type], name)\n    );\n    if (!res && maybeSelfReference) {\n      return Component;\n    }\n    if (!!(process.env.NODE_ENV !== \"production\") && warnMissing && !res) {\n      const extra = type === COMPONENTS ? `\nIf this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement.` : ``;\n      warn(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`);\n    }\n    return res;\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn(\n      `resolve${capitalize(type.slice(0, -1))} can only be used in render() or setup().`\n    );\n  }\n}\nfunction resolve(registry, name) {\n  return registry && (registry[name] || registry[camelize(name)] || registry[capitalize(camelize(name))]);\n}\n\nfunction renderList(source, renderItem, cache, index) {\n  let ret;\n  const cached = cache && cache[index];\n  if (isArray(source) || isString(source)) {\n    ret = new Array(source.length);\n    for (let i = 0, l = source.length; i < l; i++) {\n      ret[i] = renderItem(source[i], i, void 0, cached && cached[i]);\n    }\n  } else if (typeof source === \"number\") {\n    if (!!(process.env.NODE_ENV !== \"production\") && !Number.isInteger(source)) {\n      warn(`The v-for range expect an integer value but got ${source}.`);\n    }\n    ret = new Array(source);\n    for (let i = 0; i < source; i++) {\n      ret[i] = renderItem(i + 1, i, void 0, cached && cached[i]);\n    }\n  } else if (isObject(source)) {\n    if (source[Symbol.iterator]) {\n      ret = Array.from(\n        source,\n        (item, i) => renderItem(item, i, void 0, cached && cached[i])\n      );\n    } else {\n      const keys = Object.keys(source);\n      ret = new Array(keys.length);\n      for (let i = 0, l = keys.length; i < l; i++) {\n        const key = keys[i];\n        ret[i] = renderItem(source[key], key, i, cached && cached[i]);\n      }\n    }\n  } else {\n    ret = [];\n  }\n  if (cache) {\n    cache[index] = ret;\n  }\n  return ret;\n}\n\nfunction createSlots(slots, dynamicSlots) {\n  for (let i = 0; i < dynamicSlots.length; i++) {\n    const slot = dynamicSlots[i];\n    if (isArray(slot)) {\n      for (let j = 0; j < slot.length; j++) {\n        slots[slot[j].name] = slot[j].fn;\n      }\n    } else if (slot) {\n      slots[slot.name] = slot.key ? (...args) => {\n        const res = slot.fn(...args);\n        if (res)\n          res.key = slot.key;\n        return res;\n      } : slot.fn;\n    }\n  }\n  return slots;\n}\n\nfunction renderSlot(slots, name, props = {}, fallback, noSlotted) {\n  if (currentRenderingInstance.isCE || currentRenderingInstance.parent && isAsyncWrapper(currentRenderingInstance.parent) && currentRenderingInstance.parent.isCE) {\n    if (name !== \"default\")\n      props.name = name;\n    return createVNode(\"slot\", props, fallback && fallback());\n  }\n  let slot = slots[name];\n  if (!!(process.env.NODE_ENV !== \"production\") && slot && slot.length > 1) {\n    warn(\n      `SSR-optimized slot function detected in a non-SSR-optimized render function. You need to mark this component with $dynamic-slots in the parent template.`\n    );\n    slot = () => [];\n  }\n  if (slot && slot._c) {\n    slot._d = false;\n  }\n  openBlock();\n  const validSlotContent = slot && ensureValidVNode(slot(props));\n  const rendered = createBlock(\n    Fragment,\n    {\n      key: props.key || // slot content array of a dynamic conditional slot may have a branch\n      // key attached in the `createSlots` helper, respect that\n      validSlotContent && validSlotContent.key || `_${name}`\n    },\n    validSlotContent || (fallback ? fallback() : []),\n    validSlotContent && slots._ === 1 ? 64 : -2\n  );\n  if (!noSlotted && rendered.scopeId) {\n    rendered.slotScopeIds = [rendered.scopeId + \"-s\"];\n  }\n  if (slot && slot._c) {\n    slot._d = true;\n  }\n  return rendered;\n}\nfunction ensureValidVNode(vnodes) {\n  return vnodes.some((child) => {\n    if (!isVNode(child))\n      return true;\n    if (child.type === Comment)\n      return false;\n    if (child.type === Fragment && !ensureValidVNode(child.children))\n      return false;\n    return true;\n  }) ? vnodes : null;\n}\n\nfunction toHandlers(obj, preserveCaseIfNecessary) {\n  const ret = {};\n  if (!!(process.env.NODE_ENV !== \"production\") && !isObject(obj)) {\n    warn(`v-on with no argument expects an object value.`);\n    return ret;\n  }\n  for (const key in obj) {\n    ret[preserveCaseIfNecessary && /[A-Z]/.test(key) ? `on:${key}` : toHandlerKey(key)] = obj[key];\n  }\n  return ret;\n}\n\nconst getPublicInstance = (i) => {\n  if (!i)\n    return null;\n  if (isStatefulComponent(i))\n    return getExposeProxy(i) || i.proxy;\n  return getPublicInstance(i.parent);\n};\nconst publicPropertiesMap = (\n  // Move PURE marker to new line to workaround compiler discarding it\n  // due to type annotation\n  /* @__PURE__ */ extend(/* @__PURE__ */ Object.create(null), {\n    $: (i) => i,\n    $el: (i) => i.vnode.el,\n    $data: (i) => i.data,\n    $props: (i) => !!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(i.props) : i.props,\n    $attrs: (i) => !!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(i.attrs) : i.attrs,\n    $slots: (i) => !!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(i.slots) : i.slots,\n    $refs: (i) => !!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(i.refs) : i.refs,\n    $parent: (i) => getPublicInstance(i.parent),\n    $root: (i) => getPublicInstance(i.root),\n    $emit: (i) => i.emit,\n    $options: (i) => __VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type,\n    $forceUpdate: (i) => i.f || (i.f = () => queueJob(i.update)),\n    $nextTick: (i) => i.n || (i.n = nextTick.bind(i.proxy)),\n    $watch: (i) => __VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP\n  })\n);\nconst isReservedPrefix = (key) => key === \"_\" || key === \"$\";\nconst hasSetupBinding = (state, key) => state !== EMPTY_OBJ && !state.__isScriptSetup && hasOwn(state, key);\nconst PublicInstanceProxyHandlers = {\n  get({ _: instance }, key) {\n    const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\n    if (!!(process.env.NODE_ENV !== \"production\") && key === \"__isVue\") {\n      return true;\n    }\n    let normalizedProps;\n    if (key[0] !== \"$\") {\n      const n = accessCache[key];\n      if (n !== void 0) {\n        switch (n) {\n          case 1 /* SETUP */:\n            return setupState[key];\n          case 2 /* DATA */:\n            return data[key];\n          case 4 /* CONTEXT */:\n            return ctx[key];\n          case 3 /* PROPS */:\n            return props[key];\n        }\n      } else if (hasSetupBinding(setupState, key)) {\n        accessCache[key] = 1 /* SETUP */;\n        return setupState[key];\n      } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\n        accessCache[key] = 2 /* DATA */;\n        return data[key];\n      } else if (\n        // only cache other properties when instance has declared (thus stable)\n        // props\n        (normalizedProps = instance.propsOptions[0]) && hasOwn(normalizedProps, key)\n      ) {\n        accessCache[key] = 3 /* PROPS */;\n        return props[key];\n      } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\n        accessCache[key] = 4 /* CONTEXT */;\n        return ctx[key];\n      } else if (!__VUE_OPTIONS_API__ || shouldCacheAccess) {\n        accessCache[key] = 0 /* OTHER */;\n      }\n    }\n    const publicGetter = publicPropertiesMap[key];\n    let cssModule, globalProperties;\n    if (publicGetter) {\n      if (key === \"$attrs\") {\n        track(instance, \"get\", key);\n        !!(process.env.NODE_ENV !== \"production\") && markAttrsAccessed();\n      } else if (!!(process.env.NODE_ENV !== \"production\") && key === \"$slots\") {\n        track(instance, \"get\", key);\n      }\n      return publicGetter(instance);\n    } else if (\n      // css module (injected by vue-loader)\n      (cssModule = type.__cssModules) && (cssModule = cssModule[key])\n    ) {\n      return cssModule;\n    } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\n      accessCache[key] = 4 /* CONTEXT */;\n      return ctx[key];\n    } else if (\n      // global properties\n      globalProperties = appContext.config.globalProperties, hasOwn(globalProperties, key)\n    ) {\n      {\n        return globalProperties[key];\n      }\n    } else if (!!(process.env.NODE_ENV !== \"production\") && currentRenderingInstance && (!isString(key) || // #1091 avoid internal isRef/isVNode checks on component instance leading\n    // to infinite warning loop\n    key.indexOf(\"__v\") !== 0)) {\n      if (data !== EMPTY_OBJ && isReservedPrefix(key[0]) && hasOwn(data, key)) {\n        warn(\n          `Property ${JSON.stringify(\n            key\n          )} must be accessed via $data because it starts with a reserved character (\"$\" or \"_\") and is not proxied on the render context.`\n        );\n      } else if (instance === currentRenderingInstance) {\n        warn(\n          `Property ${JSON.stringify(key)} was accessed during render but is not defined on instance.`\n        );\n      }\n    }\n  },\n  set({ _: instance }, key, value) {\n    const { data, setupState, ctx } = instance;\n    if (hasSetupBinding(setupState, key)) {\n      setupState[key] = value;\n      return true;\n    } else if (!!(process.env.NODE_ENV !== \"production\") && setupState.__isScriptSetup && hasOwn(setupState, key)) {\n      warn(`Cannot mutate <script setup> binding \"${key}\" from Options API.`);\n      return false;\n    } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\n      data[key] = value;\n      return true;\n    } else if (hasOwn(instance.props, key)) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(`Attempting to mutate prop \"${key}\". Props are readonly.`);\n      return false;\n    }\n    if (key[0] === \"$\" && key.slice(1) in instance) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(\n        `Attempting to mutate public property \"${key}\". Properties starting with $ are reserved and readonly.`\n      );\n      return false;\n    } else {\n      if (!!(process.env.NODE_ENV !== \"production\") && key in instance.appContext.config.globalProperties) {\n        Object.defineProperty(ctx, key, {\n          enumerable: true,\n          configurable: true,\n          value\n        });\n      } else {\n        ctx[key] = value;\n      }\n    }\n    return true;\n  },\n  has({\n    _: { data, setupState, accessCache, ctx, appContext, propsOptions }\n  }, key) {\n    let normalizedProps;\n    return !!accessCache[key] || data !== EMPTY_OBJ && hasOwn(data, key) || hasSetupBinding(setupState, key) || (normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key) || hasOwn(ctx, key) || hasOwn(publicPropertiesMap, key) || hasOwn(appContext.config.globalProperties, key);\n  },\n  defineProperty(target, key, descriptor) {\n    if (descriptor.get != null) {\n      target._.accessCache[key] = 0;\n    } else if (hasOwn(descriptor, \"value\")) {\n      this.set(target, key, descriptor.value, null);\n    }\n    return Reflect.defineProperty(target, key, descriptor);\n  }\n};\nif (!!(process.env.NODE_ENV !== \"production\") && true) {\n  PublicInstanceProxyHandlers.ownKeys = (target) => {\n    warn(\n      `Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead.`\n    );\n    return Reflect.ownKeys(target);\n  };\n}\nconst RuntimeCompiledPublicInstanceProxyHandlers = /* @__PURE__ */ extend(\n  {},\n  PublicInstanceProxyHandlers,\n  {\n    get(target, key) {\n      if (key === Symbol.unscopables) {\n        return;\n      }\n      return PublicInstanceProxyHandlers.get(target, key, target);\n    },\n    has(_, key) {\n      const has = key[0] !== \"_\" && !isGloballyWhitelisted(key);\n      if (!!(process.env.NODE_ENV !== \"production\") && !has && PublicInstanceProxyHandlers.has(_, key)) {\n        warn(\n          `Property ${JSON.stringify(\n            key\n          )} should not start with _ which is a reserved prefix for Vue internals.`\n        );\n      }\n      return has;\n    }\n  }\n);\nfunction createDevRenderContext(instance) {\n  const target = {};\n  Object.defineProperty(target, `_`, {\n    configurable: true,\n    enumerable: false,\n    get: () => instance\n  });\n  Object.keys(publicPropertiesMap).forEach((key) => {\n    Object.defineProperty(target, key, {\n      configurable: true,\n      enumerable: false,\n      get: () => publicPropertiesMap[key](instance),\n      // intercepted by the proxy so no need for implementation,\n      // but needed to prevent set errors\n      set: NOOP\n    });\n  });\n  return target;\n}\nfunction exposePropsOnRenderContext(instance) {\n  const {\n    ctx,\n    propsOptions: [propsOptions]\n  } = instance;\n  if (propsOptions) {\n    Object.keys(propsOptions).forEach((key) => {\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => instance.props[key],\n        set: NOOP\n      });\n    });\n  }\n}\nfunction exposeSetupStateOnRenderContext(instance) {\n  const { ctx, setupState } = instance;\n  Object.keys(toRaw(setupState)).forEach((key) => {\n    if (!setupState.__isScriptSetup) {\n      if (isReservedPrefix(key[0])) {\n        warn(\n          `setup() return property ${JSON.stringify(\n            key\n          )} should not start with \"$\" or \"_\" which are reserved prefixes for Vue internals.`\n        );\n        return;\n      }\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => setupState[key],\n        set: NOOP\n      });\n    }\n  });\n}\n\nconst warnRuntimeUsage = (method) => warn(\n  `${method}() is a compiler-hint helper that is only usable inside <script setup> of a single file component. Its arguments should be compiled away and passing it at runtime has no effect.`\n);\nfunction defineProps() {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`defineProps`);\n  }\n  return null;\n}\nfunction defineEmits() {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`defineEmits`);\n  }\n  return null;\n}\nfunction defineExpose(exposed) {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`defineExpose`);\n  }\n}\nfunction defineOptions(options) {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`defineOptions`);\n  }\n}\nfunction defineSlots() {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`defineSlots`);\n  }\n  return null;\n}\nfunction defineModel() {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(\"defineModel\");\n  }\n}\nfunction withDefaults(props, defaults) {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`withDefaults`);\n  }\n  return null;\n}\nfunction useSlots() {\n  return getContext().slots;\n}\nfunction useAttrs() {\n  return getContext().attrs;\n}\nfunction useModel(props, name, options) {\n  const i = getCurrentInstance();\n  if (!!(process.env.NODE_ENV !== \"production\") && !i) {\n    warn(`useModel() called without active instance.`);\n    return ref();\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && !i.propsOptions[0][name]) {\n    warn(`useModel() called with prop \"${name}\" which is not declared.`);\n    return ref();\n  }\n  if (options && options.local) {\n    const proxy = ref(props[name]);\n    watch(\n      () => props[name],\n      (v) => proxy.value = v\n    );\n    watch(proxy, (value) => {\n      if (value !== props[name]) {\n        i.emit(`update:${name}`, value);\n      }\n    });\n    return proxy;\n  } else {\n    return {\n      __v_isRef: true,\n      get value() {\n        return props[name];\n      },\n      set value(value) {\n        i.emit(`update:${name}`, value);\n      }\n    };\n  }\n}\nfunction getContext() {\n  const i = getCurrentInstance();\n  if (!!(process.env.NODE_ENV !== \"production\") && !i) {\n    warn(`useContext() called without active instance.`);\n  }\n  return i.setupContext || (i.setupContext = createSetupContext(i));\n}\nfunction normalizePropsOrEmits(props) {\n  return isArray(props) ? props.reduce(\n    (normalized, p) => (normalized[p] = null, normalized),\n    {}\n  ) : props;\n}\nfunction mergeDefaults(raw, defaults) {\n  const props = normalizePropsOrEmits(raw);\n  for (const key in defaults) {\n    if (key.startsWith(\"__skip\"))\n      continue;\n    let opt = props[key];\n    if (opt) {\n      if (isArray(opt) || isFunction(opt)) {\n        opt = props[key] = { type: opt, default: defaults[key] };\n      } else {\n        opt.default = defaults[key];\n      }\n    } else if (opt === null) {\n      opt = props[key] = { default: defaults[key] };\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(`props default key \"${key}\" has no corresponding declaration.`);\n    }\n    if (opt && defaults[`__skip_${key}`]) {\n      opt.skipFactory = true;\n    }\n  }\n  return props;\n}\nfunction mergeModels(a, b) {\n  if (!a || !b)\n    return a || b;\n  if (isArray(a) && isArray(b))\n    return a.concat(b);\n  return extend({}, normalizePropsOrEmits(a), normalizePropsOrEmits(b));\n}\nfunction createPropsRestProxy(props, excludedKeys) {\n  const ret = {};\n  for (const key in props) {\n    if (!excludedKeys.includes(key)) {\n      Object.defineProperty(ret, key, {\n        enumerable: true,\n        get: () => props[key]\n      });\n    }\n  }\n  return ret;\n}\nfunction withAsyncContext(getAwaitable) {\n  const ctx = getCurrentInstance();\n  if (!!(process.env.NODE_ENV !== \"production\") && !ctx) {\n    warn(\n      `withAsyncContext called without active current instance. This is likely a bug.`\n    );\n  }\n  let awaitable = getAwaitable();\n  unsetCurrentInstance();\n  if (isPromise(awaitable)) {\n    awaitable = awaitable.catch((e) => {\n      setCurrentInstance(ctx);\n      throw e;\n    });\n  }\n  return [awaitable, () => setCurrentInstance(ctx)];\n}\n\nfunction createDuplicateChecker() {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (type, key) => {\n    if (cache[key]) {\n      warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\n    } else {\n      cache[key] = type;\n    }\n  };\n}\nlet shouldCacheAccess = true;\nfunction applyOptions(instance) {\n  const options = resolveMergedOptions(instance);\n  const publicThis = instance.proxy;\n  const ctx = instance.ctx;\n  shouldCacheAccess = false;\n  if (options.beforeCreate) {\n    callHook(options.beforeCreate, instance, \"bc\");\n  }\n  const {\n    // state\n    data: dataOptions,\n    computed: computedOptions,\n    methods,\n    watch: watchOptions,\n    provide: provideOptions,\n    inject: injectOptions,\n    // lifecycle\n    created,\n    beforeMount,\n    mounted,\n    beforeUpdate,\n    updated,\n    activated,\n    deactivated,\n    beforeDestroy,\n    beforeUnmount,\n    destroyed,\n    unmounted,\n    render,\n    renderTracked,\n    renderTriggered,\n    errorCaptured,\n    serverPrefetch,\n    // public API\n    expose,\n    inheritAttrs,\n    // assets\n    components,\n    directives,\n    filters\n  } = options;\n  const checkDuplicateProperties = !!(process.env.NODE_ENV !== \"production\") ? createDuplicateChecker() : null;\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    const [propsOptions] = instance.propsOptions;\n    if (propsOptions) {\n      for (const key in propsOptions) {\n        checkDuplicateProperties(\"Props\" /* PROPS */, key);\n      }\n    }\n  }\n  if (injectOptions) {\n    resolveInjections(injectOptions, ctx, checkDuplicateProperties);\n  }\n  if (methods) {\n    for (const key in methods) {\n      const methodHandler = methods[key];\n      if (isFunction(methodHandler)) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          Object.defineProperty(ctx, key, {\n            value: methodHandler.bind(publicThis),\n            configurable: true,\n            enumerable: true,\n            writable: true\n          });\n        } else {\n          ctx[key] = methodHandler.bind(publicThis);\n        }\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          checkDuplicateProperties(\"Methods\" /* METHODS */, key);\n        }\n      } else if (!!(process.env.NODE_ENV !== \"production\")) {\n        warn(\n          `Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. Did you reference the function correctly?`\n        );\n      }\n    }\n  }\n  if (dataOptions) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !isFunction(dataOptions)) {\n      warn(\n        `The data option must be a function. Plain object usage is no longer supported.`\n      );\n    }\n    const data = dataOptions.call(publicThis, publicThis);\n    if (!!(process.env.NODE_ENV !== \"production\") && isPromise(data)) {\n      warn(\n        `data() returned a Promise - note data() cannot be async; If you intend to perform data fetching before component renders, use async setup() + <Suspense>.`\n      );\n    }\n    if (!isObject(data)) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(`data() should return an object.`);\n    } else {\n      instance.data = reactive(data);\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        for (const key in data) {\n          checkDuplicateProperties(\"Data\" /* DATA */, key);\n          if (!isReservedPrefix(key[0])) {\n            Object.defineProperty(ctx, key, {\n              configurable: true,\n              enumerable: true,\n              get: () => data[key],\n              set: NOOP\n            });\n          }\n        }\n      }\n    }\n  }\n  shouldCacheAccess = true;\n  if (computedOptions) {\n    for (const key in computedOptions) {\n      const opt = computedOptions[key];\n      const get = isFunction(opt) ? opt.bind(publicThis, publicThis) : isFunction(opt.get) ? opt.get.bind(publicThis, publicThis) : NOOP;\n      if (!!(process.env.NODE_ENV !== \"production\") && get === NOOP) {\n        warn(`Computed property \"${key}\" has no getter.`);\n      }\n      const set = !isFunction(opt) && isFunction(opt.set) ? opt.set.bind(publicThis) : !!(process.env.NODE_ENV !== \"production\") ? () => {\n        warn(\n          `Write operation failed: computed property \"${key}\" is readonly.`\n        );\n      } : NOOP;\n      const c = computed({\n        get,\n        set\n      });\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => c.value,\n        set: (v) => c.value = v\n      });\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\n      }\n    }\n  }\n  if (watchOptions) {\n    for (const key in watchOptions) {\n      createWatcher(watchOptions[key], ctx, publicThis, key);\n    }\n  }\n  if (provideOptions) {\n    const provides = isFunction(provideOptions) ? provideOptions.call(publicThis) : provideOptions;\n    Reflect.ownKeys(provides).forEach((key) => {\n      provide(key, provides[key]);\n    });\n  }\n  if (created) {\n    callHook(created, instance, \"c\");\n  }\n  function registerLifecycleHook(register, hook) {\n    if (isArray(hook)) {\n      hook.forEach((_hook) => register(_hook.bind(publicThis)));\n    } else if (hook) {\n      register(hook.bind(publicThis));\n    }\n  }\n  registerLifecycleHook(onBeforeMount, beforeMount);\n  registerLifecycleHook(onMounted, mounted);\n  registerLifecycleHook(onBeforeUpdate, beforeUpdate);\n  registerLifecycleHook(onUpdated, updated);\n  registerLifecycleHook(onActivated, activated);\n  registerLifecycleHook(onDeactivated, deactivated);\n  registerLifecycleHook(onErrorCaptured, errorCaptured);\n  registerLifecycleHook(onRenderTracked, renderTracked);\n  registerLifecycleHook(onRenderTriggered, renderTriggered);\n  registerLifecycleHook(onBeforeUnmount, beforeUnmount);\n  registerLifecycleHook(onUnmounted, unmounted);\n  registerLifecycleHook(onServerPrefetch, serverPrefetch);\n  if (isArray(expose)) {\n    if (expose.length) {\n      const exposed = instance.exposed || (instance.exposed = {});\n      expose.forEach((key) => {\n        Object.defineProperty(exposed, key, {\n          get: () => publicThis[key],\n          set: (val) => publicThis[key] = val\n        });\n      });\n    } else if (!instance.exposed) {\n      instance.exposed = {};\n    }\n  }\n  if (render && instance.render === NOOP) {\n    instance.render = render;\n  }\n  if (inheritAttrs != null) {\n    instance.inheritAttrs = inheritAttrs;\n  }\n  if (components)\n    instance.components = components;\n  if (directives)\n    instance.directives = directives;\n}\nfunction resolveInjections(injectOptions, ctx, checkDuplicateProperties = NOOP) {\n  if (isArray(injectOptions)) {\n    injectOptions = normalizeInject(injectOptions);\n  }\n  for (const key in injectOptions) {\n    const opt = injectOptions[key];\n    let injected;\n    if (isObject(opt)) {\n      if (\"default\" in opt) {\n        injected = inject(\n          opt.from || key,\n          opt.default,\n          true\n          /* treat default function as factory */\n        );\n      } else {\n        injected = inject(opt.from || key);\n      }\n    } else {\n      injected = inject(opt);\n    }\n    if (isRef(injected)) {\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => injected.value,\n        set: (v) => injected.value = v\n      });\n    } else {\n      ctx[key] = injected;\n    }\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      checkDuplicateProperties(\"Inject\" /* INJECT */, key);\n    }\n  }\n}\nfunction callHook(hook, instance, type) {\n  callWithAsyncErrorHandling(\n    isArray(hook) ? hook.map((h) => h.bind(instance.proxy)) : hook.bind(instance.proxy),\n    instance,\n    type\n  );\n}\nfunction createWatcher(raw, ctx, publicThis, key) {\n  const getter = key.includes(\".\") ? createPathGetter(publicThis, key) : () => publicThis[key];\n  if (isString(raw)) {\n    const handler = ctx[raw];\n    if (isFunction(handler)) {\n      watch(getter, handler);\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\n    }\n  } else if (isFunction(raw)) {\n    watch(getter, raw.bind(publicThis));\n  } else if (isObject(raw)) {\n    if (isArray(raw)) {\n      raw.forEach((r) => createWatcher(r, ctx, publicThis, key));\n    } else {\n      const handler = isFunction(raw.handler) ? raw.handler.bind(publicThis) : ctx[raw.handler];\n      if (isFunction(handler)) {\n        watch(getter, handler, raw);\n      } else if (!!(process.env.NODE_ENV !== \"production\")) {\n        warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\n      }\n    }\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn(`Invalid watch option: \"${key}\"`, raw);\n  }\n}\nfunction resolveMergedOptions(instance) {\n  const base = instance.type;\n  const { mixins, extends: extendsOptions } = base;\n  const {\n    mixins: globalMixins,\n    optionsCache: cache,\n    config: { optionMergeStrategies }\n  } = instance.appContext;\n  const cached = cache.get(base);\n  let resolved;\n  if (cached) {\n    resolved = cached;\n  } else if (!globalMixins.length && !mixins && !extendsOptions) {\n    {\n      resolved = base;\n    }\n  } else {\n    resolved = {};\n    if (globalMixins.length) {\n      globalMixins.forEach(\n        (m) => mergeOptions(resolved, m, optionMergeStrategies, true)\n      );\n    }\n    mergeOptions(resolved, base, optionMergeStrategies);\n  }\n  if (isObject(base)) {\n    cache.set(base, resolved);\n  }\n  return resolved;\n}\nfunction mergeOptions(to, from, strats, asMixin = false) {\n  const { mixins, extends: extendsOptions } = from;\n  if (extendsOptions) {\n    mergeOptions(to, extendsOptions, strats, true);\n  }\n  if (mixins) {\n    mixins.forEach(\n      (m) => mergeOptions(to, m, strats, true)\n    );\n  }\n  for (const key in from) {\n    if (asMixin && key === \"expose\") {\n      !!(process.env.NODE_ENV !== \"production\") && warn(\n        `\"expose\" option is ignored when declared in mixins or extends. It should only be declared in the base component itself.`\n      );\n    } else {\n      const strat = internalOptionMergeStrats[key] || strats && strats[key];\n      to[key] = strat ? strat(to[key], from[key]) : from[key];\n    }\n  }\n  return to;\n}\nconst internalOptionMergeStrats = {\n  data: mergeDataFn,\n  props: mergeEmitsOrPropsOptions,\n  emits: mergeEmitsOrPropsOptions,\n  // objects\n  methods: mergeObjectOptions,\n  computed: mergeObjectOptions,\n  // lifecycle\n  beforeCreate: mergeAsArray,\n  created: mergeAsArray,\n  beforeMount: mergeAsArray,\n  mounted: mergeAsArray,\n  beforeUpdate: mergeAsArray,\n  updated: mergeAsArray,\n  beforeDestroy: mergeAsArray,\n  beforeUnmount: mergeAsArray,\n  destroyed: mergeAsArray,\n  unmounted: mergeAsArray,\n  activated: mergeAsArray,\n  deactivated: mergeAsArray,\n  errorCaptured: mergeAsArray,\n  serverPrefetch: mergeAsArray,\n  // assets\n  components: mergeObjectOptions,\n  directives: mergeObjectOptions,\n  // watch\n  watch: mergeWatchOptions,\n  // provide / inject\n  provide: mergeDataFn,\n  inject: mergeInject\n};\nfunction mergeDataFn(to, from) {\n  if (!from) {\n    return to;\n  }\n  if (!to) {\n    return from;\n  }\n  return function mergedDataFn() {\n    return (extend)(\n      isFunction(to) ? to.call(this, this) : to,\n      isFunction(from) ? from.call(this, this) : from\n    );\n  };\n}\nfunction mergeInject(to, from) {\n  return mergeObjectOptions(normalizeInject(to), normalizeInject(from));\n}\nfunction normalizeInject(raw) {\n  if (isArray(raw)) {\n    const res = {};\n    for (let i = 0; i < raw.length; i++) {\n      res[raw[i]] = raw[i];\n    }\n    return res;\n  }\n  return raw;\n}\nfunction mergeAsArray(to, from) {\n  return to ? [...new Set([].concat(to, from))] : from;\n}\nfunction mergeObjectOptions(to, from) {\n  return to ? extend(/* @__PURE__ */ Object.create(null), to, from) : from;\n}\nfunction mergeEmitsOrPropsOptions(to, from) {\n  if (to) {\n    if (isArray(to) && isArray(from)) {\n      return [.../* @__PURE__ */ new Set([...to, ...from])];\n    }\n    return extend(\n      /* @__PURE__ */ Object.create(null),\n      normalizePropsOrEmits(to),\n      normalizePropsOrEmits(from != null ? from : {})\n    );\n  } else {\n    return from;\n  }\n}\nfunction mergeWatchOptions(to, from) {\n  if (!to)\n    return from;\n  if (!from)\n    return to;\n  const merged = extend(/* @__PURE__ */ Object.create(null), to);\n  for (const key in from) {\n    merged[key] = mergeAsArray(to[key], from[key]);\n  }\n  return merged;\n}\n\nfunction createAppContext() {\n  return {\n    app: null,\n    config: {\n      isNativeTag: NO,\n      performance: false,\n      globalProperties: {},\n      optionMergeStrategies: {},\n      errorHandler: void 0,\n      warnHandler: void 0,\n      compilerOptions: {}\n    },\n    mixins: [],\n    components: {},\n    directives: {},\n    provides: /* @__PURE__ */ Object.create(null),\n    optionsCache: /* @__PURE__ */ new WeakMap(),\n    propsCache: /* @__PURE__ */ new WeakMap(),\n    emitsCache: /* @__PURE__ */ new WeakMap()\n  };\n}\nlet uid$1 = 0;\nfunction createAppAPI(render, hydrate) {\n  return function createApp(rootComponent, rootProps = null) {\n    if (!isFunction(rootComponent)) {\n      rootComponent = extend({}, rootComponent);\n    }\n    if (rootProps != null && !isObject(rootProps)) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(`root props passed to app.mount() must be an object.`);\n      rootProps = null;\n    }\n    const context = createAppContext();\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      Object.defineProperty(context.config, \"unwrapInjectedRef\", {\n        get() {\n          return true;\n        },\n        set() {\n          warn(\n            `app.config.unwrapInjectedRef has been deprecated. 3.3 now alawys unwraps injected refs in Options API.`\n          );\n        }\n      });\n    }\n    const installedPlugins = /* @__PURE__ */ new Set();\n    let isMounted = false;\n    const app = context.app = {\n      _uid: uid$1++,\n      _component: rootComponent,\n      _props: rootProps,\n      _container: null,\n      _context: context,\n      _instance: null,\n      version,\n      get config() {\n        return context.config;\n      },\n      set config(v) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(\n            `app.config cannot be replaced. Modify individual options instead.`\n          );\n        }\n      },\n      use(plugin, ...options) {\n        if (installedPlugins.has(plugin)) {\n          !!(process.env.NODE_ENV !== \"production\") && warn(`Plugin has already been applied to target app.`);\n        } else if (plugin && isFunction(plugin.install)) {\n          installedPlugins.add(plugin);\n          plugin.install(app, ...options);\n        } else if (isFunction(plugin)) {\n          installedPlugins.add(plugin);\n          plugin(app, ...options);\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(\n            `A plugin must either be a function or an object with an \"install\" function.`\n          );\n        }\n        return app;\n      },\n      mixin(mixin) {\n        if (__VUE_OPTIONS_API__) {\n          if (!context.mixins.includes(mixin)) {\n            context.mixins.push(mixin);\n          } else if (!!(process.env.NODE_ENV !== \"production\")) {\n            warn(\n              \"Mixin has already been applied to target app\" + (mixin.name ? `: ${mixin.name}` : \"\")\n            );\n          }\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(\"Mixins are only available in builds supporting Options API\");\n        }\n        return app;\n      },\n      component(name, component) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          validateComponentName(name, context.config);\n        }\n        if (!component) {\n          return context.components[name];\n        }\n        if (!!(process.env.NODE_ENV !== \"production\") && context.components[name]) {\n          warn(`Component \"${name}\" has already been registered in target app.`);\n        }\n        context.components[name] = component;\n        return app;\n      },\n      directive(name, directive) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          validateDirectiveName(name);\n        }\n        if (!directive) {\n          return context.directives[name];\n        }\n        if (!!(process.env.NODE_ENV !== \"production\") && context.directives[name]) {\n          warn(`Directive \"${name}\" has already been registered in target app.`);\n        }\n        context.directives[name] = directive;\n        return app;\n      },\n      mount(rootContainer, isHydrate, isSVG) {\n        if (!isMounted) {\n          if (!!(process.env.NODE_ENV !== \"production\") && rootContainer.__vue_app__) {\n            warn(\n              `There is already an app instance mounted on the host container.\n If you want to mount another app on the same host container, you need to unmount the previous app by calling \\`app.unmount()\\` first.`\n            );\n          }\n          const vnode = createVNode(\n            rootComponent,\n            rootProps\n          );\n          vnode.appContext = context;\n          if (!!(process.env.NODE_ENV !== \"production\")) {\n            context.reload = () => {\n              render(cloneVNode(vnode), rootContainer, isSVG);\n            };\n          }\n          if (isHydrate && hydrate) {\n            hydrate(vnode, rootContainer);\n          } else {\n            render(vnode, rootContainer, isSVG);\n          }\n          isMounted = true;\n          app._container = rootContainer;\n          rootContainer.__vue_app__ = app;\n          if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n            app._instance = vnode.component;\n            devtoolsInitApp(app, version);\n          }\n          return getExposeProxy(vnode.component) || vnode.component.proxy;\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(\n            `App has already been mounted.\nIf you want to remount the same app, move your app creation logic into a factory function and create fresh app instances for each mount - e.g. \\`const createMyApp = () => createApp(App)\\``\n          );\n        }\n      },\n      unmount() {\n        if (isMounted) {\n          render(null, app._container);\n          if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n            app._instance = null;\n            devtoolsUnmountApp(app);\n          }\n          delete app._container.__vue_app__;\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(`Cannot unmount an app that is not mounted.`);\n        }\n      },\n      provide(key, value) {\n        if (!!(process.env.NODE_ENV !== \"production\") && key in context.provides) {\n          warn(\n            `App already provides property with key \"${String(key)}\". It will be overwritten with the new value.`\n          );\n        }\n        context.provides[key] = value;\n        return app;\n      },\n      runWithContext(fn) {\n        currentApp = app;\n        try {\n          return fn();\n        } finally {\n          currentApp = null;\n        }\n      }\n    };\n    return app;\n  };\n}\nlet currentApp = null;\n\nfunction provide(key, value) {\n  if (!currentInstance) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(`provide() can only be used inside setup().`);\n    }\n  } else {\n    let provides = currentInstance.provides;\n    const parentProvides = currentInstance.parent && currentInstance.parent.provides;\n    if (parentProvides === provides) {\n      provides = currentInstance.provides = Object.create(parentProvides);\n    }\n    provides[key] = value;\n  }\n}\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\n  const instance = currentInstance || currentRenderingInstance;\n  if (instance || currentApp) {\n    const provides = instance ? instance.parent == null ? instance.vnode.appContext && instance.vnode.appContext.provides : instance.parent.provides : currentApp._context.provides;\n    if (provides && key in provides) {\n      return provides[key];\n    } else if (arguments.length > 1) {\n      return treatDefaultAsFactory && isFunction(defaultValue) ? defaultValue.call(instance && instance.proxy) : defaultValue;\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(`injection \"${String(key)}\" not found.`);\n    }\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn(`inject() can only be used inside setup() or functional components.`);\n  }\n}\nfunction hasInjectionContext() {\n  return !!(currentInstance || currentRenderingInstance || currentApp);\n}\n\nfunction initProps(instance, rawProps, isStateful, isSSR = false) {\n  const props = {};\n  const attrs = {};\n  def(attrs, InternalObjectKey, 1);\n  instance.propsDefaults = /* @__PURE__ */ Object.create(null);\n  setFullProps(instance, rawProps, props, attrs);\n  for (const key in instance.propsOptions[0]) {\n    if (!(key in props)) {\n      props[key] = void 0;\n    }\n  }\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    validateProps(rawProps || {}, props, instance);\n  }\n  if (isStateful) {\n    instance.props = isSSR ? props : shallowReactive(props);\n  } else {\n    if (!instance.type.props) {\n      instance.props = attrs;\n    } else {\n      instance.props = props;\n    }\n  }\n  instance.attrs = attrs;\n}\nfunction isInHmrContext(instance) {\n  while (instance) {\n    if (instance.type.__hmrId)\n      return true;\n    instance = instance.parent;\n  }\n}\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\n  const {\n    props,\n    attrs,\n    vnode: { patchFlag }\n  } = instance;\n  const rawCurrentProps = toRaw(props);\n  const [options] = instance.propsOptions;\n  let hasAttrsChanged = false;\n  if (\n    // always force full diff in dev\n    // - #1942 if hmr is enabled with sfc component\n    // - vite#872 non-sfc component used by sfc component\n    !(!!(process.env.NODE_ENV !== \"production\") && isInHmrContext(instance)) && (optimized || patchFlag > 0) && !(patchFlag & 16)\n  ) {\n    if (patchFlag & 8) {\n      const propsToUpdate = instance.vnode.dynamicProps;\n      for (let i = 0; i < propsToUpdate.length; i++) {\n        let key = propsToUpdate[i];\n        if (isEmitListener(instance.emitsOptions, key)) {\n          continue;\n        }\n        const value = rawProps[key];\n        if (options) {\n          if (hasOwn(attrs, key)) {\n            if (value !== attrs[key]) {\n              attrs[key] = value;\n              hasAttrsChanged = true;\n            }\n          } else {\n            const camelizedKey = camelize(key);\n            props[camelizedKey] = resolvePropValue(\n              options,\n              rawCurrentProps,\n              camelizedKey,\n              value,\n              instance,\n              false\n              /* isAbsent */\n            );\n          }\n        } else {\n          if (value !== attrs[key]) {\n            attrs[key] = value;\n            hasAttrsChanged = true;\n          }\n        }\n      }\n    }\n  } else {\n    if (setFullProps(instance, rawProps, props, attrs)) {\n      hasAttrsChanged = true;\n    }\n    let kebabKey;\n    for (const key in rawCurrentProps) {\n      if (!rawProps || // for camelCase\n      !hasOwn(rawProps, key) && // it's possible the original props was passed in as kebab-case\n      // and converted to camelCase (#955)\n      ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey))) {\n        if (options) {\n          if (rawPrevProps && // for camelCase\n          (rawPrevProps[key] !== void 0 || // for kebab-case\n          rawPrevProps[kebabKey] !== void 0)) {\n            props[key] = resolvePropValue(\n              options,\n              rawCurrentProps,\n              key,\n              void 0,\n              instance,\n              true\n              /* isAbsent */\n            );\n          }\n        } else {\n          delete props[key];\n        }\n      }\n    }\n    if (attrs !== rawCurrentProps) {\n      for (const key in attrs) {\n        if (!rawProps || !hasOwn(rawProps, key) && true) {\n          delete attrs[key];\n          hasAttrsChanged = true;\n        }\n      }\n    }\n  }\n  if (hasAttrsChanged) {\n    trigger(instance, \"set\", \"$attrs\");\n  }\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    validateProps(rawProps || {}, props, instance);\n  }\n}\nfunction setFullProps(instance, rawProps, props, attrs) {\n  const [options, needCastKeys] = instance.propsOptions;\n  let hasAttrsChanged = false;\n  let rawCastValues;\n  if (rawProps) {\n    for (let key in rawProps) {\n      if (isReservedProp(key)) {\n        continue;\n      }\n      const value = rawProps[key];\n      let camelKey;\n      if (options && hasOwn(options, camelKey = camelize(key))) {\n        if (!needCastKeys || !needCastKeys.includes(camelKey)) {\n          props[camelKey] = value;\n        } else {\n          (rawCastValues || (rawCastValues = {}))[camelKey] = value;\n        }\n      } else if (!isEmitListener(instance.emitsOptions, key)) {\n        if (!(key in attrs) || value !== attrs[key]) {\n          attrs[key] = value;\n          hasAttrsChanged = true;\n        }\n      }\n    }\n  }\n  if (needCastKeys) {\n    const rawCurrentProps = toRaw(props);\n    const castValues = rawCastValues || EMPTY_OBJ;\n    for (let i = 0; i < needCastKeys.length; i++) {\n      const key = needCastKeys[i];\n      props[key] = resolvePropValue(\n        options,\n        rawCurrentProps,\n        key,\n        castValues[key],\n        instance,\n        !hasOwn(castValues, key)\n      );\n    }\n  }\n  return hasAttrsChanged;\n}\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\n  const opt = options[key];\n  if (opt != null) {\n    const hasDefault = hasOwn(opt, \"default\");\n    if (hasDefault && value === void 0) {\n      const defaultValue = opt.default;\n      if (opt.type !== Function && !opt.skipFactory && isFunction(defaultValue)) {\n        const { propsDefaults } = instance;\n        if (key in propsDefaults) {\n          value = propsDefaults[key];\n        } else {\n          setCurrentInstance(instance);\n          value = propsDefaults[key] = defaultValue.call(\n            null,\n            props\n          );\n          unsetCurrentInstance();\n        }\n      } else {\n        value = defaultValue;\n      }\n    }\n    if (opt[0 /* shouldCast */]) {\n      if (isAbsent && !hasDefault) {\n        value = false;\n      } else if (opt[1 /* shouldCastTrue */] && (value === \"\" || value === hyphenate(key))) {\n        value = true;\n      }\n    }\n  }\n  return value;\n}\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\n  const cache = appContext.propsCache;\n  const cached = cache.get(comp);\n  if (cached) {\n    return cached;\n  }\n  const raw = comp.props;\n  const normalized = {};\n  const needCastKeys = [];\n  let hasExtends = false;\n  if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\n    const extendProps = (raw2) => {\n      hasExtends = true;\n      const [props, keys] = normalizePropsOptions(raw2, appContext, true);\n      extend(normalized, props);\n      if (keys)\n        needCastKeys.push(...keys);\n    };\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendProps);\n    }\n    if (comp.extends) {\n      extendProps(comp.extends);\n    }\n    if (comp.mixins) {\n      comp.mixins.forEach(extendProps);\n    }\n  }\n  if (!raw && !hasExtends) {\n    if (isObject(comp)) {\n      cache.set(comp, EMPTY_ARR);\n    }\n    return EMPTY_ARR;\n  }\n  if (isArray(raw)) {\n    for (let i = 0; i < raw.length; i++) {\n      if (!!(process.env.NODE_ENV !== \"production\") && !isString(raw[i])) {\n        warn(`props must be strings when using array syntax.`, raw[i]);\n      }\n      const normalizedKey = camelize(raw[i]);\n      if (validatePropName(normalizedKey)) {\n        normalized[normalizedKey] = EMPTY_OBJ;\n      }\n    }\n  } else if (raw) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !isObject(raw)) {\n      warn(`invalid props options`, raw);\n    }\n    for (const key in raw) {\n      const normalizedKey = camelize(key);\n      if (validatePropName(normalizedKey)) {\n        const opt = raw[key];\n        const prop = normalized[normalizedKey] = isArray(opt) || isFunction(opt) ? { type: opt } : extend({}, opt);\n        if (prop) {\n          const booleanIndex = getTypeIndex(Boolean, prop.type);\n          const stringIndex = getTypeIndex(String, prop.type);\n          prop[0 /* shouldCast */] = booleanIndex > -1;\n          prop[1 /* shouldCastTrue */] = stringIndex < 0 || booleanIndex < stringIndex;\n          if (booleanIndex > -1 || hasOwn(prop, \"default\")) {\n            needCastKeys.push(normalizedKey);\n          }\n        }\n      }\n    }\n  }\n  const res = [normalized, needCastKeys];\n  if (isObject(comp)) {\n    cache.set(comp, res);\n  }\n  return res;\n}\nfunction validatePropName(key) {\n  if (key[0] !== \"$\") {\n    return true;\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn(`Invalid prop name: \"${key}\" is a reserved property.`);\n  }\n  return false;\n}\nfunction getType(ctor) {\n  const match = ctor && ctor.toString().match(/^\\s*(function|class) (\\w+)/);\n  return match ? match[2] : ctor === null ? \"null\" : \"\";\n}\nfunction isSameType(a, b) {\n  return getType(a) === getType(b);\n}\nfunction getTypeIndex(type, expectedTypes) {\n  if (isArray(expectedTypes)) {\n    return expectedTypes.findIndex((t) => isSameType(t, type));\n  } else if (isFunction(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1;\n  }\n  return -1;\n}\nfunction validateProps(rawProps, props, instance) {\n  const resolvedValues = toRaw(props);\n  const options = instance.propsOptions[0];\n  for (const key in options) {\n    let opt = options[key];\n    if (opt == null)\n      continue;\n    validateProp(\n      key,\n      resolvedValues[key],\n      opt,\n      !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key))\n    );\n  }\n}\nfunction validateProp(name, value, prop, isAbsent) {\n  const { type, required, validator, skipCheck } = prop;\n  if (required && isAbsent) {\n    warn('Missing required prop: \"' + name + '\"');\n    return;\n  }\n  if (value == null && !required) {\n    return;\n  }\n  if (type != null && type !== true && !skipCheck) {\n    let isValid = false;\n    const types = isArray(type) ? type : [type];\n    const expectedTypes = [];\n    for (let i = 0; i < types.length && !isValid; i++) {\n      const { valid, expectedType } = assertType(value, types[i]);\n      expectedTypes.push(expectedType || \"\");\n      isValid = valid;\n    }\n    if (!isValid) {\n      warn(getInvalidTypeMessage(name, value, expectedTypes));\n      return;\n    }\n  }\n  if (validator && !validator(value)) {\n    warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\n  }\n}\nconst isSimpleType = /* @__PURE__ */ makeMap(\n  \"String,Number,Boolean,Function,Symbol,BigInt\"\n);\nfunction assertType(value, type) {\n  let valid;\n  const expectedType = getType(type);\n  if (isSimpleType(expectedType)) {\n    const t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    if (!valid && t === \"object\") {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === \"Object\") {\n    valid = isObject(value);\n  } else if (expectedType === \"Array\") {\n    valid = isArray(value);\n  } else if (expectedType === \"null\") {\n    valid = value === null;\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid,\n    expectedType\n  };\n}\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\n  let message = `Invalid prop: type check failed for prop \"${name}\". Expected ${expectedTypes.map(capitalize).join(\" | \")}`;\n  const expectedType = expectedTypes[0];\n  const receivedType = toRawType(value);\n  const expectedValue = styleValue(value, expectedType);\n  const receivedValue = styleValue(value, receivedType);\n  if (expectedTypes.length === 1 && isExplicable(expectedType) && !isBoolean(expectedType, receivedType)) {\n    message += ` with value ${expectedValue}`;\n  }\n  message += `, got ${receivedType} `;\n  if (isExplicable(receivedType)) {\n    message += `with value ${receivedValue}.`;\n  }\n  return message;\n}\nfunction styleValue(value, type) {\n  if (type === \"String\") {\n    return `\"${value}\"`;\n  } else if (type === \"Number\") {\n    return `${Number(value)}`;\n  } else {\n    return `${value}`;\n  }\n}\nfunction isExplicable(type) {\n  const explicitTypes = [\"string\", \"number\", \"boolean\"];\n  return explicitTypes.some((elem) => type.toLowerCase() === elem);\n}\nfunction isBoolean(...args) {\n  return args.some((elem) => elem.toLowerCase() === \"boolean\");\n}\n\nconst isInternalKey = (key) => key[0] === \"_\" || key === \"$stable\";\nconst normalizeSlotValue = (value) => isArray(value) ? value.map(normalizeVNode) : [normalizeVNode(value)];\nconst normalizeSlot = (key, rawSlot, ctx) => {\n  if (rawSlot._n) {\n    return rawSlot;\n  }\n  const normalized = withCtx((...args) => {\n    if (!!(process.env.NODE_ENV !== \"production\") && currentInstance) {\n      warn(\n        `Slot \"${key}\" invoked outside of the render function: this will not track dependencies used in the slot. Invoke the slot function inside the render function instead.`\n      );\n    }\n    return normalizeSlotValue(rawSlot(...args));\n  }, ctx);\n  normalized._c = false;\n  return normalized;\n};\nconst normalizeObjectSlots = (rawSlots, slots, instance) => {\n  const ctx = rawSlots._ctx;\n  for (const key in rawSlots) {\n    if (isInternalKey(key))\n      continue;\n    const value = rawSlots[key];\n    if (isFunction(value)) {\n      slots[key] = normalizeSlot(key, value, ctx);\n    } else if (value != null) {\n      if (!!(process.env.NODE_ENV !== \"production\") && true) {\n        warn(\n          `Non-function value encountered for slot \"${key}\". Prefer function slots for better performance.`\n        );\n      }\n      const normalized = normalizeSlotValue(value);\n      slots[key] = () => normalized;\n    }\n  }\n};\nconst normalizeVNodeSlots = (instance, children) => {\n  if (!!(process.env.NODE_ENV !== \"production\") && !isKeepAlive(instance.vnode) && true) {\n    warn(\n      `Non-function value encountered for default slot. Prefer function slots for better performance.`\n    );\n  }\n  const normalized = normalizeSlotValue(children);\n  instance.slots.default = () => normalized;\n};\nconst initSlots = (instance, children) => {\n  if (instance.vnode.shapeFlag & 32) {\n    const type = children._;\n    if (type) {\n      instance.slots = toRaw(children);\n      def(children, \"_\", type);\n    } else {\n      normalizeObjectSlots(\n        children,\n        instance.slots = {});\n    }\n  } else {\n    instance.slots = {};\n    if (children) {\n      normalizeVNodeSlots(instance, children);\n    }\n  }\n  def(instance.slots, InternalObjectKey, 1);\n};\nconst updateSlots = (instance, children, optimized) => {\n  const { vnode, slots } = instance;\n  let needDeletionCheck = true;\n  let deletionComparisonTarget = EMPTY_OBJ;\n  if (vnode.shapeFlag & 32) {\n    const type = children._;\n    if (type) {\n      if (!!(process.env.NODE_ENV !== \"production\") && isHmrUpdating) {\n        extend(slots, children);\n        trigger(instance, \"set\", \"$slots\");\n      } else if (optimized && type === 1) {\n        needDeletionCheck = false;\n      } else {\n        extend(slots, children);\n        if (!optimized && type === 1) {\n          delete slots._;\n        }\n      }\n    } else {\n      needDeletionCheck = !children.$stable;\n      normalizeObjectSlots(children, slots);\n    }\n    deletionComparisonTarget = children;\n  } else if (children) {\n    normalizeVNodeSlots(instance, children);\n    deletionComparisonTarget = { default: 1 };\n  }\n  if (needDeletionCheck) {\n    for (const key in slots) {\n      if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\n        delete slots[key];\n      }\n    }\n  }\n};\n\nfunction setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {\n  if (isArray(rawRef)) {\n    rawRef.forEach(\n      (r, i) => setRef(\n        r,\n        oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef),\n        parentSuspense,\n        vnode,\n        isUnmount\n      )\n    );\n    return;\n  }\n  if (isAsyncWrapper(vnode) && !isUnmount) {\n    return;\n  }\n  const refValue = vnode.shapeFlag & 4 ? getExposeProxy(vnode.component) || vnode.component.proxy : vnode.el;\n  const value = isUnmount ? null : refValue;\n  const { i: owner, r: ref } = rawRef;\n  if (!!(process.env.NODE_ENV !== \"production\") && !owner) {\n    warn(\n      `Missing ref owner context. ref cannot be used on hoisted vnodes. A vnode with ref must be created inside the render function.`\n    );\n    return;\n  }\n  const oldRef = oldRawRef && oldRawRef.r;\n  const refs = owner.refs === EMPTY_OBJ ? owner.refs = {} : owner.refs;\n  const setupState = owner.setupState;\n  if (oldRef != null && oldRef !== ref) {\n    if (isString(oldRef)) {\n      refs[oldRef] = null;\n      if (hasOwn(setupState, oldRef)) {\n        setupState[oldRef] = null;\n      }\n    } else if (isRef(oldRef)) {\n      oldRef.value = null;\n    }\n  }\n  if (isFunction(ref)) {\n    callWithErrorHandling(ref, owner, 12, [value, refs]);\n  } else {\n    const _isString = isString(ref);\n    const _isRef = isRef(ref);\n    if (_isString || _isRef) {\n      const doSet = () => {\n        if (rawRef.f) {\n          const existing = _isString ? hasOwn(setupState, ref) ? setupState[ref] : refs[ref] : ref.value;\n          if (isUnmount) {\n            isArray(existing) && remove(existing, refValue);\n          } else {\n            if (!isArray(existing)) {\n              if (_isString) {\n                refs[ref] = [refValue];\n                if (hasOwn(setupState, ref)) {\n                  setupState[ref] = refs[ref];\n                }\n              } else {\n                ref.value = [refValue];\n                if (rawRef.k)\n                  refs[rawRef.k] = ref.value;\n              }\n            } else if (!existing.includes(refValue)) {\n              existing.push(refValue);\n            }\n          }\n        } else if (_isString) {\n          refs[ref] = value;\n          if (hasOwn(setupState, ref)) {\n            setupState[ref] = value;\n          }\n        } else if (_isRef) {\n          ref.value = value;\n          if (rawRef.k)\n            refs[rawRef.k] = value;\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(\"Invalid template ref type:\", ref, `(${typeof ref})`);\n        }\n      };\n      if (value) {\n        doSet.id = -1;\n        queuePostRenderEffect(doSet, parentSuspense);\n      } else {\n        doSet();\n      }\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(\"Invalid template ref type:\", ref, `(${typeof ref})`);\n    }\n  }\n}\n\nlet hasMismatch = false;\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== \"foreignObject\";\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\nfunction createHydrationFunctions(rendererInternals) {\n  const {\n    mt: mountComponent,\n    p: patch,\n    o: {\n      patchProp,\n      createText,\n      nextSibling,\n      parentNode,\n      remove,\n      insert,\n      createComment\n    }\n  } = rendererInternals;\n  const hydrate = (vnode, container) => {\n    if (!container.hasChildNodes()) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(\n        `Attempting to hydrate existing markup but container is empty. Performing full mount instead.`\n      );\n      patch(null, vnode, container);\n      flushPostFlushCbs();\n      container._vnode = vnode;\n      return;\n    }\n    hasMismatch = false;\n    hydrateNode(container.firstChild, vnode, null, null, null);\n    flushPostFlushCbs();\n    container._vnode = vnode;\n    if (hasMismatch && true) {\n      console.error(`Hydration completed but contains mismatches.`);\n    }\n  };\n  const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\n    const isFragmentStart = isComment(node) && node.data === \"[\";\n    const onMismatch = () => handleMismatch(\n      node,\n      vnode,\n      parentComponent,\n      parentSuspense,\n      slotScopeIds,\n      isFragmentStart\n    );\n    const { type, ref, shapeFlag, patchFlag } = vnode;\n    let domType = node.nodeType;\n    vnode.el = node;\n    if (patchFlag === -2) {\n      optimized = false;\n      vnode.dynamicChildren = null;\n    }\n    let nextNode = null;\n    switch (type) {\n      case Text:\n        if (domType !== 3 /* TEXT */) {\n          if (vnode.children === \"\") {\n            insert(vnode.el = createText(\"\"), parentNode(node), node);\n            nextNode = node;\n          } else {\n            nextNode = onMismatch();\n          }\n        } else {\n          if (node.data !== vnode.children) {\n            hasMismatch = true;\n            !!(process.env.NODE_ENV !== \"production\") && warn(\n              `Hydration text mismatch:\n- Client: ${JSON.stringify(node.data)}\n- Server: ${JSON.stringify(vnode.children)}`\n            );\n            node.data = vnode.children;\n          }\n          nextNode = nextSibling(node);\n        }\n        break;\n      case Comment:\n        if (domType !== 8 /* COMMENT */ || isFragmentStart) {\n          nextNode = onMismatch();\n        } else {\n          nextNode = nextSibling(node);\n        }\n        break;\n      case Static:\n        if (isFragmentStart) {\n          node = nextSibling(node);\n          domType = node.nodeType;\n        }\n        if (domType === 1 /* ELEMENT */ || domType === 3 /* TEXT */) {\n          nextNode = node;\n          const needToAdoptContent = !vnode.children.length;\n          for (let i = 0; i < vnode.staticCount; i++) {\n            if (needToAdoptContent)\n              vnode.children += nextNode.nodeType === 1 /* ELEMENT */ ? nextNode.outerHTML : nextNode.data;\n            if (i === vnode.staticCount - 1) {\n              vnode.anchor = nextNode;\n            }\n            nextNode = nextSibling(nextNode);\n          }\n          return isFragmentStart ? nextSibling(nextNode) : nextNode;\n        } else {\n          onMismatch();\n        }\n        break;\n      case Fragment:\n        if (!isFragmentStart) {\n          nextNode = onMismatch();\n        } else {\n          nextNode = hydrateFragment(\n            node,\n            vnode,\n            parentComponent,\n            parentSuspense,\n            slotScopeIds,\n            optimized\n          );\n        }\n        break;\n      default:\n        if (shapeFlag & 1) {\n          if (domType !== 1 /* ELEMENT */ || vnode.type.toLowerCase() !== node.tagName.toLowerCase()) {\n            nextNode = onMismatch();\n          } else {\n            nextNode = hydrateElement(\n              node,\n              vnode,\n              parentComponent,\n              parentSuspense,\n              slotScopeIds,\n              optimized\n            );\n          }\n        } else if (shapeFlag & 6) {\n          vnode.slotScopeIds = slotScopeIds;\n          const container = parentNode(node);\n          mountComponent(\n            vnode,\n            container,\n            null,\n            parentComponent,\n            parentSuspense,\n            isSVGContainer(container),\n            optimized\n          );\n          nextNode = isFragmentStart ? locateClosingAsyncAnchor(node) : nextSibling(node);\n          if (nextNode && isComment(nextNode) && nextNode.data === \"teleport end\") {\n            nextNode = nextSibling(nextNode);\n          }\n          if (isAsyncWrapper(vnode)) {\n            let subTree;\n            if (isFragmentStart) {\n              subTree = createVNode(Fragment);\n              subTree.anchor = nextNode ? nextNode.previousSibling : container.lastChild;\n            } else {\n              subTree = node.nodeType === 3 ? createTextVNode(\"\") : createVNode(\"div\");\n            }\n            subTree.el = node;\n            vnode.component.subTree = subTree;\n          }\n        } else if (shapeFlag & 64) {\n          if (domType !== 8 /* COMMENT */) {\n            nextNode = onMismatch();\n          } else {\n            nextNode = vnode.type.hydrate(\n              node,\n              vnode,\n              parentComponent,\n              parentSuspense,\n              slotScopeIds,\n              optimized,\n              rendererInternals,\n              hydrateChildren\n            );\n          }\n        } else if (shapeFlag & 128) {\n          nextNode = vnode.type.hydrate(\n            node,\n            vnode,\n            parentComponent,\n            parentSuspense,\n            isSVGContainer(parentNode(node)),\n            slotScopeIds,\n            optimized,\n            rendererInternals,\n            hydrateNode\n          );\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(\"Invalid HostVNode type:\", type, `(${typeof type})`);\n        }\n    }\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode);\n    }\n    return nextNode;\n  };\n  const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    optimized = optimized || !!vnode.dynamicChildren;\n    const { type, props, patchFlag, shapeFlag, dirs } = vnode;\n    const forcePatchValue = type === \"input\" && dirs || type === \"option\";\n    if (!!(process.env.NODE_ENV !== \"production\") || forcePatchValue || patchFlag !== -1) {\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, \"created\");\n      }\n      if (props) {\n        if (forcePatchValue || !optimized || patchFlag & (16 | 32)) {\n          for (const key in props) {\n            if (forcePatchValue && key.endsWith(\"value\") || isOn(key) && !isReservedProp(key)) {\n              patchProp(\n                el,\n                key,\n                null,\n                props[key],\n                false,\n                void 0,\n                parentComponent\n              );\n            }\n          }\n        } else if (props.onClick) {\n          patchProp(\n            el,\n            \"onClick\",\n            null,\n            props.onClick,\n            false,\n            void 0,\n            parentComponent\n          );\n        }\n      }\n      let vnodeHooks;\n      if (vnodeHooks = props && props.onVnodeBeforeMount) {\n        invokeVNodeHook(vnodeHooks, parentComponent, vnode);\n      }\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, \"beforeMount\");\n      }\n      if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\n        queueEffectWithSuspense(() => {\n          vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\n          dirs && invokeDirectiveHook(vnode, null, parentComponent, \"mounted\");\n        }, parentSuspense);\n      }\n      if (shapeFlag & 16 && // skip if element has innerHTML / textContent\n      !(props && (props.innerHTML || props.textContent))) {\n        let next = hydrateChildren(\n          el.firstChild,\n          vnode,\n          el,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n        let hasWarned = false;\n        while (next) {\n          hasMismatch = true;\n          if (!!(process.env.NODE_ENV !== \"production\") && !hasWarned) {\n            warn(\n              `Hydration children mismatch in <${vnode.type}>: server rendered element contains more child nodes than client vdom.`\n            );\n            hasWarned = true;\n          }\n          const cur = next;\n          next = next.nextSibling;\n          remove(cur);\n        }\n      } else if (shapeFlag & 8) {\n        if (el.textContent !== vnode.children) {\n          hasMismatch = true;\n          !!(process.env.NODE_ENV !== \"production\") && warn(\n            `Hydration text content mismatch in <${vnode.type}>:\n- Client: ${el.textContent}\n- Server: ${vnode.children}`\n          );\n          el.textContent = vnode.children;\n        }\n      }\n    }\n    return el.nextSibling;\n  };\n  const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    optimized = optimized || !!parentVNode.dynamicChildren;\n    const children = parentVNode.children;\n    const l = children.length;\n    let hasWarned = false;\n    for (let i = 0; i < l; i++) {\n      const vnode = optimized ? children[i] : children[i] = normalizeVNode(children[i]);\n      if (node) {\n        node = hydrateNode(\n          node,\n          vnode,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n      } else if (vnode.type === Text && !vnode.children) {\n        continue;\n      } else {\n        hasMismatch = true;\n        if (!!(process.env.NODE_ENV !== \"production\") && !hasWarned) {\n          warn(\n            `Hydration children mismatch in <${container.tagName.toLowerCase()}>: server rendered element contains fewer child nodes than client vdom.`\n          );\n          hasWarned = true;\n        }\n        patch(\n          null,\n          vnode,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          isSVGContainer(container),\n          slotScopeIds\n        );\n      }\n    }\n    return node;\n  };\n  const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    const { slotScopeIds: fragmentSlotScopeIds } = vnode;\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;\n    }\n    const container = parentNode(node);\n    const next = hydrateChildren(\n      nextSibling(node),\n      vnode,\n      container,\n      parentComponent,\n      parentSuspense,\n      slotScopeIds,\n      optimized\n    );\n    if (next && isComment(next) && next.data === \"]\") {\n      return nextSibling(vnode.anchor = next);\n    } else {\n      hasMismatch = true;\n      insert(vnode.anchor = createComment(`]`), container, next);\n      return next;\n    }\n  };\n  const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\n    hasMismatch = true;\n    !!(process.env.NODE_ENV !== \"production\") && warn(\n      `Hydration node mismatch:\n- Client vnode:`,\n      vnode.type,\n      `\n- Server rendered DOM:`,\n      node,\n      node.nodeType === 3 /* TEXT */ ? `(text)` : isComment(node) && node.data === \"[\" ? `(start of fragment)` : ``\n    );\n    vnode.el = null;\n    if (isFragment) {\n      const end = locateClosingAsyncAnchor(node);\n      while (true) {\n        const next2 = nextSibling(node);\n        if (next2 && next2 !== end) {\n          remove(next2);\n        } else {\n          break;\n        }\n      }\n    }\n    const next = nextSibling(node);\n    const container = parentNode(node);\n    remove(node);\n    patch(\n      null,\n      vnode,\n      container,\n      next,\n      parentComponent,\n      parentSuspense,\n      isSVGContainer(container),\n      slotScopeIds\n    );\n    return next;\n  };\n  const locateClosingAsyncAnchor = (node) => {\n    let match = 0;\n    while (node) {\n      node = nextSibling(node);\n      if (node && isComment(node)) {\n        if (node.data === \"[\")\n          match++;\n        if (node.data === \"]\") {\n          if (match === 0) {\n            return nextSibling(node);\n          } else {\n            match--;\n          }\n        }\n      }\n    }\n    return node;\n  };\n  return [hydrate, hydrateNode];\n}\n\nlet supported;\nlet perf;\nfunction startMeasure(instance, type) {\n  if (instance.appContext.config.performance && isSupported()) {\n    perf.mark(`vue-${type}-${instance.uid}`);\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n    devtoolsPerfStart(instance, type, isSupported() ? perf.now() : Date.now());\n  }\n}\nfunction endMeasure(instance, type) {\n  if (instance.appContext.config.performance && isSupported()) {\n    const startTag = `vue-${type}-${instance.uid}`;\n    const endTag = startTag + `:end`;\n    perf.mark(endTag);\n    perf.measure(\n      `<${formatComponentName(instance, instance.type)}> ${type}`,\n      startTag,\n      endTag\n    );\n    perf.clearMarks(startTag);\n    perf.clearMarks(endTag);\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n    devtoolsPerfEnd(instance, type, isSupported() ? perf.now() : Date.now());\n  }\n}\nfunction isSupported() {\n  if (supported !== void 0) {\n    return supported;\n  }\n  if (typeof window !== \"undefined\" && window.performance) {\n    supported = true;\n    perf = window.performance;\n  } else {\n    supported = false;\n  }\n  return supported;\n}\n\nfunction initFeatureFlags() {\n  const needWarn = [];\n  if (typeof __VUE_OPTIONS_API__ !== \"boolean\") {\n    !!(process.env.NODE_ENV !== \"production\") && needWarn.push(`__VUE_OPTIONS_API__`);\n    getGlobalThis().__VUE_OPTIONS_API__ = true;\n  }\n  if (typeof __VUE_PROD_DEVTOOLS__ !== \"boolean\") {\n    !!(process.env.NODE_ENV !== \"production\") && needWarn.push(`__VUE_PROD_DEVTOOLS__`);\n    getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && needWarn.length) {\n    const multi = needWarn.length > 1;\n    console.warn(\n      `Feature flag${multi ? `s` : ``} ${needWarn.join(\", \")} ${multi ? `are` : `is`} not explicitly defined. You are running the esm-bundler build of Vue, which expects these compile-time feature flags to be globally injected via the bundler config in order to get better tree-shaking in the production bundle.\n\nFor more details, see https://link.vuejs.org/feature-flags.`\n    );\n  }\n}\n\nconst queuePostRenderEffect = queueEffectWithSuspense ;\nfunction createRenderer(options) {\n  return baseCreateRenderer(options);\n}\nfunction createHydrationRenderer(options) {\n  return baseCreateRenderer(options, createHydrationFunctions);\n}\nfunction baseCreateRenderer(options, createHydrationFns) {\n  {\n    initFeatureFlags();\n  }\n  const target = getGlobalThis();\n  target.__VUE__ = true;\n  if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n    setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target);\n  }\n  const {\n    insert: hostInsert,\n    remove: hostRemove,\n    patchProp: hostPatchProp,\n    createElement: hostCreateElement,\n    createText: hostCreateText,\n    createComment: hostCreateComment,\n    setText: hostSetText,\n    setElementText: hostSetElementText,\n    parentNode: hostParentNode,\n    nextSibling: hostNextSibling,\n    setScopeId: hostSetScopeId = NOOP,\n    insertStaticContent: hostInsertStaticContent\n  } = options;\n  const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized = !!(process.env.NODE_ENV !== \"production\") && isHmrUpdating ? false : !!n2.dynamicChildren) => {\n    if (n1 === n2) {\n      return;\n    }\n    if (n1 && !isSameVNodeType(n1, n2)) {\n      anchor = getNextHostNode(n1);\n      unmount(n1, parentComponent, parentSuspense, true);\n      n1 = null;\n    }\n    if (n2.patchFlag === -2) {\n      optimized = false;\n      n2.dynamicChildren = null;\n    }\n    const { type, ref, shapeFlag } = n2;\n    switch (type) {\n      case Text:\n        processText(n1, n2, container, anchor);\n        break;\n      case Comment:\n        processCommentNode(n1, n2, container, anchor);\n        break;\n      case Static:\n        if (n1 == null) {\n          mountStaticNode(n2, container, anchor, isSVG);\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          patchStaticNode(n1, n2, container, isSVG);\n        }\n        break;\n      case Fragment:\n        processFragment(\n          n1,\n          n2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        break;\n      default:\n        if (shapeFlag & 1) {\n          processElement(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        } else if (shapeFlag & 6) {\n          processComponent(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        } else if (shapeFlag & 64) {\n          type.process(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized,\n            internals\n          );\n        } else if (shapeFlag & 128) {\n          type.process(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized,\n            internals\n          );\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(\"Invalid VNode type:\", type, `(${typeof type})`);\n        }\n    }\n    if (ref != null && parentComponent) {\n      setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);\n    }\n  };\n  const processText = (n1, n2, container, anchor) => {\n    if (n1 == null) {\n      hostInsert(\n        n2.el = hostCreateText(n2.children),\n        container,\n        anchor\n      );\n    } else {\n      const el = n2.el = n1.el;\n      if (n2.children !== n1.children) {\n        hostSetText(el, n2.children);\n      }\n    }\n  };\n  const processCommentNode = (n1, n2, container, anchor) => {\n    if (n1 == null) {\n      hostInsert(\n        n2.el = hostCreateComment(n2.children || \"\"),\n        container,\n        anchor\n      );\n    } else {\n      n2.el = n1.el;\n    }\n  };\n  const mountStaticNode = (n2, container, anchor, isSVG) => {\n    [n2.el, n2.anchor] = hostInsertStaticContent(\n      n2.children,\n      container,\n      anchor,\n      isSVG,\n      n2.el,\n      n2.anchor\n    );\n  };\n  const patchStaticNode = (n1, n2, container, isSVG) => {\n    if (n2.children !== n1.children) {\n      const anchor = hostNextSibling(n1.anchor);\n      removeStaticNode(n1);\n      [n2.el, n2.anchor] = hostInsertStaticContent(\n        n2.children,\n        container,\n        anchor,\n        isSVG\n      );\n    } else {\n      n2.el = n1.el;\n      n2.anchor = n1.anchor;\n    }\n  };\n  const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\n    let next;\n    while (el && el !== anchor) {\n      next = hostNextSibling(el);\n      hostInsert(el, container, nextSibling);\n      el = next;\n    }\n    hostInsert(anchor, container, nextSibling);\n  };\n  const removeStaticNode = ({ el, anchor }) => {\n    let next;\n    while (el && el !== anchor) {\n      next = hostNextSibling(el);\n      hostRemove(el);\n      el = next;\n    }\n    hostRemove(anchor);\n  };\n  const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    isSVG = isSVG || n2.type === \"svg\";\n    if (n1 == null) {\n      mountElement(\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n    } else {\n      patchElement(\n        n1,\n        n2,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n    }\n  };\n  const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    let el;\n    let vnodeHook;\n    const { type, props, shapeFlag, transition, dirs } = vnode;\n    el = vnode.el = hostCreateElement(\n      vnode.type,\n      isSVG,\n      props && props.is,\n      props\n    );\n    if (shapeFlag & 8) {\n      hostSetElementText(el, vnode.children);\n    } else if (shapeFlag & 16) {\n      mountChildren(\n        vnode.children,\n        el,\n        null,\n        parentComponent,\n        parentSuspense,\n        isSVG && type !== \"foreignObject\",\n        slotScopeIds,\n        optimized\n      );\n    }\n    if (dirs) {\n      invokeDirectiveHook(vnode, null, parentComponent, \"created\");\n    }\n    setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\n    if (props) {\n      for (const key in props) {\n        if (key !== \"value\" && !isReservedProp(key)) {\n          hostPatchProp(\n            el,\n            key,\n            null,\n            props[key],\n            isSVG,\n            vnode.children,\n            parentComponent,\n            parentSuspense,\n            unmountChildren\n          );\n        }\n      }\n      if (\"value\" in props) {\n        hostPatchProp(el, \"value\", null, props.value);\n      }\n      if (vnodeHook = props.onVnodeBeforeMount) {\n        invokeVNodeHook(vnodeHook, parentComponent, vnode);\n      }\n    }\n    if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n      Object.defineProperty(el, \"__vnode\", {\n        value: vnode,\n        enumerable: false\n      });\n      Object.defineProperty(el, \"__vueParentComponent\", {\n        value: parentComponent,\n        enumerable: false\n      });\n    }\n    if (dirs) {\n      invokeDirectiveHook(vnode, null, parentComponent, \"beforeMount\");\n    }\n    const needCallTransitionHooks = (!parentSuspense || parentSuspense && !parentSuspense.pendingBranch) && transition && !transition.persisted;\n    if (needCallTransitionHooks) {\n      transition.beforeEnter(el);\n    }\n    hostInsert(el, container, anchor);\n    if ((vnodeHook = props && props.onVnodeMounted) || needCallTransitionHooks || dirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        needCallTransitionHooks && transition.enter(el);\n        dirs && invokeDirectiveHook(vnode, null, parentComponent, \"mounted\");\n      }, parentSuspense);\n    }\n  };\n  const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\n    if (scopeId) {\n      hostSetScopeId(el, scopeId);\n    }\n    if (slotScopeIds) {\n      for (let i = 0; i < slotScopeIds.length; i++) {\n        hostSetScopeId(el, slotScopeIds[i]);\n      }\n    }\n    if (parentComponent) {\n      let subTree = parentComponent.subTree;\n      if (!!(process.env.NODE_ENV !== \"production\") && subTree.patchFlag > 0 && subTree.patchFlag & 2048) {\n        subTree = filterSingleRoot(subTree.children) || subTree;\n      }\n      if (vnode === subTree) {\n        const parentVNode = parentComponent.vnode;\n        setScopeId(\n          el,\n          parentVNode,\n          parentVNode.scopeId,\n          parentVNode.slotScopeIds,\n          parentComponent.parent\n        );\n      }\n    }\n  };\n  const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, start = 0) => {\n    for (let i = start; i < children.length; i++) {\n      const child = children[i] = optimized ? cloneIfMounted(children[i]) : normalizeVNode(children[i]);\n      patch(\n        null,\n        child,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n    }\n  };\n  const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    const el = n2.el = n1.el;\n    let { patchFlag, dynamicChildren, dirs } = n2;\n    patchFlag |= n1.patchFlag & 16;\n    const oldProps = n1.props || EMPTY_OBJ;\n    const newProps = n2.props || EMPTY_OBJ;\n    let vnodeHook;\n    parentComponent && toggleRecurse(parentComponent, false);\n    if (vnodeHook = newProps.onVnodeBeforeUpdate) {\n      invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n    }\n    if (dirs) {\n      invokeDirectiveHook(n2, n1, parentComponent, \"beforeUpdate\");\n    }\n    parentComponent && toggleRecurse(parentComponent, true);\n    if (!!(process.env.NODE_ENV !== \"production\") && isHmrUpdating) {\n      patchFlag = 0;\n      optimized = false;\n      dynamicChildren = null;\n    }\n    const areChildrenSVG = isSVG && n2.type !== \"foreignObject\";\n    if (dynamicChildren) {\n      patchBlockChildren(\n        n1.dynamicChildren,\n        dynamicChildren,\n        el,\n        parentComponent,\n        parentSuspense,\n        areChildrenSVG,\n        slotScopeIds\n      );\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        traverseStaticChildren(n1, n2);\n      }\n    } else if (!optimized) {\n      patchChildren(\n        n1,\n        n2,\n        el,\n        null,\n        parentComponent,\n        parentSuspense,\n        areChildrenSVG,\n        slotScopeIds,\n        false\n      );\n    }\n    if (patchFlag > 0) {\n      if (patchFlag & 16) {\n        patchProps(\n          el,\n          n2,\n          oldProps,\n          newProps,\n          parentComponent,\n          parentSuspense,\n          isSVG\n        );\n      } else {\n        if (patchFlag & 2) {\n          if (oldProps.class !== newProps.class) {\n            hostPatchProp(el, \"class\", null, newProps.class, isSVG);\n          }\n        }\n        if (patchFlag & 4) {\n          hostPatchProp(el, \"style\", oldProps.style, newProps.style, isSVG);\n        }\n        if (patchFlag & 8) {\n          const propsToUpdate = n2.dynamicProps;\n          for (let i = 0; i < propsToUpdate.length; i++) {\n            const key = propsToUpdate[i];\n            const prev = oldProps[key];\n            const next = newProps[key];\n            if (next !== prev || key === \"value\") {\n              hostPatchProp(\n                el,\n                key,\n                prev,\n                next,\n                isSVG,\n                n1.children,\n                parentComponent,\n                parentSuspense,\n                unmountChildren\n              );\n            }\n          }\n        }\n      }\n      if (patchFlag & 1) {\n        if (n1.children !== n2.children) {\n          hostSetElementText(el, n2.children);\n        }\n      }\n    } else if (!optimized && dynamicChildren == null) {\n      patchProps(\n        el,\n        n2,\n        oldProps,\n        newProps,\n        parentComponent,\n        parentSuspense,\n        isSVG\n      );\n    }\n    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n        dirs && invokeDirectiveHook(n2, n1, parentComponent, \"updated\");\n      }, parentSuspense);\n    }\n  };\n  const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\n    for (let i = 0; i < newChildren.length; i++) {\n      const oldVNode = oldChildren[i];\n      const newVNode = newChildren[i];\n      const container = (\n        // oldVNode may be an errored async setup() component inside Suspense\n        // which will not have a mounted element\n        oldVNode.el && // - In the case of a Fragment, we need to provide the actual parent\n        // of the Fragment itself so it can move its children.\n        (oldVNode.type === Fragment || // - In the case of different nodes, there is going to be a replacement\n        // which also requires the correct parent container\n        !isSameVNodeType(oldVNode, newVNode) || // - In the case of a component, it could contain anything.\n        oldVNode.shapeFlag & (6 | 64)) ? hostParentNode(oldVNode.el) : (\n          // In other cases, the parent container is not actually used so we\n          // just pass the block element here to avoid a DOM parentNode call.\n          fallbackContainer\n        )\n      );\n      patch(\n        oldVNode,\n        newVNode,\n        container,\n        null,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        true\n      );\n    }\n  };\n  const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\n    if (oldProps !== newProps) {\n      if (oldProps !== EMPTY_OBJ) {\n        for (const key in oldProps) {\n          if (!isReservedProp(key) && !(key in newProps)) {\n            hostPatchProp(\n              el,\n              key,\n              oldProps[key],\n              null,\n              isSVG,\n              vnode.children,\n              parentComponent,\n              parentSuspense,\n              unmountChildren\n            );\n          }\n        }\n      }\n      for (const key in newProps) {\n        if (isReservedProp(key))\n          continue;\n        const next = newProps[key];\n        const prev = oldProps[key];\n        if (next !== prev && key !== \"value\") {\n          hostPatchProp(\n            el,\n            key,\n            prev,\n            next,\n            isSVG,\n            vnode.children,\n            parentComponent,\n            parentSuspense,\n            unmountChildren\n          );\n        }\n      }\n      if (\"value\" in newProps) {\n        hostPatchProp(el, \"value\", oldProps.value, newProps.value);\n      }\n    }\n  };\n  const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    const fragmentStartAnchor = n2.el = n1 ? n1.el : hostCreateText(\"\");\n    const fragmentEndAnchor = n2.anchor = n1 ? n1.anchor : hostCreateText(\"\");\n    let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\n    if (!!(process.env.NODE_ENV !== \"production\") && // #5523 dev root fragment may inherit directives\n    (isHmrUpdating || patchFlag & 2048)) {\n      patchFlag = 0;\n      optimized = false;\n      dynamicChildren = null;\n    }\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;\n    }\n    if (n1 == null) {\n      hostInsert(fragmentStartAnchor, container, anchor);\n      hostInsert(fragmentEndAnchor, container, anchor);\n      mountChildren(\n        n2.children,\n        container,\n        fragmentEndAnchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n    } else {\n      if (patchFlag > 0 && patchFlag & 64 && dynamicChildren && // #2715 the previous fragment could've been a BAILed one as a result\n      // of renderSlot() with no valid children\n      n1.dynamicChildren) {\n        patchBlockChildren(\n          n1.dynamicChildren,\n          dynamicChildren,\n          container,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds\n        );\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          traverseStaticChildren(n1, n2);\n        } else if (\n          // #2080 if the stable fragment has a key, it's a <template v-for> that may\n          //  get moved around. Make sure all root level vnodes inherit el.\n          // #2134 or if it's a component root, it may also get moved around\n          // as the component is being moved.\n          n2.key != null || parentComponent && n2 === parentComponent.subTree\n        ) {\n          traverseStaticChildren(\n            n1,\n            n2,\n            true\n            /* shallow */\n          );\n        }\n      } else {\n        patchChildren(\n          n1,\n          n2,\n          container,\n          fragmentEndAnchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n      }\n    }\n  };\n  const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    n2.slotScopeIds = slotScopeIds;\n    if (n1 == null) {\n      if (n2.shapeFlag & 512) {\n        parentComponent.ctx.activate(\n          n2,\n          container,\n          anchor,\n          isSVG,\n          optimized\n        );\n      } else {\n        mountComponent(\n          n2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          optimized\n        );\n      }\n    } else {\n      updateComponent(n1, n2, optimized);\n    }\n  };\n  const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\n    const instance = (initialVNode.component = createComponentInstance(\n      initialVNode,\n      parentComponent,\n      parentSuspense\n    ));\n    if (!!(process.env.NODE_ENV !== \"production\") && instance.type.__hmrId) {\n      registerHMR(instance);\n    }\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      pushWarningContext(initialVNode);\n      startMeasure(instance, `mount`);\n    }\n    if (isKeepAlive(initialVNode)) {\n      instance.ctx.renderer = internals;\n    }\n    {\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        startMeasure(instance, `init`);\n      }\n      setupComponent(instance);\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        endMeasure(instance, `init`);\n      }\n    }\n    if (instance.asyncDep) {\n      parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\n      if (!initialVNode.el) {\n        const placeholder = instance.subTree = createVNode(Comment);\n        processCommentNode(null, placeholder, container, anchor);\n      }\n      return;\n    }\n    setupRenderEffect(\n      instance,\n      initialVNode,\n      container,\n      anchor,\n      parentSuspense,\n      isSVG,\n      optimized\n    );\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      popWarningContext();\n      endMeasure(instance, `mount`);\n    }\n  };\n  const updateComponent = (n1, n2, optimized) => {\n    const instance = n2.component = n1.component;\n    if (shouldUpdateComponent(n1, n2, optimized)) {\n      if (instance.asyncDep && !instance.asyncResolved) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          pushWarningContext(n2);\n        }\n        updateComponentPreRender(instance, n2, optimized);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          popWarningContext();\n        }\n        return;\n      } else {\n        instance.next = n2;\n        invalidateJob(instance.update);\n        instance.update();\n      }\n    } else {\n      n2.el = n1.el;\n      instance.vnode = n2;\n    }\n  };\n  const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\n    const componentUpdateFn = () => {\n      if (!instance.isMounted) {\n        let vnodeHook;\n        const { el, props } = initialVNode;\n        const { bm, m, parent } = instance;\n        const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);\n        toggleRecurse(instance, false);\n        if (bm) {\n          invokeArrayFns(bm);\n        }\n        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeBeforeMount)) {\n          invokeVNodeHook(vnodeHook, parent, initialVNode);\n        }\n        toggleRecurse(instance, true);\n        if (el && hydrateNode) {\n          const hydrateSubTree = () => {\n            if (!!(process.env.NODE_ENV !== \"production\")) {\n              startMeasure(instance, `render`);\n            }\n            instance.subTree = renderComponentRoot(instance);\n            if (!!(process.env.NODE_ENV !== \"production\")) {\n              endMeasure(instance, `render`);\n            }\n            if (!!(process.env.NODE_ENV !== \"production\")) {\n              startMeasure(instance, `hydrate`);\n            }\n            hydrateNode(\n              el,\n              instance.subTree,\n              instance,\n              parentSuspense,\n              null\n            );\n            if (!!(process.env.NODE_ENV !== \"production\")) {\n              endMeasure(instance, `hydrate`);\n            }\n          };\n          if (isAsyncWrapperVNode) {\n            initialVNode.type.__asyncLoader().then(\n              // note: we are moving the render call into an async callback,\n              // which means it won't track dependencies - but it's ok because\n              // a server-rendered async wrapper is already in resolved state\n              // and it will never need to change.\n              () => !instance.isUnmounted && hydrateSubTree()\n            );\n          } else {\n            hydrateSubTree();\n          }\n        } else {\n          if (!!(process.env.NODE_ENV !== \"production\")) {\n            startMeasure(instance, `render`);\n          }\n          const subTree = instance.subTree = renderComponentRoot(instance);\n          if (!!(process.env.NODE_ENV !== \"production\")) {\n            endMeasure(instance, `render`);\n          }\n          if (!!(process.env.NODE_ENV !== \"production\")) {\n            startMeasure(instance, `patch`);\n          }\n          patch(\n            null,\n            subTree,\n            container,\n            anchor,\n            instance,\n            parentSuspense,\n            isSVG\n          );\n          if (!!(process.env.NODE_ENV !== \"production\")) {\n            endMeasure(instance, `patch`);\n          }\n          initialVNode.el = subTree.el;\n        }\n        if (m) {\n          queuePostRenderEffect(m, parentSuspense);\n        }\n        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeMounted)) {\n          const scopedInitialVNode = initialVNode;\n          queuePostRenderEffect(\n            () => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode),\n            parentSuspense\n          );\n        }\n        if (initialVNode.shapeFlag & 256 || parent && isAsyncWrapper(parent.vnode) && parent.vnode.shapeFlag & 256) {\n          instance.a && queuePostRenderEffect(instance.a, parentSuspense);\n        }\n        instance.isMounted = true;\n        if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n          devtoolsComponentAdded(instance);\n        }\n        initialVNode = container = anchor = null;\n      } else {\n        let { next, bu, u, parent, vnode } = instance;\n        let originNext = next;\n        let vnodeHook;\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          pushWarningContext(next || instance.vnode);\n        }\n        toggleRecurse(instance, false);\n        if (next) {\n          next.el = vnode.el;\n          updateComponentPreRender(instance, next, optimized);\n        } else {\n          next = vnode;\n        }\n        if (bu) {\n          invokeArrayFns(bu);\n        }\n        if (vnodeHook = next.props && next.props.onVnodeBeforeUpdate) {\n          invokeVNodeHook(vnodeHook, parent, next, vnode);\n        }\n        toggleRecurse(instance, true);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          startMeasure(instance, `render`);\n        }\n        const nextTree = renderComponentRoot(instance);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          endMeasure(instance, `render`);\n        }\n        const prevTree = instance.subTree;\n        instance.subTree = nextTree;\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          startMeasure(instance, `patch`);\n        }\n        patch(\n          prevTree,\n          nextTree,\n          // parent may have changed if it's in a teleport\n          hostParentNode(prevTree.el),\n          // anchor may have changed if it's in a fragment\n          getNextHostNode(prevTree),\n          instance,\n          parentSuspense,\n          isSVG\n        );\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          endMeasure(instance, `patch`);\n        }\n        next.el = nextTree.el;\n        if (originNext === null) {\n          updateHOCHostEl(instance, nextTree.el);\n        }\n        if (u) {\n          queuePostRenderEffect(u, parentSuspense);\n        }\n        if (vnodeHook = next.props && next.props.onVnodeUpdated) {\n          queuePostRenderEffect(\n            () => invokeVNodeHook(vnodeHook, parent, next, vnode),\n            parentSuspense\n          );\n        }\n        if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n          devtoolsComponentUpdated(instance);\n        }\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          popWarningContext();\n        }\n      }\n    };\n    const effect = instance.effect = new ReactiveEffect(\n      componentUpdateFn,\n      () => queueJob(update),\n      instance.scope\n      // track it in component's effect scope\n    );\n    const update = instance.update = () => effect.run();\n    update.id = instance.uid;\n    toggleRecurse(instance, true);\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      effect.onTrack = instance.rtc ? (e) => invokeArrayFns(instance.rtc, e) : void 0;\n      effect.onTrigger = instance.rtg ? (e) => invokeArrayFns(instance.rtg, e) : void 0;\n      update.ownerInstance = instance;\n    }\n    update();\n  };\n  const updateComponentPreRender = (instance, nextVNode, optimized) => {\n    nextVNode.component = instance;\n    const prevProps = instance.vnode.props;\n    instance.vnode = nextVNode;\n    instance.next = null;\n    updateProps(instance, nextVNode.props, prevProps, optimized);\n    updateSlots(instance, nextVNode.children, optimized);\n    pauseTracking();\n    flushPreFlushCbs();\n    resetTracking();\n  };\n  const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\n    const c1 = n1 && n1.children;\n    const prevShapeFlag = n1 ? n1.shapeFlag : 0;\n    const c2 = n2.children;\n    const { patchFlag, shapeFlag } = n2;\n    if (patchFlag > 0) {\n      if (patchFlag & 128) {\n        patchKeyedChildren(\n          c1,\n          c2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        return;\n      } else if (patchFlag & 256) {\n        patchUnkeyedChildren(\n          c1,\n          c2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        return;\n      }\n    }\n    if (shapeFlag & 8) {\n      if (prevShapeFlag & 16) {\n        unmountChildren(c1, parentComponent, parentSuspense);\n      }\n      if (c2 !== c1) {\n        hostSetElementText(container, c2);\n      }\n    } else {\n      if (prevShapeFlag & 16) {\n        if (shapeFlag & 16) {\n          patchKeyedChildren(\n            c1,\n            c2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        } else {\n          unmountChildren(c1, parentComponent, parentSuspense, true);\n        }\n      } else {\n        if (prevShapeFlag & 8) {\n          hostSetElementText(container, \"\");\n        }\n        if (shapeFlag & 16) {\n          mountChildren(\n            c2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        }\n      }\n    }\n  };\n  const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    c1 = c1 || EMPTY_ARR;\n    c2 = c2 || EMPTY_ARR;\n    const oldLength = c1.length;\n    const newLength = c2.length;\n    const commonLength = Math.min(oldLength, newLength);\n    let i;\n    for (i = 0; i < commonLength; i++) {\n      const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n      patch(\n        c1[i],\n        nextChild,\n        container,\n        null,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n    }\n    if (oldLength > newLength) {\n      unmountChildren(\n        c1,\n        parentComponent,\n        parentSuspense,\n        true,\n        false,\n        commonLength\n      );\n    } else {\n      mountChildren(\n        c2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized,\n        commonLength\n      );\n    }\n  };\n  const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    let i = 0;\n    const l2 = c2.length;\n    let e1 = c1.length - 1;\n    let e2 = l2 - 1;\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[i];\n      const n2 = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n      if (isSameVNodeType(n1, n2)) {\n        patch(\n          n1,\n          n2,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n      } else {\n        break;\n      }\n      i++;\n    }\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[e1];\n      const n2 = c2[e2] = optimized ? cloneIfMounted(c2[e2]) : normalizeVNode(c2[e2]);\n      if (isSameVNodeType(n1, n2)) {\n        patch(\n          n1,\n          n2,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n      } else {\n        break;\n      }\n      e1--;\n      e2--;\n    }\n    if (i > e1) {\n      if (i <= e2) {\n        const nextPos = e2 + 1;\n        const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\n        while (i <= e2) {\n          patch(\n            null,\n            c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]),\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n          i++;\n        }\n      }\n    } else if (i > e2) {\n      while (i <= e1) {\n        unmount(c1[i], parentComponent, parentSuspense, true);\n        i++;\n      }\n    } else {\n      const s1 = i;\n      const s2 = i;\n      const keyToNewIndexMap = /* @__PURE__ */ new Map();\n      for (i = s2; i <= e2; i++) {\n        const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n        if (nextChild.key != null) {\n          if (!!(process.env.NODE_ENV !== \"production\") && keyToNewIndexMap.has(nextChild.key)) {\n            warn(\n              `Duplicate keys found during update:`,\n              JSON.stringify(nextChild.key),\n              `Make sure keys are unique.`\n            );\n          }\n          keyToNewIndexMap.set(nextChild.key, i);\n        }\n      }\n      let j;\n      let patched = 0;\n      const toBePatched = e2 - s2 + 1;\n      let moved = false;\n      let maxNewIndexSoFar = 0;\n      const newIndexToOldIndexMap = new Array(toBePatched);\n      for (i = 0; i < toBePatched; i++)\n        newIndexToOldIndexMap[i] = 0;\n      for (i = s1; i <= e1; i++) {\n        const prevChild = c1[i];\n        if (patched >= toBePatched) {\n          unmount(prevChild, parentComponent, parentSuspense, true);\n          continue;\n        }\n        let newIndex;\n        if (prevChild.key != null) {\n          newIndex = keyToNewIndexMap.get(prevChild.key);\n        } else {\n          for (j = s2; j <= e2; j++) {\n            if (newIndexToOldIndexMap[j - s2] === 0 && isSameVNodeType(prevChild, c2[j])) {\n              newIndex = j;\n              break;\n            }\n          }\n        }\n        if (newIndex === void 0) {\n          unmount(prevChild, parentComponent, parentSuspense, true);\n        } else {\n          newIndexToOldIndexMap[newIndex - s2] = i + 1;\n          if (newIndex >= maxNewIndexSoFar) {\n            maxNewIndexSoFar = newIndex;\n          } else {\n            moved = true;\n          }\n          patch(\n            prevChild,\n            c2[newIndex],\n            container,\n            null,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n          patched++;\n        }\n      }\n      const increasingNewIndexSequence = moved ? getSequence(newIndexToOldIndexMap) : EMPTY_ARR;\n      j = increasingNewIndexSequence.length - 1;\n      for (i = toBePatched - 1; i >= 0; i--) {\n        const nextIndex = s2 + i;\n        const nextChild = c2[nextIndex];\n        const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\n        if (newIndexToOldIndexMap[i] === 0) {\n          patch(\n            null,\n            nextChild,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        } else if (moved) {\n          if (j < 0 || i !== increasingNewIndexSequence[j]) {\n            move(nextChild, container, anchor, 2);\n          } else {\n            j--;\n          }\n        }\n      }\n    }\n  };\n  const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\n    const { el, type, transition, children, shapeFlag } = vnode;\n    if (shapeFlag & 6) {\n      move(vnode.component.subTree, container, anchor, moveType);\n      return;\n    }\n    if (shapeFlag & 128) {\n      vnode.suspense.move(container, anchor, moveType);\n      return;\n    }\n    if (shapeFlag & 64) {\n      type.move(vnode, container, anchor, internals);\n      return;\n    }\n    if (type === Fragment) {\n      hostInsert(el, container, anchor);\n      for (let i = 0; i < children.length; i++) {\n        move(children[i], container, anchor, moveType);\n      }\n      hostInsert(vnode.anchor, container, anchor);\n      return;\n    }\n    if (type === Static) {\n      moveStaticNode(vnode, container, anchor);\n      return;\n    }\n    const needTransition = moveType !== 2 && shapeFlag & 1 && transition;\n    if (needTransition) {\n      if (moveType === 0) {\n        transition.beforeEnter(el);\n        hostInsert(el, container, anchor);\n        queuePostRenderEffect(() => transition.enter(el), parentSuspense);\n      } else {\n        const { leave, delayLeave, afterLeave } = transition;\n        const remove2 = () => hostInsert(el, container, anchor);\n        const performLeave = () => {\n          leave(el, () => {\n            remove2();\n            afterLeave && afterLeave();\n          });\n        };\n        if (delayLeave) {\n          delayLeave(el, remove2, performLeave);\n        } else {\n          performLeave();\n        }\n      }\n    } else {\n      hostInsert(el, container, anchor);\n    }\n  };\n  const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\n    const {\n      type,\n      props,\n      ref,\n      children,\n      dynamicChildren,\n      shapeFlag,\n      patchFlag,\n      dirs\n    } = vnode;\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode, true);\n    }\n    if (shapeFlag & 256) {\n      parentComponent.ctx.deactivate(vnode);\n      return;\n    }\n    const shouldInvokeDirs = shapeFlag & 1 && dirs;\n    const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);\n    let vnodeHook;\n    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeBeforeUnmount)) {\n      invokeVNodeHook(vnodeHook, parentComponent, vnode);\n    }\n    if (shapeFlag & 6) {\n      unmountComponent(vnode.component, parentSuspense, doRemove);\n    } else {\n      if (shapeFlag & 128) {\n        vnode.suspense.unmount(parentSuspense, doRemove);\n        return;\n      }\n      if (shouldInvokeDirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, \"beforeUnmount\");\n      }\n      if (shapeFlag & 64) {\n        vnode.type.remove(\n          vnode,\n          parentComponent,\n          parentSuspense,\n          optimized,\n          internals,\n          doRemove\n        );\n      } else if (dynamicChildren && // #1153: fast path should not be taken for non-stable (v-for) fragments\n      (type !== Fragment || patchFlag > 0 && patchFlag & 64)) {\n        unmountChildren(\n          dynamicChildren,\n          parentComponent,\n          parentSuspense,\n          false,\n          true\n        );\n      } else if (type === Fragment && patchFlag & (128 | 256) || !optimized && shapeFlag & 16) {\n        unmountChildren(children, parentComponent, parentSuspense);\n      }\n      if (doRemove) {\n        remove(vnode);\n      }\n    }\n    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        shouldInvokeDirs && invokeDirectiveHook(vnode, null, parentComponent, \"unmounted\");\n      }, parentSuspense);\n    }\n  };\n  const remove = (vnode) => {\n    const { type, el, anchor, transition } = vnode;\n    if (type === Fragment) {\n      if (!!(process.env.NODE_ENV !== \"production\") && vnode.patchFlag > 0 && vnode.patchFlag & 2048 && transition && !transition.persisted) {\n        vnode.children.forEach((child) => {\n          if (child.type === Comment) {\n            hostRemove(child.el);\n          } else {\n            remove(child);\n          }\n        });\n      } else {\n        removeFragment(el, anchor);\n      }\n      return;\n    }\n    if (type === Static) {\n      removeStaticNode(vnode);\n      return;\n    }\n    const performRemove = () => {\n      hostRemove(el);\n      if (transition && !transition.persisted && transition.afterLeave) {\n        transition.afterLeave();\n      }\n    };\n    if (vnode.shapeFlag & 1 && transition && !transition.persisted) {\n      const { leave, delayLeave } = transition;\n      const performLeave = () => leave(el, performRemove);\n      if (delayLeave) {\n        delayLeave(vnode.el, performRemove, performLeave);\n      } else {\n        performLeave();\n      }\n    } else {\n      performRemove();\n    }\n  };\n  const removeFragment = (cur, end) => {\n    let next;\n    while (cur !== end) {\n      next = hostNextSibling(cur);\n      hostRemove(cur);\n      cur = next;\n    }\n    hostRemove(end);\n  };\n  const unmountComponent = (instance, parentSuspense, doRemove) => {\n    if (!!(process.env.NODE_ENV !== \"production\") && instance.type.__hmrId) {\n      unregisterHMR(instance);\n    }\n    const { bum, scope, update, subTree, um } = instance;\n    if (bum) {\n      invokeArrayFns(bum);\n    }\n    scope.stop();\n    if (update) {\n      update.active = false;\n      unmount(subTree, instance, parentSuspense, doRemove);\n    }\n    if (um) {\n      queuePostRenderEffect(um, parentSuspense);\n    }\n    queuePostRenderEffect(() => {\n      instance.isUnmounted = true;\n    }, parentSuspense);\n    if (parentSuspense && parentSuspense.pendingBranch && !parentSuspense.isUnmounted && instance.asyncDep && !instance.asyncResolved && instance.suspenseId === parentSuspense.pendingId) {\n      parentSuspense.deps--;\n      if (parentSuspense.deps === 0) {\n        parentSuspense.resolve();\n      }\n    }\n    if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n      devtoolsComponentRemoved(instance);\n    }\n  };\n  const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\n    for (let i = start; i < children.length; i++) {\n      unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\n    }\n  };\n  const getNextHostNode = (vnode) => {\n    if (vnode.shapeFlag & 6) {\n      return getNextHostNode(vnode.component.subTree);\n    }\n    if (vnode.shapeFlag & 128) {\n      return vnode.suspense.next();\n    }\n    return hostNextSibling(vnode.anchor || vnode.el);\n  };\n  const render = (vnode, container, isSVG) => {\n    if (vnode == null) {\n      if (container._vnode) {\n        unmount(container._vnode, null, null, true);\n      }\n    } else {\n      patch(container._vnode || null, vnode, container, null, null, null, isSVG);\n    }\n    flushPreFlushCbs();\n    flushPostFlushCbs();\n    container._vnode = vnode;\n  };\n  const internals = {\n    p: patch,\n    um: unmount,\n    m: move,\n    r: remove,\n    mt: mountComponent,\n    mc: mountChildren,\n    pc: patchChildren,\n    pbc: patchBlockChildren,\n    n: getNextHostNode,\n    o: options\n  };\n  let hydrate;\n  let hydrateNode;\n  if (createHydrationFns) {\n    [hydrate, hydrateNode] = createHydrationFns(\n      internals\n    );\n  }\n  return {\n    render,\n    hydrate,\n    createApp: createAppAPI(render, hydrate)\n  };\n}\nfunction toggleRecurse({ effect, update }, allowed) {\n  effect.allowRecurse = update.allowRecurse = allowed;\n}\nfunction traverseStaticChildren(n1, n2, shallow = false) {\n  const ch1 = n1.children;\n  const ch2 = n2.children;\n  if (isArray(ch1) && isArray(ch2)) {\n    for (let i = 0; i < ch1.length; i++) {\n      const c1 = ch1[i];\n      let c2 = ch2[i];\n      if (c2.shapeFlag & 1 && !c2.dynamicChildren) {\n        if (c2.patchFlag <= 0 || c2.patchFlag === 32) {\n          c2 = ch2[i] = cloneIfMounted(ch2[i]);\n          c2.el = c1.el;\n        }\n        if (!shallow)\n          traverseStaticChildren(c1, c2);\n      }\n      if (c2.type === Text) {\n        c2.el = c1.el;\n      }\n      if (!!(process.env.NODE_ENV !== \"production\") && c2.type === Comment && !c2.el) {\n        c2.el = c1.el;\n      }\n    }\n  }\n}\nfunction getSequence(arr) {\n  const p = arr.slice();\n  const result = [0];\n  let i, j, u, v, c;\n  const len = arr.length;\n  for (i = 0; i < len; i++) {\n    const arrI = arr[i];\n    if (arrI !== 0) {\n      j = result[result.length - 1];\n      if (arr[j] < arrI) {\n        p[i] = j;\n        result.push(i);\n        continue;\n      }\n      u = 0;\n      v = result.length - 1;\n      while (u < v) {\n        c = u + v >> 1;\n        if (arr[result[c]] < arrI) {\n          u = c + 1;\n        } else {\n          v = c;\n        }\n      }\n      if (arrI < arr[result[u]]) {\n        if (u > 0) {\n          p[i] = result[u - 1];\n        }\n        result[u] = i;\n      }\n    }\n  }\n  u = result.length;\n  v = result[u - 1];\n  while (u-- > 0) {\n    result[u] = v;\n    v = p[v];\n  }\n  return result;\n}\n\nconst isTeleport = (type) => type.__isTeleport;\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === \"\");\nconst isTargetSVG = (target) => typeof SVGElement !== \"undefined\" && target instanceof SVGElement;\nconst resolveTarget = (props, select) => {\n  const targetSelector = props && props.to;\n  if (isString(targetSelector)) {\n    if (!select) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(\n        `Current renderer does not support string target for Teleports. (missing querySelector renderer option)`\n      );\n      return null;\n    } else {\n      const target = select(targetSelector);\n      if (!target) {\n        !!(process.env.NODE_ENV !== \"production\") && warn(\n          `Failed to locate Teleport target with selector \"${targetSelector}\". Note the target element must exist before the component is mounted - i.e. the target cannot be rendered by the component itself, and ideally should be outside of the entire Vue component tree.`\n        );\n      }\n      return target;\n    }\n  } else {\n    if (!!(process.env.NODE_ENV !== \"production\") && !targetSelector && !isTeleportDisabled(props)) {\n      warn(`Invalid Teleport target: ${targetSelector}`);\n    }\n    return targetSelector;\n  }\n};\nconst TeleportImpl = {\n  __isTeleport: true,\n  process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\n    const {\n      mc: mountChildren,\n      pc: patchChildren,\n      pbc: patchBlockChildren,\n      o: { insert, querySelector, createText, createComment }\n    } = internals;\n    const disabled = isTeleportDisabled(n2.props);\n    let { shapeFlag, children, dynamicChildren } = n2;\n    if (!!(process.env.NODE_ENV !== \"production\") && isHmrUpdating) {\n      optimized = false;\n      dynamicChildren = null;\n    }\n    if (n1 == null) {\n      const placeholder = n2.el = !!(process.env.NODE_ENV !== \"production\") ? createComment(\"teleport start\") : createText(\"\");\n      const mainAnchor = n2.anchor = !!(process.env.NODE_ENV !== \"production\") ? createComment(\"teleport end\") : createText(\"\");\n      insert(placeholder, container, anchor);\n      insert(mainAnchor, container, anchor);\n      const target = n2.target = resolveTarget(n2.props, querySelector);\n      const targetAnchor = n2.targetAnchor = createText(\"\");\n      if (target) {\n        insert(targetAnchor, target);\n        isSVG = isSVG || isTargetSVG(target);\n      } else if (!!(process.env.NODE_ENV !== \"production\") && !disabled) {\n        warn(\"Invalid Teleport target on mount:\", target, `(${typeof target})`);\n      }\n      const mount = (container2, anchor2) => {\n        if (shapeFlag & 16) {\n          mountChildren(\n            children,\n            container2,\n            anchor2,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        }\n      };\n      if (disabled) {\n        mount(container, mainAnchor);\n      } else if (target) {\n        mount(target, targetAnchor);\n      }\n    } else {\n      n2.el = n1.el;\n      const mainAnchor = n2.anchor = n1.anchor;\n      const target = n2.target = n1.target;\n      const targetAnchor = n2.targetAnchor = n1.targetAnchor;\n      const wasDisabled = isTeleportDisabled(n1.props);\n      const currentContainer = wasDisabled ? container : target;\n      const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\n      isSVG = isSVG || isTargetSVG(target);\n      if (dynamicChildren) {\n        patchBlockChildren(\n          n1.dynamicChildren,\n          dynamicChildren,\n          currentContainer,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds\n        );\n        traverseStaticChildren(n1, n2, true);\n      } else if (!optimized) {\n        patchChildren(\n          n1,\n          n2,\n          currentContainer,\n          currentAnchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          false\n        );\n      }\n      if (disabled) {\n        if (!wasDisabled) {\n          moveTeleport(\n            n2,\n            container,\n            mainAnchor,\n            internals,\n            1\n          );\n        }\n      } else {\n        if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\n          const nextTarget = n2.target = resolveTarget(\n            n2.props,\n            querySelector\n          );\n          if (nextTarget) {\n            moveTeleport(\n              n2,\n              nextTarget,\n              null,\n              internals,\n              0\n            );\n          } else if (!!(process.env.NODE_ENV !== \"production\")) {\n            warn(\n              \"Invalid Teleport target on update:\",\n              target,\n              `(${typeof target})`\n            );\n          }\n        } else if (wasDisabled) {\n          moveTeleport(\n            n2,\n            target,\n            targetAnchor,\n            internals,\n            1\n          );\n        }\n      }\n    }\n    updateCssVars(n2);\n  },\n  remove(vnode, parentComponent, parentSuspense, optimized, { um: unmount, o: { remove: hostRemove } }, doRemove) {\n    const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode;\n    if (target) {\n      hostRemove(targetAnchor);\n    }\n    if (doRemove || !isTeleportDisabled(props)) {\n      hostRemove(anchor);\n      if (shapeFlag & 16) {\n        for (let i = 0; i < children.length; i++) {\n          const child = children[i];\n          unmount(\n            child,\n            parentComponent,\n            parentSuspense,\n            true,\n            !!child.dynamicChildren\n          );\n        }\n      }\n    }\n  },\n  move: moveTeleport,\n  hydrate: hydrateTeleport\n};\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2) {\n  if (moveType === 0) {\n    insert(vnode.targetAnchor, container, parentAnchor);\n  }\n  const { el, anchor, shapeFlag, children, props } = vnode;\n  const isReorder = moveType === 2;\n  if (isReorder) {\n    insert(el, container, parentAnchor);\n  }\n  if (!isReorder || isTeleportDisabled(props)) {\n    if (shapeFlag & 16) {\n      for (let i = 0; i < children.length; i++) {\n        move(\n          children[i],\n          container,\n          parentAnchor,\n          2\n        );\n      }\n    }\n  }\n  if (isReorder) {\n    insert(anchor, container, parentAnchor);\n  }\n}\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, {\n  o: { nextSibling, parentNode, querySelector }\n}, hydrateChildren) {\n  const target = vnode.target = resolveTarget(\n    vnode.props,\n    querySelector\n  );\n  if (target) {\n    const targetNode = target._lpa || target.firstChild;\n    if (vnode.shapeFlag & 16) {\n      if (isTeleportDisabled(vnode.props)) {\n        vnode.anchor = hydrateChildren(\n          nextSibling(node),\n          vnode,\n          parentNode(node),\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n        vnode.targetAnchor = targetNode;\n      } else {\n        vnode.anchor = nextSibling(node);\n        let targetAnchor = targetNode;\n        while (targetAnchor) {\n          targetAnchor = nextSibling(targetAnchor);\n          if (targetAnchor && targetAnchor.nodeType === 8 && targetAnchor.data === \"teleport anchor\") {\n            vnode.targetAnchor = targetAnchor;\n            target._lpa = vnode.targetAnchor && nextSibling(vnode.targetAnchor);\n            break;\n          }\n        }\n        hydrateChildren(\n          targetNode,\n          vnode,\n          target,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n      }\n    }\n    updateCssVars(vnode);\n  }\n  return vnode.anchor && nextSibling(vnode.anchor);\n}\nconst Teleport = TeleportImpl;\nfunction updateCssVars(vnode) {\n  const ctx = vnode.ctx;\n  if (ctx && ctx.ut) {\n    let node = vnode.children[0].el;\n    while (node !== vnode.targetAnchor) {\n      if (node.nodeType === 1)\n        node.setAttribute(\"data-v-owner\", ctx.uid);\n      node = node.nextSibling;\n    }\n    ctx.ut();\n  }\n}\n\nconst Fragment = Symbol.for(\"v-fgt\");\nconst Text = Symbol.for(\"v-txt\");\nconst Comment = Symbol.for(\"v-cmt\");\nconst Static = Symbol.for(\"v-stc\");\nconst blockStack = [];\nlet currentBlock = null;\nfunction openBlock(disableTracking = false) {\n  blockStack.push(currentBlock = disableTracking ? null : []);\n}\nfunction closeBlock() {\n  blockStack.pop();\n  currentBlock = blockStack[blockStack.length - 1] || null;\n}\nlet isBlockTreeEnabled = 1;\nfunction setBlockTracking(value) {\n  isBlockTreeEnabled += value;\n}\nfunction setupBlock(vnode) {\n  vnode.dynamicChildren = isBlockTreeEnabled > 0 ? currentBlock || EMPTY_ARR : null;\n  closeBlock();\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(vnode);\n  }\n  return vnode;\n}\nfunction createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {\n  return setupBlock(\n    createBaseVNode(\n      type,\n      props,\n      children,\n      patchFlag,\n      dynamicProps,\n      shapeFlag,\n      true\n      /* isBlock */\n    )\n  );\n}\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\n  return setupBlock(\n    createVNode(\n      type,\n      props,\n      children,\n      patchFlag,\n      dynamicProps,\n      true\n      /* isBlock: prevent a block from tracking itself */\n    )\n  );\n}\nfunction isVNode(value) {\n  return value ? value.__v_isVNode === true : false;\n}\nfunction isSameVNodeType(n1, n2) {\n  if (!!(process.env.NODE_ENV !== \"production\") && n2.shapeFlag & 6 && hmrDirtyComponents.has(n2.type)) {\n    n1.shapeFlag &= ~256;\n    n2.shapeFlag &= ~512;\n    return false;\n  }\n  return n1.type === n2.type && n1.key === n2.key;\n}\nlet vnodeArgsTransformer;\nfunction transformVNodeArgs(transformer) {\n  vnodeArgsTransformer = transformer;\n}\nconst createVNodeWithArgsTransform = (...args) => {\n  return _createVNode(\n    ...vnodeArgsTransformer ? vnodeArgsTransformer(args, currentRenderingInstance) : args\n  );\n};\nconst InternalObjectKey = `__vInternal`;\nconst normalizeKey = ({ key }) => key != null ? key : null;\nconst normalizeRef = ({\n  ref,\n  ref_key,\n  ref_for\n}) => {\n  if (typeof ref === \"number\") {\n    ref = \"\" + ref;\n  }\n  return ref != null ? isString(ref) || isRef(ref) || isFunction(ref) ? { i: currentRenderingInstance, r: ref, k: ref_key, f: !!ref_for } : ref : null;\n};\nfunction createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment ? 0 : 1, isBlockNode = false, needFullChildrenNormalization = false) {\n  const vnode = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type,\n    props,\n    key: props && normalizeKey(props),\n    ref: props && normalizeRef(props),\n    scopeId: currentScopeId,\n    slotScopeIds: null,\n    children,\n    component: null,\n    suspense: null,\n    ssContent: null,\n    ssFallback: null,\n    dirs: null,\n    transition: null,\n    el: null,\n    anchor: null,\n    target: null,\n    targetAnchor: null,\n    staticCount: 0,\n    shapeFlag,\n    patchFlag,\n    dynamicProps,\n    dynamicChildren: null,\n    appContext: null,\n    ctx: currentRenderingInstance\n  };\n  if (needFullChildrenNormalization) {\n    normalizeChildren(vnode, children);\n    if (shapeFlag & 128) {\n      type.normalize(vnode);\n    }\n  } else if (children) {\n    vnode.shapeFlag |= isString(children) ? 8 : 16;\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && vnode.key !== vnode.key) {\n    warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\n  }\n  if (isBlockTreeEnabled > 0 && // avoid a block node from tracking itself\n  !isBlockNode && // has current parent block\n  currentBlock && // presence of a patch flag indicates this node needs patching on updates.\n  // component nodes also should always be patched, because even if the\n  // component doesn't need to update, it needs to persist the instance on to\n  // the next vnode so that it can be properly unmounted later.\n  (vnode.patchFlag > 0 || shapeFlag & 6) && // the EVENTS flag is only for hydration and if it is the only flag, the\n  // vnode should not be considered dynamic due to handler caching.\n  vnode.patchFlag !== 32) {\n    currentBlock.push(vnode);\n  }\n  return vnode;\n}\nconst createVNode = !!(process.env.NODE_ENV !== \"production\") ? createVNodeWithArgsTransform : _createVNode;\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\n  if (!type || type === NULL_DYNAMIC_COMPONENT) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !type) {\n      warn(`Invalid vnode type when creating vnode: ${type}.`);\n    }\n    type = Comment;\n  }\n  if (isVNode(type)) {\n    const cloned = cloneVNode(\n      type,\n      props,\n      true\n      /* mergeRef: true */\n    );\n    if (children) {\n      normalizeChildren(cloned, children);\n    }\n    if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {\n      if (cloned.shapeFlag & 6) {\n        currentBlock[currentBlock.indexOf(type)] = cloned;\n      } else {\n        currentBlock.push(cloned);\n      }\n    }\n    cloned.patchFlag |= -2;\n    return cloned;\n  }\n  if (isClassComponent(type)) {\n    type = type.__vccOpts;\n  }\n  if (props) {\n    props = guardReactiveProps(props);\n    let { class: klass, style } = props;\n    if (klass && !isString(klass)) {\n      props.class = normalizeClass(klass);\n    }\n    if (isObject(style)) {\n      if (isProxy(style) && !isArray(style)) {\n        style = extend({}, style);\n      }\n      props.style = normalizeStyle(style);\n    }\n  }\n  const shapeFlag = isString(type) ? 1 : isSuspense(type) ? 128 : isTeleport(type) ? 64 : isObject(type) ? 4 : isFunction(type) ? 2 : 0;\n  if (!!(process.env.NODE_ENV !== \"production\") && shapeFlag & 4 && isProxy(type)) {\n    type = toRaw(type);\n    warn(\n      `Vue received a Component which was made a reactive object. This can lead to unnecessary performance overhead, and should be avoided by marking the component with \\`markRaw\\` or using \\`shallowRef\\` instead of \\`ref\\`.`,\n      `\nComponent that was made reactive: `,\n      type\n    );\n  }\n  return createBaseVNode(\n    type,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    shapeFlag,\n    isBlockNode,\n    true\n  );\n}\nfunction guardReactiveProps(props) {\n  if (!props)\n    return null;\n  return isProxy(props) || InternalObjectKey in props ? extend({}, props) : props;\n}\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\n  const { props, ref, patchFlag, children } = vnode;\n  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\n  const cloned = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type: vnode.type,\n    props: mergedProps,\n    key: mergedProps && normalizeKey(mergedProps),\n    ref: extraProps && extraProps.ref ? (\n      // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\n      // if the vnode itself already has a ref, cloneVNode will need to merge\n      // the refs so the single vnode can be set on multiple refs\n      mergeRef && ref ? isArray(ref) ? ref.concat(normalizeRef(extraProps)) : [ref, normalizeRef(extraProps)] : normalizeRef(extraProps)\n    ) : ref,\n    scopeId: vnode.scopeId,\n    slotScopeIds: vnode.slotScopeIds,\n    children: !!(process.env.NODE_ENV !== \"production\") && patchFlag === -1 && isArray(children) ? children.map(deepCloneVNode) : children,\n    target: vnode.target,\n    targetAnchor: vnode.targetAnchor,\n    staticCount: vnode.staticCount,\n    shapeFlag: vnode.shapeFlag,\n    // if the vnode is cloned with extra props, we can no longer assume its\n    // existing patch flag to be reliable and need to add the FULL_PROPS flag.\n    // note: preserve flag for fragments since they use the flag for children\n    // fast paths only.\n    patchFlag: extraProps && vnode.type !== Fragment ? patchFlag === -1 ? 16 : patchFlag | 16 : patchFlag,\n    dynamicProps: vnode.dynamicProps,\n    dynamicChildren: vnode.dynamicChildren,\n    appContext: vnode.appContext,\n    dirs: vnode.dirs,\n    transition: vnode.transition,\n    // These should technically only be non-null on mounted VNodes. However,\n    // they *should* be copied for kept-alive vnodes. So we just always copy\n    // them since them being non-null during a mount doesn't affect the logic as\n    // they will simply be overwritten.\n    component: vnode.component,\n    suspense: vnode.suspense,\n    ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\n    ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\n    el: vnode.el,\n    anchor: vnode.anchor,\n    ctx: vnode.ctx,\n    ce: vnode.ce\n  };\n  return cloned;\n}\nfunction deepCloneVNode(vnode) {\n  const cloned = cloneVNode(vnode);\n  if (isArray(vnode.children)) {\n    cloned.children = vnode.children.map(deepCloneVNode);\n  }\n  return cloned;\n}\nfunction createTextVNode(text = \" \", flag = 0) {\n  return createVNode(Text, null, text, flag);\n}\nfunction createStaticVNode(content, numberOfNodes) {\n  const vnode = createVNode(Static, null, content);\n  vnode.staticCount = numberOfNodes;\n  return vnode;\n}\nfunction createCommentVNode(text = \"\", asBlock = false) {\n  return asBlock ? (openBlock(), createBlock(Comment, null, text)) : createVNode(Comment, null, text);\n}\nfunction normalizeVNode(child) {\n  if (child == null || typeof child === \"boolean\") {\n    return createVNode(Comment);\n  } else if (isArray(child)) {\n    return createVNode(\n      Fragment,\n      null,\n      // #3666, avoid reference pollution when reusing vnode\n      child.slice()\n    );\n  } else if (typeof child === \"object\") {\n    return cloneIfMounted(child);\n  } else {\n    return createVNode(Text, null, String(child));\n  }\n}\nfunction cloneIfMounted(child) {\n  return child.el === null && child.patchFlag !== -1 || child.memo ? child : cloneVNode(child);\n}\nfunction normalizeChildren(vnode, children) {\n  let type = 0;\n  const { shapeFlag } = vnode;\n  if (children == null) {\n    children = null;\n  } else if (isArray(children)) {\n    type = 16;\n  } else if (typeof children === \"object\") {\n    if (shapeFlag & (1 | 64)) {\n      const slot = children.default;\n      if (slot) {\n        slot._c && (slot._d = false);\n        normalizeChildren(vnode, slot());\n        slot._c && (slot._d = true);\n      }\n      return;\n    } else {\n      type = 32;\n      const slotFlag = children._;\n      if (!slotFlag && !(InternalObjectKey in children)) {\n        children._ctx = currentRenderingInstance;\n      } else if (slotFlag === 3 && currentRenderingInstance) {\n        if (currentRenderingInstance.slots._ === 1) {\n          children._ = 1;\n        } else {\n          children._ = 2;\n          vnode.patchFlag |= 1024;\n        }\n      }\n    }\n  } else if (isFunction(children)) {\n    children = { default: children, _ctx: currentRenderingInstance };\n    type = 32;\n  } else {\n    children = String(children);\n    if (shapeFlag & 64) {\n      type = 16;\n      children = [createTextVNode(children)];\n    } else {\n      type = 8;\n    }\n  }\n  vnode.children = children;\n  vnode.shapeFlag |= type;\n}\nfunction mergeProps(...args) {\n  const ret = {};\n  for (let i = 0; i < args.length; i++) {\n    const toMerge = args[i];\n    for (const key in toMerge) {\n      if (key === \"class\") {\n        if (ret.class !== toMerge.class) {\n          ret.class = normalizeClass([ret.class, toMerge.class]);\n        }\n      } else if (key === \"style\") {\n        ret.style = normalizeStyle([ret.style, toMerge.style]);\n      } else if (isOn(key)) {\n        const existing = ret[key];\n        const incoming = toMerge[key];\n        if (incoming && existing !== incoming && !(isArray(existing) && existing.includes(incoming))) {\n          ret[key] = existing ? [].concat(existing, incoming) : incoming;\n        }\n      } else if (key !== \"\") {\n        ret[key] = toMerge[key];\n      }\n    }\n  }\n  return ret;\n}\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\n  callWithAsyncErrorHandling(hook, instance, 7, [\n    vnode,\n    prevVNode\n  ]);\n}\n\nconst emptyAppContext = createAppContext();\nlet uid = 0;\nfunction createComponentInstance(vnode, parent, suspense) {\n  const type = vnode.type;\n  const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\n  const instance = {\n    uid: uid++,\n    vnode,\n    type,\n    parent,\n    appContext,\n    root: null,\n    // to be immediately set\n    next: null,\n    subTree: null,\n    // will be set synchronously right after creation\n    effect: null,\n    update: null,\n    // will be set synchronously right after creation\n    scope: new EffectScope(\n      true\n      /* detached */\n    ),\n    render: null,\n    proxy: null,\n    exposed: null,\n    exposeProxy: null,\n    withProxy: null,\n    provides: parent ? parent.provides : Object.create(appContext.provides),\n    accessCache: null,\n    renderCache: [],\n    // local resolved assets\n    components: null,\n    directives: null,\n    // resolved props and emits options\n    propsOptions: normalizePropsOptions(type, appContext),\n    emitsOptions: normalizeEmitsOptions(type, appContext),\n    // emit\n    emit: null,\n    // to be set immediately\n    emitted: null,\n    // props default value\n    propsDefaults: EMPTY_OBJ,\n    // inheritAttrs\n    inheritAttrs: type.inheritAttrs,\n    // state\n    ctx: EMPTY_OBJ,\n    data: EMPTY_OBJ,\n    props: EMPTY_OBJ,\n    attrs: EMPTY_OBJ,\n    slots: EMPTY_OBJ,\n    refs: EMPTY_OBJ,\n    setupState: EMPTY_OBJ,\n    setupContext: null,\n    attrsProxy: null,\n    slotsProxy: null,\n    // suspense related\n    suspense,\n    suspenseId: suspense ? suspense.pendingId : 0,\n    asyncDep: null,\n    asyncResolved: false,\n    // lifecycle hooks\n    // not using enums here because it results in computed properties\n    isMounted: false,\n    isUnmounted: false,\n    isDeactivated: false,\n    bc: null,\n    c: null,\n    bm: null,\n    m: null,\n    bu: null,\n    u: null,\n    um: null,\n    bum: null,\n    da: null,\n    a: null,\n    rtg: null,\n    rtc: null,\n    ec: null,\n    sp: null\n  };\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    instance.ctx = createDevRenderContext(instance);\n  } else {\n    instance.ctx = { _: instance };\n  }\n  instance.root = parent ? parent.root : instance;\n  instance.emit = emit.bind(null, instance);\n  if (vnode.ce) {\n    vnode.ce(instance);\n  }\n  return instance;\n}\nlet currentInstance = null;\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\nlet internalSetCurrentInstance;\nlet globalCurrentInstanceSetters;\nlet settersKey = \"__VUE_INSTANCE_SETTERS__\";\n{\n  if (!(globalCurrentInstanceSetters = getGlobalThis()[settersKey])) {\n    globalCurrentInstanceSetters = getGlobalThis()[settersKey] = [];\n  }\n  globalCurrentInstanceSetters.push((i) => currentInstance = i);\n  internalSetCurrentInstance = (instance) => {\n    if (globalCurrentInstanceSetters.length > 1) {\n      globalCurrentInstanceSetters.forEach((s) => s(instance));\n    } else {\n      globalCurrentInstanceSetters[0](instance);\n    }\n  };\n}\nconst setCurrentInstance = (instance) => {\n  internalSetCurrentInstance(instance);\n  instance.scope.on();\n};\nconst unsetCurrentInstance = () => {\n  currentInstance && currentInstance.scope.off();\n  internalSetCurrentInstance(null);\n};\nconst isBuiltInTag = /* @__PURE__ */ makeMap(\"slot,component\");\nfunction validateComponentName(name, config) {\n  const appIsNativeTag = config.isNativeTag || NO;\n  if (isBuiltInTag(name) || appIsNativeTag(name)) {\n    warn(\n      \"Do not use built-in or reserved HTML elements as component id: \" + name\n    );\n  }\n}\nfunction isStatefulComponent(instance) {\n  return instance.vnode.shapeFlag & 4;\n}\nlet isInSSRComponentSetup = false;\nfunction setupComponent(instance, isSSR = false) {\n  isInSSRComponentSetup = isSSR;\n  const { props, children } = instance.vnode;\n  const isStateful = isStatefulComponent(instance);\n  initProps(instance, props, isStateful, isSSR);\n  initSlots(instance, children);\n  const setupResult = isStateful ? setupStatefulComponent(instance, isSSR) : void 0;\n  isInSSRComponentSetup = false;\n  return setupResult;\n}\nfunction setupStatefulComponent(instance, isSSR) {\n  var _a;\n  const Component = instance.type;\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    if (Component.name) {\n      validateComponentName(Component.name, instance.appContext.config);\n    }\n    if (Component.components) {\n      const names = Object.keys(Component.components);\n      for (let i = 0; i < names.length; i++) {\n        validateComponentName(names[i], instance.appContext.config);\n      }\n    }\n    if (Component.directives) {\n      const names = Object.keys(Component.directives);\n      for (let i = 0; i < names.length; i++) {\n        validateDirectiveName(names[i]);\n      }\n    }\n    if (Component.compilerOptions && isRuntimeOnly()) {\n      warn(\n        `\"compilerOptions\" is only supported when using a build of Vue that includes the runtime compiler. Since you are using a runtime-only build, the options should be passed via your build tool config instead.`\n      );\n    }\n  }\n  instance.accessCache = /* @__PURE__ */ Object.create(null);\n  instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers));\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    exposePropsOnRenderContext(instance);\n  }\n  const { setup } = Component;\n  if (setup) {\n    const setupContext = instance.setupContext = setup.length > 1 ? createSetupContext(instance) : null;\n    setCurrentInstance(instance);\n    pauseTracking();\n    const setupResult = callWithErrorHandling(\n      setup,\n      instance,\n      0,\n      [!!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(instance.props) : instance.props, setupContext]\n    );\n    resetTracking();\n    unsetCurrentInstance();\n    if (isPromise(setupResult)) {\n      setupResult.then(unsetCurrentInstance, unsetCurrentInstance);\n      if (isSSR) {\n        return setupResult.then((resolvedResult) => {\n          handleSetupResult(instance, resolvedResult, isSSR);\n        }).catch((e) => {\n          handleError(e, instance, 0);\n        });\n      } else {\n        instance.asyncDep = setupResult;\n        if (!!(process.env.NODE_ENV !== \"production\") && !instance.suspense) {\n          const name = (_a = Component.name) != null ? _a : \"Anonymous\";\n          warn(\n            `Component <${name}>: setup function returned a promise, but no <Suspense> boundary was found in the parent component tree. A component with async setup() must be nested in a <Suspense> in order to be rendered.`\n          );\n        }\n      }\n    } else {\n      handleSetupResult(instance, setupResult, isSSR);\n    }\n  } else {\n    finishComponentSetup(instance, isSSR);\n  }\n}\nfunction handleSetupResult(instance, setupResult, isSSR) {\n  if (isFunction(setupResult)) {\n    if (instance.type.__ssrInlineRender) {\n      instance.ssrRender = setupResult;\n    } else {\n      instance.render = setupResult;\n    }\n  } else if (isObject(setupResult)) {\n    if (!!(process.env.NODE_ENV !== \"production\") && isVNode(setupResult)) {\n      warn(\n        `setup() should not return VNodes directly - return a render function instead.`\n      );\n    }\n    if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n      instance.devtoolsRawSetupState = setupResult;\n    }\n    instance.setupState = proxyRefs(setupResult);\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      exposeSetupStateOnRenderContext(instance);\n    }\n  } else if (!!(process.env.NODE_ENV !== \"production\") && setupResult !== void 0) {\n    warn(\n      `setup() should return an object. Received: ${setupResult === null ? \"null\" : typeof setupResult}`\n    );\n  }\n  finishComponentSetup(instance, isSSR);\n}\nlet compile;\nlet installWithProxy;\nfunction registerRuntimeCompiler(_compile) {\n  compile = _compile;\n  installWithProxy = (i) => {\n    if (i.render._rc) {\n      i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\n    }\n  };\n}\nconst isRuntimeOnly = () => !compile;\nfunction finishComponentSetup(instance, isSSR, skipOptions) {\n  const Component = instance.type;\n  if (!instance.render) {\n    if (!isSSR && compile && !Component.render) {\n      const template = Component.template || resolveMergedOptions(instance).template;\n      if (template) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          startMeasure(instance, `compile`);\n        }\n        const { isCustomElement, compilerOptions } = instance.appContext.config;\n        const { delimiters, compilerOptions: componentCompilerOptions } = Component;\n        const finalCompilerOptions = extend(\n          extend(\n            {\n              isCustomElement,\n              delimiters\n            },\n            compilerOptions\n          ),\n          componentCompilerOptions\n        );\n        Component.render = compile(template, finalCompilerOptions);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          endMeasure(instance, `compile`);\n        }\n      }\n    }\n    instance.render = Component.render || NOOP;\n    if (installWithProxy) {\n      installWithProxy(instance);\n    }\n  }\n  if (__VUE_OPTIONS_API__ && true) {\n    setCurrentInstance(instance);\n    pauseTracking();\n    applyOptions(instance);\n    resetTracking();\n    unsetCurrentInstance();\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && !Component.render && instance.render === NOOP && !isSSR) {\n    if (!compile && Component.template) {\n      warn(\n        `Component provided template option but runtime compilation is not supported in this build of Vue.` + (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".` )\n        /* should not happen */\n      );\n    } else {\n      warn(`Component is missing template or render function.`);\n    }\n  }\n}\nfunction getAttrsProxy(instance) {\n  return instance.attrsProxy || (instance.attrsProxy = new Proxy(\n    instance.attrs,\n    !!(process.env.NODE_ENV !== \"production\") ? {\n      get(target, key) {\n        markAttrsAccessed();\n        track(instance, \"get\", \"$attrs\");\n        return target[key];\n      },\n      set() {\n        warn(`setupContext.attrs is readonly.`);\n        return false;\n      },\n      deleteProperty() {\n        warn(`setupContext.attrs is readonly.`);\n        return false;\n      }\n    } : {\n      get(target, key) {\n        track(instance, \"get\", \"$attrs\");\n        return target[key];\n      }\n    }\n  ));\n}\nfunction getSlotsProxy(instance) {\n  return instance.slotsProxy || (instance.slotsProxy = new Proxy(instance.slots, {\n    get(target, key) {\n      track(instance, \"get\", \"$slots\");\n      return target[key];\n    }\n  }));\n}\nfunction createSetupContext(instance) {\n  const expose = (exposed) => {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      if (instance.exposed) {\n        warn(`expose() should be called only once per setup().`);\n      }\n      if (exposed != null) {\n        let exposedType = typeof exposed;\n        if (exposedType === \"object\") {\n          if (isArray(exposed)) {\n            exposedType = \"array\";\n          } else if (isRef(exposed)) {\n            exposedType = \"ref\";\n          }\n        }\n        if (exposedType !== \"object\") {\n          warn(\n            `expose() should be passed a plain object, received ${exposedType}.`\n          );\n        }\n      }\n    }\n    instance.exposed = exposed || {};\n  };\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    return Object.freeze({\n      get attrs() {\n        return getAttrsProxy(instance);\n      },\n      get slots() {\n        return getSlotsProxy(instance);\n      },\n      get emit() {\n        return (event, ...args) => instance.emit(event, ...args);\n      },\n      expose\n    });\n  } else {\n    return {\n      get attrs() {\n        return getAttrsProxy(instance);\n      },\n      slots: instance.slots,\n      emit: instance.emit,\n      expose\n    };\n  }\n}\nfunction getExposeProxy(instance) {\n  if (instance.exposed) {\n    return instance.exposeProxy || (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\n      get(target, key) {\n        if (key in target) {\n          return target[key];\n        } else if (key in publicPropertiesMap) {\n          return publicPropertiesMap[key](instance);\n        }\n      },\n      has(target, key) {\n        return key in target || key in publicPropertiesMap;\n      }\n    }));\n  }\n}\nconst classifyRE = /(?:^|[-_])(\\w)/g;\nconst classify = (str) => str.replace(classifyRE, (c) => c.toUpperCase()).replace(/[-_]/g, \"\");\nfunction getComponentName(Component, includeInferred = true) {\n  return isFunction(Component) ? Component.displayName || Component.name : Component.name || includeInferred && Component.__name;\n}\nfunction formatComponentName(instance, Component, isRoot = false) {\n  let name = getComponentName(Component);\n  if (!name && Component.__file) {\n    const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\n    if (match) {\n      name = match[1];\n    }\n  }\n  if (!name && instance && instance.parent) {\n    const inferFromRegistry = (registry) => {\n      for (const key in registry) {\n        if (registry[key] === Component) {\n          return key;\n        }\n      }\n    };\n    name = inferFromRegistry(\n      instance.components || instance.parent.type.components\n    ) || inferFromRegistry(instance.appContext.components);\n  }\n  return name ? classify(name) : isRoot ? `App` : `Anonymous`;\n}\nfunction isClassComponent(value) {\n  return isFunction(value) && \"__vccOpts\" in value;\n}\n\nconst computed = (getterOrOptions, debugOptions) => {\n  return computed$1(getterOrOptions, debugOptions, isInSSRComponentSetup);\n};\n\nfunction h(type, propsOrChildren, children) {\n  const l = arguments.length;\n  if (l === 2) {\n    if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\n      if (isVNode(propsOrChildren)) {\n        return createVNode(type, null, [propsOrChildren]);\n      }\n      return createVNode(type, propsOrChildren);\n    } else {\n      return createVNode(type, null, propsOrChildren);\n    }\n  } else {\n    if (l > 3) {\n      children = Array.prototype.slice.call(arguments, 2);\n    } else if (l === 3 && isVNode(children)) {\n      children = [children];\n    }\n    return createVNode(type, propsOrChildren, children);\n  }\n}\n\nconst ssrContextKey = Symbol.for(\"v-scx\");\nconst useSSRContext = () => {\n  {\n    const ctx = inject(ssrContextKey);\n    if (!ctx) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(\n        `Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build.`\n      );\n    }\n    return ctx;\n  }\n};\n\nfunction isShallow(value) {\n  return !!(value && value[\"__v_isShallow\"]);\n}\n\nfunction initCustomFormatter() {\n  if (!!!(process.env.NODE_ENV !== \"production\") || typeof window === \"undefined\") {\n    return;\n  }\n  const vueStyle = { style: \"color:#3ba776\" };\n  const numberStyle = { style: \"color:#0b1bc9\" };\n  const stringStyle = { style: \"color:#b62e24\" };\n  const keywordStyle = { style: \"color:#9d288c\" };\n  const formatter = {\n    header(obj) {\n      if (!isObject(obj)) {\n        return null;\n      }\n      if (obj.__isVue) {\n        return [\"div\", vueStyle, `VueInstance`];\n      } else if (isRef(obj)) {\n        return [\n          \"div\",\n          {},\n          [\"span\", vueStyle, genRefFlag(obj)],\n          \"<\",\n          formatValue(obj.value),\n          `>`\n        ];\n      } else if (isReactive(obj)) {\n        return [\n          \"div\",\n          {},\n          [\"span\", vueStyle, isShallow(obj) ? \"ShallowReactive\" : \"Reactive\"],\n          \"<\",\n          formatValue(obj),\n          `>${isReadonly(obj) ? ` (readonly)` : ``}`\n        ];\n      } else if (isReadonly(obj)) {\n        return [\n          \"div\",\n          {},\n          [\"span\", vueStyle, isShallow(obj) ? \"ShallowReadonly\" : \"Readonly\"],\n          \"<\",\n          formatValue(obj),\n          \">\"\n        ];\n      }\n      return null;\n    },\n    hasBody(obj) {\n      return obj && obj.__isVue;\n    },\n    body(obj) {\n      if (obj && obj.__isVue) {\n        return [\n          \"div\",\n          {},\n          ...formatInstance(obj.$)\n        ];\n      }\n    }\n  };\n  function formatInstance(instance) {\n    const blocks = [];\n    if (instance.type.props && instance.props) {\n      blocks.push(createInstanceBlock(\"props\", toRaw(instance.props)));\n    }\n    if (instance.setupState !== EMPTY_OBJ) {\n      blocks.push(createInstanceBlock(\"setup\", instance.setupState));\n    }\n    if (instance.data !== EMPTY_OBJ) {\n      blocks.push(createInstanceBlock(\"data\", toRaw(instance.data)));\n    }\n    const computed = extractKeys(instance, \"computed\");\n    if (computed) {\n      blocks.push(createInstanceBlock(\"computed\", computed));\n    }\n    const injected = extractKeys(instance, \"inject\");\n    if (injected) {\n      blocks.push(createInstanceBlock(\"injected\", injected));\n    }\n    blocks.push([\n      \"div\",\n      {},\n      [\n        \"span\",\n        {\n          style: keywordStyle.style + \";opacity:0.66\"\n        },\n        \"$ (internal): \"\n      ],\n      [\"object\", { object: instance }]\n    ]);\n    return blocks;\n  }\n  function createInstanceBlock(type, target) {\n    target = extend({}, target);\n    if (!Object.keys(target).length) {\n      return [\"span\", {}];\n    }\n    return [\n      \"div\",\n      { style: \"line-height:1.25em;margin-bottom:0.6em\" },\n      [\n        \"div\",\n        {\n          style: \"color:#476582\"\n        },\n        type\n      ],\n      [\n        \"div\",\n        {\n          style: \"padding-left:1.25em\"\n        },\n        ...Object.keys(target).map((key) => {\n          return [\n            \"div\",\n            {},\n            [\"span\", keywordStyle, key + \": \"],\n            formatValue(target[key], false)\n          ];\n        })\n      ]\n    ];\n  }\n  function formatValue(v, asRaw = true) {\n    if (typeof v === \"number\") {\n      return [\"span\", numberStyle, v];\n    } else if (typeof v === \"string\") {\n      return [\"span\", stringStyle, JSON.stringify(v)];\n    } else if (typeof v === \"boolean\") {\n      return [\"span\", keywordStyle, v];\n    } else if (isObject(v)) {\n      return [\"object\", { object: asRaw ? toRaw(v) : v }];\n    } else {\n      return [\"span\", stringStyle, String(v)];\n    }\n  }\n  function extractKeys(instance, type) {\n    const Comp = instance.type;\n    if (isFunction(Comp)) {\n      return;\n    }\n    const extracted = {};\n    for (const key in instance.ctx) {\n      if (isKeyOfType(Comp, key, type)) {\n        extracted[key] = instance.ctx[key];\n      }\n    }\n    return extracted;\n  }\n  function isKeyOfType(Comp, key, type) {\n    const opts = Comp[type];\n    if (isArray(opts) && opts.includes(key) || isObject(opts) && key in opts) {\n      return true;\n    }\n    if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\n      return true;\n    }\n    if (Comp.mixins && Comp.mixins.some((m) => isKeyOfType(m, key, type))) {\n      return true;\n    }\n  }\n  function genRefFlag(v) {\n    if (isShallow(v)) {\n      return `ShallowRef`;\n    }\n    if (v.effect) {\n      return `ComputedRef`;\n    }\n    return `Ref`;\n  }\n  if (window.devtoolsFormatters) {\n    window.devtoolsFormatters.push(formatter);\n  } else {\n    window.devtoolsFormatters = [formatter];\n  }\n}\n\nfunction withMemo(memo, render, cache, index) {\n  const cached = cache[index];\n  if (cached && isMemoSame(cached, memo)) {\n    return cached;\n  }\n  const ret = render();\n  ret.memo = memo.slice();\n  return cache[index] = ret;\n}\nfunction isMemoSame(cached, memo) {\n  const prev = cached.memo;\n  if (prev.length != memo.length) {\n    return false;\n  }\n  for (let i = 0; i < prev.length; i++) {\n    if (hasChanged(prev[i], memo[i])) {\n      return false;\n    }\n  }\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(cached);\n  }\n  return true;\n}\n\nconst version = \"3.3.4\";\nconst _ssrUtils = {\n  createComponentInstance,\n  setupComponent,\n  renderComponentRoot,\n  setCurrentRenderingInstance,\n  isVNode: isVNode,\n  normalizeVNode\n};\nconst ssrUtils = _ssrUtils ;\nconst resolveFilter = null;\nconst compatUtils = null;\n\nexport { BaseTransition, BaseTransitionPropsValidators, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, assertNumber, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, compatUtils, computed, createBlock, createCommentVNode, createElementBlock, createBaseVNode as createElementVNode, createHydrationRenderer, createPropsRestProxy, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmits, defineExpose, defineModel, defineOptions, defineProps, defineSlots, devtools, getCurrentInstance, getTransitionRawChildren, guardReactiveProps, h, handleError, hasInjectionContext, initCustomFormatter, inject, isMemoSame, isRuntimeOnly, isVNode, mergeDefaults, mergeModels, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onServerPrefetch, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveFilter, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useAttrs, useModel, useSSRContext, useSlots, useTransitionState, version, warn, watch, watchEffect, watchPostEffect, watchSyncEffect, withAsyncContext, withCtx, withDefaults, withDirectives, withMemo, withScopeId };\n","import { warn, camelize, callWithAsyncErrorHandling, defineComponent, nextTick, createVNode, getCurrentInstance, watchPostEffect, onMounted, onUnmounted, Fragment, Static, h, BaseTransition, BaseTransitionPropsValidators, assertNumber, useTransitionState, onUpdated, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, isRuntimeOnly, createRenderer, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, includeBooleanAttr, isOn, isModelListener, isFunction, camelize as camelize$1, toNumber, extend, EMPTY_OBJ, isObject, looseToNumber, looseIndexOf, isSet, looseEqual, invokeArrayFns, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = \"http://www.w3.org/2000/svg\";\nconst doc = typeof document !== \"undefined\" ? document : null;\nconst templateContainer = doc && /* @__PURE__ */ doc.createElement(\"template\");\nconst nodeOps = {\n  insert: (child, parent, anchor) => {\n    parent.insertBefore(child, anchor || null);\n  },\n  remove: (child) => {\n    const parent = child.parentNode;\n    if (parent) {\n      parent.removeChild(child);\n    }\n  },\n  createElement: (tag, isSVG, is, props) => {\n    const el = isSVG ? doc.createElementNS(svgNS, tag) : doc.createElement(tag, is ? { is } : void 0);\n    if (tag === \"select\" && props && props.multiple != null) {\n      el.setAttribute(\"multiple\", props.multiple);\n    }\n    return el;\n  },\n  createText: (text) => doc.createTextNode(text),\n  createComment: (text) => doc.createComment(text),\n  setText: (node, text) => {\n    node.nodeValue = text;\n  },\n  setElementText: (el, text) => {\n    el.textContent = text;\n  },\n  parentNode: (node) => node.parentNode,\n  nextSibling: (node) => node.nextSibling,\n  querySelector: (selector) => doc.querySelector(selector),\n  setScopeId(el, id) {\n    el.setAttribute(id, \"\");\n  },\n  // __UNSAFE__\n  // Reason: innerHTML.\n  // Static content here can only come from compiled templates.\n  // As long as the user only uses trusted templates, this is safe.\n  insertStaticContent(content, parent, anchor, isSVG, start, end) {\n    const before = anchor ? anchor.previousSibling : parent.lastChild;\n    if (start && (start === end || start.nextSibling)) {\n      while (true) {\n        parent.insertBefore(start.cloneNode(true), anchor);\n        if (start === end || !(start = start.nextSibling))\n          break;\n      }\n    } else {\n      templateContainer.innerHTML = isSVG ? `<svg>${content}</svg>` : content;\n      const template = templateContainer.content;\n      if (isSVG) {\n        const wrapper = template.firstChild;\n        while (wrapper.firstChild) {\n          template.appendChild(wrapper.firstChild);\n        }\n        template.removeChild(wrapper);\n      }\n      parent.insertBefore(template, anchor);\n    }\n    return [\n      // first\n      before ? before.nextSibling : parent.firstChild,\n      // last\n      anchor ? anchor.previousSibling : parent.lastChild\n    ];\n  }\n};\n\nfunction patchClass(el, value, isSVG) {\n  const transitionClasses = el._vtc;\n  if (transitionClasses) {\n    value = (value ? [value, ...transitionClasses] : [...transitionClasses]).join(\" \");\n  }\n  if (value == null) {\n    el.removeAttribute(\"class\");\n  } else if (isSVG) {\n    el.setAttribute(\"class\", value);\n  } else {\n    el.className = value;\n  }\n}\n\nfunction patchStyle(el, prev, next) {\n  const style = el.style;\n  const isCssString = isString(next);\n  if (next && !isCssString) {\n    if (prev && !isString(prev)) {\n      for (const key in prev) {\n        if (next[key] == null) {\n          setStyle(style, key, \"\");\n        }\n      }\n    }\n    for (const key in next) {\n      setStyle(style, key, next[key]);\n    }\n  } else {\n    const currentDisplay = style.display;\n    if (isCssString) {\n      if (prev !== next) {\n        style.cssText = next;\n      }\n    } else if (prev) {\n      el.removeAttribute(\"style\");\n    }\n    if (\"_vod\" in el) {\n      style.display = currentDisplay;\n    }\n  }\n}\nconst semicolonRE = /[^\\\\];\\s*$/;\nconst importantRE = /\\s*!important$/;\nfunction setStyle(style, name, val) {\n  if (isArray(val)) {\n    val.forEach((v) => setStyle(style, name, v));\n  } else {\n    if (val == null)\n      val = \"\";\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      if (semicolonRE.test(val)) {\n        warn(\n          `Unexpected semicolon at the end of '${name}' style value: '${val}'`\n        );\n      }\n    }\n    if (name.startsWith(\"--\")) {\n      style.setProperty(name, val);\n    } else {\n      const prefixed = autoPrefix(style, name);\n      if (importantRE.test(val)) {\n        style.setProperty(\n          hyphenate(prefixed),\n          val.replace(importantRE, \"\"),\n          \"important\"\n        );\n      } else {\n        style[prefixed] = val;\n      }\n    }\n  }\n}\nconst prefixes = [\"Webkit\", \"Moz\", \"ms\"];\nconst prefixCache = {};\nfunction autoPrefix(style, rawName) {\n  const cached = prefixCache[rawName];\n  if (cached) {\n    return cached;\n  }\n  let name = camelize(rawName);\n  if (name !== \"filter\" && name in style) {\n    return prefixCache[rawName] = name;\n  }\n  name = capitalize(name);\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefixed = prefixes[i] + name;\n    if (prefixed in style) {\n      return prefixCache[rawName] = prefixed;\n    }\n  }\n  return rawName;\n}\n\nconst xlinkNS = \"http://www.w3.org/1999/xlink\";\nfunction patchAttr(el, key, value, isSVG, instance) {\n  if (isSVG && key.startsWith(\"xlink:\")) {\n    if (value == null) {\n      el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    const isBoolean = isSpecialBooleanAttr(key);\n    if (value == null || isBoolean && !includeBooleanAttr(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, isBoolean ? \"\" : value);\n    }\n  }\n}\n\nfunction patchDOMProp(el, key, value, prevChildren, parentComponent, parentSuspense, unmountChildren) {\n  if (key === \"innerHTML\" || key === \"textContent\") {\n    if (prevChildren) {\n      unmountChildren(prevChildren, parentComponent, parentSuspense);\n    }\n    el[key] = value == null ? \"\" : value;\n    return;\n  }\n  const tag = el.tagName;\n  if (key === \"value\" && tag !== \"PROGRESS\" && // custom elements may use _value internally\n  !tag.includes(\"-\")) {\n    el._value = value;\n    const oldValue = tag === \"OPTION\" ? el.getAttribute(\"value\") : el.value;\n    const newValue = value == null ? \"\" : value;\n    if (oldValue !== newValue) {\n      el.value = newValue;\n    }\n    if (value == null) {\n      el.removeAttribute(key);\n    }\n    return;\n  }\n  let needRemove = false;\n  if (value === \"\" || value == null) {\n    const type = typeof el[key];\n    if (type === \"boolean\") {\n      value = includeBooleanAttr(value);\n    } else if (value == null && type === \"string\") {\n      value = \"\";\n      needRemove = true;\n    } else if (type === \"number\") {\n      value = 0;\n      needRemove = true;\n    }\n  }\n  try {\n    el[key] = value;\n  } catch (e) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !needRemove) {\n      warn(\n        `Failed setting prop \"${key}\" on <${tag.toLowerCase()}>: value ${value} is invalid.`,\n        e\n      );\n    }\n  }\n  needRemove && el.removeAttribute(key);\n}\n\nfunction addEventListener(el, event, handler, options) {\n  el.addEventListener(event, handler, options);\n}\nfunction removeEventListener(el, event, handler, options) {\n  el.removeEventListener(event, handler, options);\n}\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\n  const invokers = el._vei || (el._vei = {});\n  const existingInvoker = invokers[rawName];\n  if (nextValue && existingInvoker) {\n    existingInvoker.value = nextValue;\n  } else {\n    const [name, options] = parseName(rawName);\n    if (nextValue) {\n      const invoker = invokers[rawName] = createInvoker(nextValue, instance);\n      addEventListener(el, name, invoker, options);\n    } else if (existingInvoker) {\n      removeEventListener(el, name, existingInvoker, options);\n      invokers[rawName] = void 0;\n    }\n  }\n}\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\nfunction parseName(name) {\n  let options;\n  if (optionsModifierRE.test(name)) {\n    options = {};\n    let m;\n    while (m = name.match(optionsModifierRE)) {\n      name = name.slice(0, name.length - m[0].length);\n      options[m[0].toLowerCase()] = true;\n    }\n  }\n  const event = name[2] === \":\" ? name.slice(3) : hyphenate(name.slice(2));\n  return [event, options];\n}\nlet cachedNow = 0;\nconst p = /* @__PURE__ */ Promise.resolve();\nconst getNow = () => cachedNow || (p.then(() => cachedNow = 0), cachedNow = Date.now());\nfunction createInvoker(initialValue, instance) {\n  const invoker = (e) => {\n    if (!e._vts) {\n      e._vts = Date.now();\n    } else if (e._vts <= invoker.attached) {\n      return;\n    }\n    callWithAsyncErrorHandling(\n      patchStopImmediatePropagation(e, invoker.value),\n      instance,\n      5,\n      [e]\n    );\n  };\n  invoker.value = initialValue;\n  invoker.attached = getNow();\n  return invoker;\n}\nfunction patchStopImmediatePropagation(e, value) {\n  if (isArray(value)) {\n    const originalStop = e.stopImmediatePropagation;\n    e.stopImmediatePropagation = () => {\n      originalStop.call(e);\n      e._stopped = true;\n    };\n    return value.map((fn) => (e2) => !e2._stopped && fn && fn(e2));\n  } else {\n    return value;\n  }\n}\n\nconst nativeOnRE = /^on[a-z]/;\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\n  if (key === \"class\") {\n    patchClass(el, nextValue, isSVG);\n  } else if (key === \"style\") {\n    patchStyle(el, prevValue, nextValue);\n  } else if (isOn(key)) {\n    if (!isModelListener(key)) {\n      patchEvent(el, key, prevValue, nextValue, parentComponent);\n    }\n  } else if (key[0] === \".\" ? (key = key.slice(1), true) : key[0] === \"^\" ? (key = key.slice(1), false) : shouldSetAsProp(el, key, nextValue, isSVG)) {\n    patchDOMProp(\n      el,\n      key,\n      nextValue,\n      prevChildren,\n      parentComponent,\n      parentSuspense,\n      unmountChildren\n    );\n  } else {\n    if (key === \"true-value\") {\n      el._trueValue = nextValue;\n    } else if (key === \"false-value\") {\n      el._falseValue = nextValue;\n    }\n    patchAttr(el, key, nextValue, isSVG);\n  }\n};\nfunction shouldSetAsProp(el, key, value, isSVG) {\n  if (isSVG) {\n    if (key === \"innerHTML\" || key === \"textContent\") {\n      return true;\n    }\n    if (key in el && nativeOnRE.test(key) && isFunction(value)) {\n      return true;\n    }\n    return false;\n  }\n  if (key === \"spellcheck\" || key === \"draggable\" || key === \"translate\") {\n    return false;\n  }\n  if (key === \"form\") {\n    return false;\n  }\n  if (key === \"list\" && el.tagName === \"INPUT\") {\n    return false;\n  }\n  if (key === \"type\" && el.tagName === \"TEXTAREA\") {\n    return false;\n  }\n  if (nativeOnRE.test(key) && isString(value)) {\n    return false;\n  }\n  return key in el;\n}\n\nfunction defineCustomElement(options, hydrate2) {\n  const Comp = defineComponent(options);\n  class VueCustomElement extends VueElement {\n    constructor(initialProps) {\n      super(Comp, initialProps, hydrate2);\n    }\n  }\n  VueCustomElement.def = Comp;\n  return VueCustomElement;\n}\nconst defineSSRCustomElement = (options) => {\n  return defineCustomElement(options, hydrate);\n};\nconst BaseClass = typeof HTMLElement !== \"undefined\" ? HTMLElement : class {\n};\nclass VueElement extends BaseClass {\n  constructor(_def, _props = {}, hydrate2) {\n    super();\n    this._def = _def;\n    this._props = _props;\n    /**\n     * @internal\n     */\n    this._instance = null;\n    this._connected = false;\n    this._resolved = false;\n    this._numberProps = null;\n    if (this.shadowRoot && hydrate2) {\n      hydrate2(this._createVNode(), this.shadowRoot);\n    } else {\n      if (!!(process.env.NODE_ENV !== \"production\") && this.shadowRoot) {\n        warn(\n          `Custom element has pre-rendered declarative shadow root but is not defined as hydratable. Use \\`defineSSRCustomElement\\`.`\n        );\n      }\n      this.attachShadow({ mode: \"open\" });\n      if (!this._def.__asyncLoader) {\n        this._resolveProps(this._def);\n      }\n    }\n  }\n  connectedCallback() {\n    this._connected = true;\n    if (!this._instance) {\n      if (this._resolved) {\n        this._update();\n      } else {\n        this._resolveDef();\n      }\n    }\n  }\n  disconnectedCallback() {\n    this._connected = false;\n    nextTick(() => {\n      if (!this._connected) {\n        render(null, this.shadowRoot);\n        this._instance = null;\n      }\n    });\n  }\n  /**\n   * resolve inner component definition (handle possible async component)\n   */\n  _resolveDef() {\n    this._resolved = true;\n    for (let i = 0; i < this.attributes.length; i++) {\n      this._setAttr(this.attributes[i].name);\n    }\n    new MutationObserver((mutations) => {\n      for (const m of mutations) {\n        this._setAttr(m.attributeName);\n      }\n    }).observe(this, { attributes: true });\n    const resolve = (def, isAsync = false) => {\n      const { props, styles } = def;\n      let numberProps;\n      if (props && !isArray(props)) {\n        for (const key in props) {\n          const opt = props[key];\n          if (opt === Number || opt && opt.type === Number) {\n            if (key in this._props) {\n              this._props[key] = toNumber(this._props[key]);\n            }\n            (numberProps || (numberProps = /* @__PURE__ */ Object.create(null)))[camelize$1(key)] = true;\n          }\n        }\n      }\n      this._numberProps = numberProps;\n      if (isAsync) {\n        this._resolveProps(def);\n      }\n      this._applyStyles(styles);\n      this._update();\n    };\n    const asyncDef = this._def.__asyncLoader;\n    if (asyncDef) {\n      asyncDef().then((def) => resolve(def, true));\n    } else {\n      resolve(this._def);\n    }\n  }\n  _resolveProps(def) {\n    const { props } = def;\n    const declaredPropKeys = isArray(props) ? props : Object.keys(props || {});\n    for (const key of Object.keys(this)) {\n      if (key[0] !== \"_\" && declaredPropKeys.includes(key)) {\n        this._setProp(key, this[key], true, false);\n      }\n    }\n    for (const key of declaredPropKeys.map(camelize$1)) {\n      Object.defineProperty(this, key, {\n        get() {\n          return this._getProp(key);\n        },\n        set(val) {\n          this._setProp(key, val);\n        }\n      });\n    }\n  }\n  _setAttr(key) {\n    let value = this.getAttribute(key);\n    const camelKey = camelize$1(key);\n    if (this._numberProps && this._numberProps[camelKey]) {\n      value = toNumber(value);\n    }\n    this._setProp(camelKey, value, false);\n  }\n  /**\n   * @internal\n   */\n  _getProp(key) {\n    return this._props[key];\n  }\n  /**\n   * @internal\n   */\n  _setProp(key, val, shouldReflect = true, shouldUpdate = true) {\n    if (val !== this._props[key]) {\n      this._props[key] = val;\n      if (shouldUpdate && this._instance) {\n        this._update();\n      }\n      if (shouldReflect) {\n        if (val === true) {\n          this.setAttribute(hyphenate(key), \"\");\n        } else if (typeof val === \"string\" || typeof val === \"number\") {\n          this.setAttribute(hyphenate(key), val + \"\");\n        } else if (!val) {\n          this.removeAttribute(hyphenate(key));\n        }\n      }\n    }\n  }\n  _update() {\n    render(this._createVNode(), this.shadowRoot);\n  }\n  _createVNode() {\n    const vnode = createVNode(this._def, extend({}, this._props));\n    if (!this._instance) {\n      vnode.ce = (instance) => {\n        this._instance = instance;\n        instance.isCE = true;\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          instance.ceReload = (newStyles) => {\n            if (this._styles) {\n              this._styles.forEach((s) => this.shadowRoot.removeChild(s));\n              this._styles.length = 0;\n            }\n            this._applyStyles(newStyles);\n            this._instance = null;\n            this._update();\n          };\n        }\n        const dispatch = (event, args) => {\n          this.dispatchEvent(\n            new CustomEvent(event, {\n              detail: args\n            })\n          );\n        };\n        instance.emit = (event, ...args) => {\n          dispatch(event, args);\n          if (hyphenate(event) !== event) {\n            dispatch(hyphenate(event), args);\n          }\n        };\n        let parent = this;\n        while (parent = parent && (parent.parentNode || parent.host)) {\n          if (parent instanceof VueElement) {\n            instance.parent = parent._instance;\n            instance.provides = parent._instance.provides;\n            break;\n          }\n        }\n      };\n    }\n    return vnode;\n  }\n  _applyStyles(styles) {\n    if (styles) {\n      styles.forEach((css) => {\n        const s = document.createElement(\"style\");\n        s.textContent = css;\n        this.shadowRoot.appendChild(s);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          (this._styles || (this._styles = [])).push(s);\n        }\n      });\n    }\n  }\n}\n\nfunction useCssModule(name = \"$style\") {\n  {\n    const instance = getCurrentInstance();\n    if (!instance) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(`useCssModule must be called inside setup()`);\n      return EMPTY_OBJ;\n    }\n    const modules = instance.type.__cssModules;\n    if (!modules) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(`Current instance does not have CSS modules injected.`);\n      return EMPTY_OBJ;\n    }\n    const mod = modules[name];\n    if (!mod) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(`Current instance does not have CSS module named \"${name}\".`);\n      return EMPTY_OBJ;\n    }\n    return mod;\n  }\n}\n\nfunction useCssVars(getter) {\n  const instance = getCurrentInstance();\n  if (!instance) {\n    !!(process.env.NODE_ENV !== \"production\") && warn(`useCssVars is called without current active component instance.`);\n    return;\n  }\n  const updateTeleports = instance.ut = (vars = getter(instance.proxy)) => {\n    Array.from(\n      document.querySelectorAll(`[data-v-owner=\"${instance.uid}\"]`)\n    ).forEach((node) => setVarsOnNode(node, vars));\n  };\n  const setVars = () => {\n    const vars = getter(instance.proxy);\n    setVarsOnVNode(instance.subTree, vars);\n    updateTeleports(vars);\n  };\n  watchPostEffect(setVars);\n  onMounted(() => {\n    const ob = new MutationObserver(setVars);\n    ob.observe(instance.subTree.el.parentNode, { childList: true });\n    onUnmounted(() => ob.disconnect());\n  });\n}\nfunction setVarsOnVNode(vnode, vars) {\n  if (vnode.shapeFlag & 128) {\n    const suspense = vnode.suspense;\n    vnode = suspense.activeBranch;\n    if (suspense.pendingBranch && !suspense.isHydrating) {\n      suspense.effects.push(() => {\n        setVarsOnVNode(suspense.activeBranch, vars);\n      });\n    }\n  }\n  while (vnode.component) {\n    vnode = vnode.component.subTree;\n  }\n  if (vnode.shapeFlag & 1 && vnode.el) {\n    setVarsOnNode(vnode.el, vars);\n  } else if (vnode.type === Fragment) {\n    vnode.children.forEach((c) => setVarsOnVNode(c, vars));\n  } else if (vnode.type === Static) {\n    let { el, anchor } = vnode;\n    while (el) {\n      setVarsOnNode(el, vars);\n      if (el === anchor)\n        break;\n      el = el.nextSibling;\n    }\n  }\n}\nfunction setVarsOnNode(el, vars) {\n  if (el.nodeType === 1) {\n    const style = el.style;\n    for (const key in vars) {\n      style.setProperty(`--${key}`, vars[key]);\n    }\n  }\n}\n\nconst TRANSITION = \"transition\";\nconst ANIMATION = \"animation\";\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\nTransition.displayName = \"Transition\";\nconst DOMTransitionPropsValidators = {\n  name: String,\n  type: String,\n  css: {\n    type: Boolean,\n    default: true\n  },\n  duration: [String, Number, Object],\n  enterFromClass: String,\n  enterActiveClass: String,\n  enterToClass: String,\n  appearFromClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  leaveFromClass: String,\n  leaveActiveClass: String,\n  leaveToClass: String\n};\nconst TransitionPropsValidators = Transition.props = /* @__PURE__ */ extend(\n  {},\n  BaseTransitionPropsValidators,\n  DOMTransitionPropsValidators\n);\nconst callHook = (hook, args = []) => {\n  if (isArray(hook)) {\n    hook.forEach((h2) => h2(...args));\n  } else if (hook) {\n    hook(...args);\n  }\n};\nconst hasExplicitCallback = (hook) => {\n  return hook ? isArray(hook) ? hook.some((h2) => h2.length > 1) : hook.length > 1 : false;\n};\nfunction resolveTransitionProps(rawProps) {\n  const baseProps = {};\n  for (const key in rawProps) {\n    if (!(key in DOMTransitionPropsValidators)) {\n      baseProps[key] = rawProps[key];\n    }\n  }\n  if (rawProps.css === false) {\n    return baseProps;\n  }\n  const {\n    name = \"v\",\n    type,\n    duration,\n    enterFromClass = `${name}-enter-from`,\n    enterActiveClass = `${name}-enter-active`,\n    enterToClass = `${name}-enter-to`,\n    appearFromClass = enterFromClass,\n    appearActiveClass = enterActiveClass,\n    appearToClass = enterToClass,\n    leaveFromClass = `${name}-leave-from`,\n    leaveActiveClass = `${name}-leave-active`,\n    leaveToClass = `${name}-leave-to`\n  } = rawProps;\n  const durations = normalizeDuration(duration);\n  const enterDuration = durations && durations[0];\n  const leaveDuration = durations && durations[1];\n  const {\n    onBeforeEnter,\n    onEnter,\n    onEnterCancelled,\n    onLeave,\n    onLeaveCancelled,\n    onBeforeAppear = onBeforeEnter,\n    onAppear = onEnter,\n    onAppearCancelled = onEnterCancelled\n  } = baseProps;\n  const finishEnter = (el, isAppear, done) => {\n    removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\n    removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\n    done && done();\n  };\n  const finishLeave = (el, done) => {\n    el._isLeaving = false;\n    removeTransitionClass(el, leaveFromClass);\n    removeTransitionClass(el, leaveToClass);\n    removeTransitionClass(el, leaveActiveClass);\n    done && done();\n  };\n  const makeEnterHook = (isAppear) => {\n    return (el, done) => {\n      const hook = isAppear ? onAppear : onEnter;\n      const resolve = () => finishEnter(el, isAppear, done);\n      callHook(hook, [el, resolve]);\n      nextFrame(() => {\n        removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\n        addTransitionClass(el, isAppear ? appearToClass : enterToClass);\n        if (!hasExplicitCallback(hook)) {\n          whenTransitionEnds(el, type, enterDuration, resolve);\n        }\n      });\n    };\n  };\n  return extend(baseProps, {\n    onBeforeEnter(el) {\n      callHook(onBeforeEnter, [el]);\n      addTransitionClass(el, enterFromClass);\n      addTransitionClass(el, enterActiveClass);\n    },\n    onBeforeAppear(el) {\n      callHook(onBeforeAppear, [el]);\n      addTransitionClass(el, appearFromClass);\n      addTransitionClass(el, appearActiveClass);\n    },\n    onEnter: makeEnterHook(false),\n    onAppear: makeEnterHook(true),\n    onLeave(el, done) {\n      el._isLeaving = true;\n      const resolve = () => finishLeave(el, done);\n      addTransitionClass(el, leaveFromClass);\n      forceReflow();\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(() => {\n        if (!el._isLeaving) {\n          return;\n        }\n        removeTransitionClass(el, leaveFromClass);\n        addTransitionClass(el, leaveToClass);\n        if (!hasExplicitCallback(onLeave)) {\n          whenTransitionEnds(el, type, leaveDuration, resolve);\n        }\n      });\n      callHook(onLeave, [el, resolve]);\n    },\n    onEnterCancelled(el) {\n      finishEnter(el, false);\n      callHook(onEnterCancelled, [el]);\n    },\n    onAppearCancelled(el) {\n      finishEnter(el, true);\n      callHook(onAppearCancelled, [el]);\n    },\n    onLeaveCancelled(el) {\n      finishLeave(el);\n      callHook(onLeaveCancelled, [el]);\n    }\n  });\n}\nfunction normalizeDuration(duration) {\n  if (duration == null) {\n    return null;\n  } else if (isObject(duration)) {\n    return [NumberOf(duration.enter), NumberOf(duration.leave)];\n  } else {\n    const n = NumberOf(duration);\n    return [n, n];\n  }\n}\nfunction NumberOf(val) {\n  const res = toNumber(val);\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    assertNumber(res, \"<transition> explicit duration\");\n  }\n  return res;\n}\nfunction addTransitionClass(el, cls) {\n  cls.split(/\\s+/).forEach((c) => c && el.classList.add(c));\n  (el._vtc || (el._vtc = /* @__PURE__ */ new Set())).add(cls);\n}\nfunction removeTransitionClass(el, cls) {\n  cls.split(/\\s+/).forEach((c) => c && el.classList.remove(c));\n  const { _vtc } = el;\n  if (_vtc) {\n    _vtc.delete(cls);\n    if (!_vtc.size) {\n      el._vtc = void 0;\n    }\n  }\n}\nfunction nextFrame(cb) {\n  requestAnimationFrame(() => {\n    requestAnimationFrame(cb);\n  });\n}\nlet endId = 0;\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\n  const id = el._endId = ++endId;\n  const resolveIfNotStale = () => {\n    if (id === el._endId) {\n      resolve();\n    }\n  };\n  if (explicitTimeout) {\n    return setTimeout(resolveIfNotStale, explicitTimeout);\n  }\n  const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\n  if (!type) {\n    return resolve();\n  }\n  const endEvent = type + \"end\";\n  let ended = 0;\n  const end = () => {\n    el.removeEventListener(endEvent, onEnd);\n    resolveIfNotStale();\n  };\n  const onEnd = (e) => {\n    if (e.target === el && ++ended >= propCount) {\n      end();\n    }\n  };\n  setTimeout(() => {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(endEvent, onEnd);\n}\nfunction getTransitionInfo(el, expectedType) {\n  const styles = window.getComputedStyle(el);\n  const getStyleProperties = (key) => (styles[key] || \"\").split(\", \");\n  const transitionDelays = getStyleProperties(`${TRANSITION}Delay`);\n  const transitionDurations = getStyleProperties(`${TRANSITION}Duration`);\n  const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  const animationDelays = getStyleProperties(`${ANIMATION}Delay`);\n  const animationDurations = getStyleProperties(`${ANIMATION}Duration`);\n  const animationTimeout = getTimeout(animationDelays, animationDurations);\n  let type = null;\n  let timeout = 0;\n  let propCount = 0;\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;\n    propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;\n  }\n  const hasTransform = type === TRANSITION && /\\b(transform|all)(,|$)/.test(\n    getStyleProperties(`${TRANSITION}Property`).toString()\n  );\n  return {\n    type,\n    timeout,\n    propCount,\n    hasTransform\n  };\n}\nfunction getTimeout(delays, durations) {\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n  return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\n}\nfunction toMs(s) {\n  return Number(s.slice(0, -1).replace(\",\", \".\")) * 1e3;\n}\nfunction forceReflow() {\n  return document.body.offsetHeight;\n}\n\nconst positionMap = /* @__PURE__ */ new WeakMap();\nconst newPositionMap = /* @__PURE__ */ new WeakMap();\nconst TransitionGroupImpl = {\n  name: \"TransitionGroup\",\n  props: /* @__PURE__ */ extend({}, TransitionPropsValidators, {\n    tag: String,\n    moveClass: String\n  }),\n  setup(props, { slots }) {\n    const instance = getCurrentInstance();\n    const state = useTransitionState();\n    let prevChildren;\n    let children;\n    onUpdated(() => {\n      if (!prevChildren.length) {\n        return;\n      }\n      const moveClass = props.moveClass || `${props.name || \"v\"}-move`;\n      if (!hasCSSTransform(\n        prevChildren[0].el,\n        instance.vnode.el,\n        moveClass\n      )) {\n        return;\n      }\n      prevChildren.forEach(callPendingCbs);\n      prevChildren.forEach(recordPosition);\n      const movedChildren = prevChildren.filter(applyTranslation);\n      forceReflow();\n      movedChildren.forEach((c) => {\n        const el = c.el;\n        const style = el.style;\n        addTransitionClass(el, moveClass);\n        style.transform = style.webkitTransform = style.transitionDuration = \"\";\n        const cb = el._moveCb = (e) => {\n          if (e && e.target !== el) {\n            return;\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(\"transitionend\", cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        };\n        el.addEventListener(\"transitionend\", cb);\n      });\n    });\n    return () => {\n      const rawProps = toRaw(props);\n      const cssTransitionProps = resolveTransitionProps(rawProps);\n      let tag = rawProps.tag || Fragment;\n      prevChildren = children;\n      children = slots.default ? getTransitionRawChildren(slots.default()) : [];\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (child.key != null) {\n          setTransitionHooks(\n            child,\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\n          );\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(`<TransitionGroup> children must be keyed.`);\n        }\n      }\n      if (prevChildren) {\n        for (let i = 0; i < prevChildren.length; i++) {\n          const child = prevChildren[i];\n          setTransitionHooks(\n            child,\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\n          );\n          positionMap.set(child, child.el.getBoundingClientRect());\n        }\n      }\n      return createVNode(tag, null, children);\n    };\n  }\n};\nconst removeMode = (props) => delete props.mode;\n/* @__PURE__ */ removeMode(TransitionGroupImpl.props);\nconst TransitionGroup = TransitionGroupImpl;\nfunction callPendingCbs(c) {\n  const el = c.el;\n  if (el._moveCb) {\n    el._moveCb();\n  }\n  if (el._enterCb) {\n    el._enterCb();\n  }\n}\nfunction recordPosition(c) {\n  newPositionMap.set(c, c.el.getBoundingClientRect());\n}\nfunction applyTranslation(c) {\n  const oldPos = positionMap.get(c);\n  const newPos = newPositionMap.get(c);\n  const dx = oldPos.left - newPos.left;\n  const dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    const s = c.el.style;\n    s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\n    s.transitionDuration = \"0s\";\n    return c;\n  }\n}\nfunction hasCSSTransform(el, root, moveClass) {\n  const clone = el.cloneNode();\n  if (el._vtc) {\n    el._vtc.forEach((cls) => {\n      cls.split(/\\s+/).forEach((c) => c && clone.classList.remove(c));\n    });\n  }\n  moveClass.split(/\\s+/).forEach((c) => c && clone.classList.add(c));\n  clone.style.display = \"none\";\n  const container = root.nodeType === 1 ? root : root.parentNode;\n  container.appendChild(clone);\n  const { hasTransform } = getTransitionInfo(clone);\n  container.removeChild(clone);\n  return hasTransform;\n}\n\nconst getModelAssigner = (vnode) => {\n  const fn = vnode.props[\"onUpdate:modelValue\"] || false;\n  return isArray(fn) ? (value) => invokeArrayFns(fn, value) : fn;\n};\nfunction onCompositionStart(e) {\n  e.target.composing = true;\n}\nfunction onCompositionEnd(e) {\n  const target = e.target;\n  if (target.composing) {\n    target.composing = false;\n    target.dispatchEvent(new Event(\"input\"));\n  }\n}\nconst vModelText = {\n  created(el, { modifiers: { lazy, trim, number } }, vnode) {\n    el._assign = getModelAssigner(vnode);\n    const castToNumber = number || vnode.props && vnode.props.type === \"number\";\n    addEventListener(el, lazy ? \"change\" : \"input\", (e) => {\n      if (e.target.composing)\n        return;\n      let domValue = el.value;\n      if (trim) {\n        domValue = domValue.trim();\n      }\n      if (castToNumber) {\n        domValue = looseToNumber(domValue);\n      }\n      el._assign(domValue);\n    });\n    if (trim) {\n      addEventListener(el, \"change\", () => {\n        el.value = el.value.trim();\n      });\n    }\n    if (!lazy) {\n      addEventListener(el, \"compositionstart\", onCompositionStart);\n      addEventListener(el, \"compositionend\", onCompositionEnd);\n      addEventListener(el, \"change\", onCompositionEnd);\n    }\n  },\n  // set value on mounted so it's after min/max for type=\"range\"\n  mounted(el, { value }) {\n    el.value = value == null ? \"\" : value;\n  },\n  beforeUpdate(el, { value, modifiers: { lazy, trim, number } }, vnode) {\n    el._assign = getModelAssigner(vnode);\n    if (el.composing)\n      return;\n    if (document.activeElement === el && el.type !== \"range\") {\n      if (lazy) {\n        return;\n      }\n      if (trim && el.value.trim() === value) {\n        return;\n      }\n      if ((number || el.type === \"number\") && looseToNumber(el.value) === value) {\n        return;\n      }\n    }\n    const newValue = value == null ? \"\" : value;\n    if (el.value !== newValue) {\n      el.value = newValue;\n    }\n  }\n};\nconst vModelCheckbox = {\n  // #4096 array checkboxes need to be deep traversed\n  deep: true,\n  created(el, _, vnode) {\n    el._assign = getModelAssigner(vnode);\n    addEventListener(el, \"change\", () => {\n      const modelValue = el._modelValue;\n      const elementValue = getValue(el);\n      const checked = el.checked;\n      const assign = el._assign;\n      if (isArray(modelValue)) {\n        const index = looseIndexOf(modelValue, elementValue);\n        const found = index !== -1;\n        if (checked && !found) {\n          assign(modelValue.concat(elementValue));\n        } else if (!checked && found) {\n          const filtered = [...modelValue];\n          filtered.splice(index, 1);\n          assign(filtered);\n        }\n      } else if (isSet(modelValue)) {\n        const cloned = new Set(modelValue);\n        if (checked) {\n          cloned.add(elementValue);\n        } else {\n          cloned.delete(elementValue);\n        }\n        assign(cloned);\n      } else {\n        assign(getCheckboxValue(el, checked));\n      }\n    });\n  },\n  // set initial checked on mount to wait for true-value/false-value\n  mounted: setChecked,\n  beforeUpdate(el, binding, vnode) {\n    el._assign = getModelAssigner(vnode);\n    setChecked(el, binding, vnode);\n  }\n};\nfunction setChecked(el, { value, oldValue }, vnode) {\n  el._modelValue = value;\n  if (isArray(value)) {\n    el.checked = looseIndexOf(value, vnode.props.value) > -1;\n  } else if (isSet(value)) {\n    el.checked = value.has(vnode.props.value);\n  } else if (value !== oldValue) {\n    el.checked = looseEqual(value, getCheckboxValue(el, true));\n  }\n}\nconst vModelRadio = {\n  created(el, { value }, vnode) {\n    el.checked = looseEqual(value, vnode.props.value);\n    el._assign = getModelAssigner(vnode);\n    addEventListener(el, \"change\", () => {\n      el._assign(getValue(el));\n    });\n  },\n  beforeUpdate(el, { value, oldValue }, vnode) {\n    el._assign = getModelAssigner(vnode);\n    if (value !== oldValue) {\n      el.checked = looseEqual(value, vnode.props.value);\n    }\n  }\n};\nconst vModelSelect = {\n  // <select multiple> value need to be deep traversed\n  deep: true,\n  created(el, { value, modifiers: { number } }, vnode) {\n    const isSetModel = isSet(value);\n    addEventListener(el, \"change\", () => {\n      const selectedVal = Array.prototype.filter.call(el.options, (o) => o.selected).map(\n        (o) => number ? looseToNumber(getValue(o)) : getValue(o)\n      );\n      el._assign(\n        el.multiple ? isSetModel ? new Set(selectedVal) : selectedVal : selectedVal[0]\n      );\n    });\n    el._assign = getModelAssigner(vnode);\n  },\n  // set value in mounted & updated because <select> relies on its children\n  // <option>s.\n  mounted(el, { value }) {\n    setSelected(el, value);\n  },\n  beforeUpdate(el, _binding, vnode) {\n    el._assign = getModelAssigner(vnode);\n  },\n  updated(el, { value }) {\n    setSelected(el, value);\n  }\n};\nfunction setSelected(el, value) {\n  const isMultiple = el.multiple;\n  if (isMultiple && !isArray(value) && !isSet(value)) {\n    !!(process.env.NODE_ENV !== \"production\") && warn(\n      `<select multiple v-model> expects an Array or Set value for its binding, but got ${Object.prototype.toString.call(value).slice(8, -1)}.`\n    );\n    return;\n  }\n  for (let i = 0, l = el.options.length; i < l; i++) {\n    const option = el.options[i];\n    const optionValue = getValue(option);\n    if (isMultiple) {\n      if (isArray(value)) {\n        option.selected = looseIndexOf(value, optionValue) > -1;\n      } else {\n        option.selected = value.has(optionValue);\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i)\n          el.selectedIndex = i;\n        return;\n      }\n    }\n  }\n  if (!isMultiple && el.selectedIndex !== -1) {\n    el.selectedIndex = -1;\n  }\n}\nfunction getValue(el) {\n  return \"_value\" in el ? el._value : el.value;\n}\nfunction getCheckboxValue(el, checked) {\n  const key = checked ? \"_trueValue\" : \"_falseValue\";\n  return key in el ? el[key] : checked;\n}\nconst vModelDynamic = {\n  created(el, binding, vnode) {\n    callModelHook(el, binding, vnode, null, \"created\");\n  },\n  mounted(el, binding, vnode) {\n    callModelHook(el, binding, vnode, null, \"mounted\");\n  },\n  beforeUpdate(el, binding, vnode, prevVNode) {\n    callModelHook(el, binding, vnode, prevVNode, \"beforeUpdate\");\n  },\n  updated(el, binding, vnode, prevVNode) {\n    callModelHook(el, binding, vnode, prevVNode, \"updated\");\n  }\n};\nfunction resolveDynamicModel(tagName, type) {\n  switch (tagName) {\n    case \"SELECT\":\n      return vModelSelect;\n    case \"TEXTAREA\":\n      return vModelText;\n    default:\n      switch (type) {\n        case \"checkbox\":\n          return vModelCheckbox;\n        case \"radio\":\n          return vModelRadio;\n        default:\n          return vModelText;\n      }\n  }\n}\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\n  const modelToUse = resolveDynamicModel(\n    el.tagName,\n    vnode.props && vnode.props.type\n  );\n  const fn = modelToUse[hook];\n  fn && fn(el, binding, vnode, prevVNode);\n}\nfunction initVModelForSSR() {\n  vModelText.getSSRProps = ({ value }) => ({ value });\n  vModelRadio.getSSRProps = ({ value }, vnode) => {\n    if (vnode.props && looseEqual(vnode.props.value, value)) {\n      return { checked: true };\n    }\n  };\n  vModelCheckbox.getSSRProps = ({ value }, vnode) => {\n    if (isArray(value)) {\n      if (vnode.props && looseIndexOf(value, vnode.props.value) > -1) {\n        return { checked: true };\n      }\n    } else if (isSet(value)) {\n      if (vnode.props && value.has(vnode.props.value)) {\n        return { checked: true };\n      }\n    } else if (value) {\n      return { checked: true };\n    }\n  };\n  vModelDynamic.getSSRProps = (binding, vnode) => {\n    if (typeof vnode.type !== \"string\") {\n      return;\n    }\n    const modelToUse = resolveDynamicModel(\n      // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase\n      vnode.type.toUpperCase(),\n      vnode.props && vnode.props.type\n    );\n    if (modelToUse.getSSRProps) {\n      return modelToUse.getSSRProps(binding, vnode);\n    }\n  };\n}\n\nconst systemModifiers = [\"ctrl\", \"shift\", \"alt\", \"meta\"];\nconst modifierGuards = {\n  stop: (e) => e.stopPropagation(),\n  prevent: (e) => e.preventDefault(),\n  self: (e) => e.target !== e.currentTarget,\n  ctrl: (e) => !e.ctrlKey,\n  shift: (e) => !e.shiftKey,\n  alt: (e) => !e.altKey,\n  meta: (e) => !e.metaKey,\n  left: (e) => \"button\" in e && e.button !== 0,\n  middle: (e) => \"button\" in e && e.button !== 1,\n  right: (e) => \"button\" in e && e.button !== 2,\n  exact: (e, modifiers) => systemModifiers.some((m) => e[`${m}Key`] && !modifiers.includes(m))\n};\nconst withModifiers = (fn, modifiers) => {\n  return (event, ...args) => {\n    for (let i = 0; i < modifiers.length; i++) {\n      const guard = modifierGuards[modifiers[i]];\n      if (guard && guard(event, modifiers))\n        return;\n    }\n    return fn(event, ...args);\n  };\n};\nconst keyNames = {\n  esc: \"escape\",\n  space: \" \",\n  up: \"arrow-up\",\n  left: \"arrow-left\",\n  right: \"arrow-right\",\n  down: \"arrow-down\",\n  delete: \"backspace\"\n};\nconst withKeys = (fn, modifiers) => {\n  return (event) => {\n    if (!(\"key\" in event)) {\n      return;\n    }\n    const eventKey = hyphenate(event.key);\n    if (modifiers.some((k) => k === eventKey || keyNames[k] === eventKey)) {\n      return fn(event);\n    }\n  };\n};\n\nconst vShow = {\n  beforeMount(el, { value }, { transition }) {\n    el._vod = el.style.display === \"none\" ? \"\" : el.style.display;\n    if (transition && value) {\n      transition.beforeEnter(el);\n    } else {\n      setDisplay(el, value);\n    }\n  },\n  mounted(el, { value }, { transition }) {\n    if (transition && value) {\n      transition.enter(el);\n    }\n  },\n  updated(el, { value, oldValue }, { transition }) {\n    if (!value === !oldValue)\n      return;\n    if (transition) {\n      if (value) {\n        transition.beforeEnter(el);\n        setDisplay(el, true);\n        transition.enter(el);\n      } else {\n        transition.leave(el, () => {\n          setDisplay(el, false);\n        });\n      }\n    } else {\n      setDisplay(el, value);\n    }\n  },\n  beforeUnmount(el, { value }) {\n    setDisplay(el, value);\n  }\n};\nfunction setDisplay(el, value) {\n  el.style.display = value ? el._vod : \"none\";\n}\nfunction initVShowForSSR() {\n  vShow.getSSRProps = ({ value }) => {\n    if (!value) {\n      return { style: { display: \"none\" } };\n    }\n  };\n}\n\nconst rendererOptions = /* @__PURE__ */ extend({ patchProp }, nodeOps);\nlet renderer;\nlet enabledHydration = false;\nfunction ensureRenderer() {\n  return renderer || (renderer = createRenderer(rendererOptions));\n}\nfunction ensureHydrationRenderer() {\n  renderer = enabledHydration ? renderer : createHydrationRenderer(rendererOptions);\n  enabledHydration = true;\n  return renderer;\n}\nconst render = (...args) => {\n  ensureRenderer().render(...args);\n};\nconst hydrate = (...args) => {\n  ensureHydrationRenderer().hydrate(...args);\n};\nconst createApp = (...args) => {\n  const app = ensureRenderer().createApp(...args);\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    injectNativeTagCheck(app);\n    injectCompilerOptionsCheck(app);\n  }\n  const { mount } = app;\n  app.mount = (containerOrSelector) => {\n    const container = normalizeContainer(containerOrSelector);\n    if (!container)\n      return;\n    const component = app._component;\n    if (!isFunction(component) && !component.render && !component.template) {\n      component.template = container.innerHTML;\n    }\n    container.innerHTML = \"\";\n    const proxy = mount(container, false, container instanceof SVGElement);\n    if (container instanceof Element) {\n      container.removeAttribute(\"v-cloak\");\n      container.setAttribute(\"data-v-app\", \"\");\n    }\n    return proxy;\n  };\n  return app;\n};\nconst createSSRApp = (...args) => {\n  const app = ensureHydrationRenderer().createApp(...args);\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    injectNativeTagCheck(app);\n    injectCompilerOptionsCheck(app);\n  }\n  const { mount } = app;\n  app.mount = (containerOrSelector) => {\n    const container = normalizeContainer(containerOrSelector);\n    if (container) {\n      return mount(container, true, container instanceof SVGElement);\n    }\n  };\n  return app;\n};\nfunction injectNativeTagCheck(app) {\n  Object.defineProperty(app.config, \"isNativeTag\", {\n    value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\n    writable: false\n  });\n}\nfunction injectCompilerOptionsCheck(app) {\n  if (isRuntimeOnly()) {\n    const isCustomElement = app.config.isCustomElement;\n    Object.defineProperty(app.config, \"isCustomElement\", {\n      get() {\n        return isCustomElement;\n      },\n      set() {\n        warn(\n          `The \\`isCustomElement\\` config option is deprecated. Use \\`compilerOptions.isCustomElement\\` instead.`\n        );\n      }\n    });\n    const compilerOptions = app.config.compilerOptions;\n    const msg = `The \\`compilerOptions\\` config option is only respected when using a build of Vue.js that includes the runtime compiler (aka \"full build\"). Since you are using the runtime-only build, \\`compilerOptions\\` must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\n- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\n- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\n- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite-plugin-vue/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-sfc`;\n    Object.defineProperty(app.config, \"compilerOptions\", {\n      get() {\n        warn(msg);\n        return compilerOptions;\n      },\n      set() {\n        warn(msg);\n      }\n    });\n  }\n}\nfunction normalizeContainer(container) {\n  if (isString(container)) {\n    const res = document.querySelector(container);\n    if (!!(process.env.NODE_ENV !== \"production\") && !res) {\n      warn(\n        `Failed to mount app: mount target selector \"${container}\" returned null.`\n      );\n    }\n    return res;\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && window.ShadowRoot && container instanceof window.ShadowRoot && container.mode === \"closed\") {\n    warn(\n      `mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`\n    );\n  }\n  return container;\n}\nlet ssrDirectiveInitialized = false;\nconst initDirectivesForSSR = () => {\n  if (!ssrDirectiveInitialized) {\n    ssrDirectiveInitialized = true;\n    initVModelForSSR();\n    initVShowForSSR();\n  }\n} ;\n\nexport { Transition, TransitionGroup, VueElement, createApp, createSSRApp, defineCustomElement, defineSSRCustomElement, hydrate, initDirectivesForSSR, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","function makeMap(str, expectsLowerCase) {\n  const map = /* @__PURE__ */ Object.create(null);\n  const list = str.split(\",\");\n  for (let i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase ? (val) => !!map[val.toLowerCase()] : (val) => !!map[val];\n}\n\nconst EMPTY_OBJ = !!(process.env.NODE_ENV !== \"production\") ? Object.freeze({}) : {};\nconst EMPTY_ARR = !!(process.env.NODE_ENV !== \"production\") ? Object.freeze([]) : [];\nconst NOOP = () => {\n};\nconst NO = () => false;\nconst onRE = /^on[^a-z]/;\nconst isOn = (key) => onRE.test(key);\nconst isModelListener = (key) => key.startsWith(\"onUpdate:\");\nconst extend = Object.assign;\nconst remove = (arr, el) => {\n  const i = arr.indexOf(el);\n  if (i > -1) {\n    arr.splice(i, 1);\n  }\n};\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\nconst isArray = Array.isArray;\nconst isMap = (val) => toTypeString(val) === \"[object Map]\";\nconst isSet = (val) => toTypeString(val) === \"[object Set]\";\nconst isDate = (val) => toTypeString(val) === \"[object Date]\";\nconst isRegExp = (val) => toTypeString(val) === \"[object RegExp]\";\nconst isFunction = (val) => typeof val === \"function\";\nconst isString = (val) => typeof val === \"string\";\nconst isSymbol = (val) => typeof val === \"symbol\";\nconst isObject = (val) => val !== null && typeof val === \"object\";\nconst isPromise = (val) => {\n  return isObject(val) && isFunction(val.then) && isFunction(val.catch);\n};\nconst objectToString = Object.prototype.toString;\nconst toTypeString = (value) => objectToString.call(value);\nconst toRawType = (value) => {\n  return toTypeString(value).slice(8, -1);\n};\nconst isPlainObject = (val) => toTypeString(val) === \"[object Object]\";\nconst isIntegerKey = (key) => isString(key) && key !== \"NaN\" && key[0] !== \"-\" && \"\" + parseInt(key, 10) === key;\nconst isReservedProp = /* @__PURE__ */ makeMap(\n  // the leading comma is intentional so empty string \"\" is also included\n  \",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted\"\n);\nconst isBuiltInDirective = /* @__PURE__ */ makeMap(\n  \"bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo\"\n);\nconst cacheStringFunction = (fn) => {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (str) => {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n};\nconst camelizeRE = /-(\\w)/g;\nconst camelize = cacheStringFunction((str) => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\");\n});\nconst hyphenateRE = /\\B([A-Z])/g;\nconst hyphenate = cacheStringFunction(\n  (str) => str.replace(hyphenateRE, \"-$1\").toLowerCase()\n);\nconst capitalize = cacheStringFunction(\n  (str) => str.charAt(0).toUpperCase() + str.slice(1)\n);\nconst toHandlerKey = cacheStringFunction(\n  (str) => str ? `on${capitalize(str)}` : ``\n);\nconst hasChanged = (value, oldValue) => !Object.is(value, oldValue);\nconst invokeArrayFns = (fns, arg) => {\n  for (let i = 0; i < fns.length; i++) {\n    fns[i](arg);\n  }\n};\nconst def = (obj, key, value) => {\n  Object.defineProperty(obj, key, {\n    configurable: true,\n    enumerable: false,\n    value\n  });\n};\nconst looseToNumber = (val) => {\n  const n = parseFloat(val);\n  return isNaN(n) ? val : n;\n};\nconst toNumber = (val) => {\n  const n = isString(val) ? Number(val) : NaN;\n  return isNaN(n) ? val : n;\n};\nlet _globalThis;\nconst getGlobalThis = () => {\n  return _globalThis || (_globalThis = typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n};\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/;\nfunction genPropsAccessExp(name) {\n  return identRE.test(name) ? `__props.${name}` : `__props[${JSON.stringify(name)}]`;\n}\n\nconst PatchFlagNames = {\n  [1]: `TEXT`,\n  [2]: `CLASS`,\n  [4]: `STYLE`,\n  [8]: `PROPS`,\n  [16]: `FULL_PROPS`,\n  [32]: `HYDRATE_EVENTS`,\n  [64]: `STABLE_FRAGMENT`,\n  [128]: `KEYED_FRAGMENT`,\n  [256]: `UNKEYED_FRAGMENT`,\n  [512]: `NEED_PATCH`,\n  [1024]: `DYNAMIC_SLOTS`,\n  [2048]: `DEV_ROOT_FRAGMENT`,\n  [-1]: `HOISTED`,\n  [-2]: `BAIL`\n};\n\nconst slotFlagsText = {\n  [1]: \"STABLE\",\n  [2]: \"DYNAMIC\",\n  [3]: \"FORWARDED\"\n};\n\nconst GLOBALS_WHITE_LISTED = \"Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console\";\nconst isGloballyWhitelisted = /* @__PURE__ */ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\nfunction generateCodeFrame(source, start = 0, end = source.length) {\n  let lines = source.split(/(\\r?\\n)/);\n  const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\n  lines = lines.filter((_, idx) => idx % 2 === 0);\n  let count = 0;\n  const res = [];\n  for (let i = 0; i < lines.length; i++) {\n    count += lines[i].length + (newlineSequences[i] && newlineSequences[i].length || 0);\n    if (count >= start) {\n      for (let j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length)\n          continue;\n        const line = j + 1;\n        res.push(\n          `${line}${\" \".repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`\n        );\n        const lineLength = lines[j].length;\n        const newLineSeqLength = newlineSequences[j] && newlineSequences[j].length || 0;\n        if (j === i) {\n          const pad = start - (count - (lineLength + newLineSeqLength));\n          const length = Math.max(\n            1,\n            end > count ? lineLength - pad : end - start\n          );\n          res.push(`   |  ` + \" \".repeat(pad) + \"^\".repeat(length));\n        } else if (j > i) {\n          if (end > count) {\n            const length = Math.max(Math.min(end - count, lineLength), 1);\n            res.push(`   |  ` + \"^\".repeat(length));\n          }\n          count += lineLength + newLineSeqLength;\n        }\n      }\n      break;\n    }\n  }\n  return res.join(\"\\n\");\n}\n\nfunction normalizeStyle(value) {\n  if (isArray(value)) {\n    const res = {};\n    for (let i = 0; i < value.length; i++) {\n      const item = value[i];\n      const normalized = isString(item) ? parseStringStyle(item) : normalizeStyle(item);\n      if (normalized) {\n        for (const key in normalized) {\n          res[key] = normalized[key];\n        }\n      }\n    }\n    return res;\n  } else if (isString(value)) {\n    return value;\n  } else if (isObject(value)) {\n    return value;\n  }\n}\nconst listDelimiterRE = /;(?![^(]*\\))/g;\nconst propertyDelimiterRE = /:([^]+)/;\nconst styleCommentRE = /\\/\\*[^]*?\\*\\//g;\nfunction parseStringStyle(cssText) {\n  const ret = {};\n  cssText.replace(styleCommentRE, \"\").split(listDelimiterRE).forEach((item) => {\n    if (item) {\n      const tmp = item.split(propertyDelimiterRE);\n      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return ret;\n}\nfunction stringifyStyle(styles) {\n  let ret = \"\";\n  if (!styles || isString(styles)) {\n    return ret;\n  }\n  for (const key in styles) {\n    const value = styles[key];\n    const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\n    if (isString(value) || typeof value === \"number\") {\n      ret += `${normalizedKey}:${value};`;\n    }\n  }\n  return ret;\n}\nfunction normalizeClass(value) {\n  let res = \"\";\n  if (isString(value)) {\n    res = value;\n  } else if (isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      const normalized = normalizeClass(value[i]);\n      if (normalized) {\n        res += normalized + \" \";\n      }\n    }\n  } else if (isObject(value)) {\n    for (const name in value) {\n      if (value[name]) {\n        res += name + \" \";\n      }\n    }\n  }\n  return res.trim();\n}\nfunction normalizeProps(props) {\n  if (!props)\n    return null;\n  let { class: klass, style } = props;\n  if (klass && !isString(klass)) {\n    props.class = normalizeClass(klass);\n  }\n  if (style) {\n    props.style = normalizeStyle(style);\n  }\n  return props;\n}\n\nconst HTML_TAGS = \"html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot\";\nconst SVG_TAGS = \"svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view\";\nconst VOID_TAGS = \"area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr\";\nconst isHTMLTag = /* @__PURE__ */ makeMap(HTML_TAGS);\nconst isSVGTag = /* @__PURE__ */ makeMap(SVG_TAGS);\nconst isVoidTag = /* @__PURE__ */ makeMap(VOID_TAGS);\n\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\nconst isSpecialBooleanAttr = /* @__PURE__ */ makeMap(specialBooleanAttrs);\nconst isBooleanAttr = /* @__PURE__ */ makeMap(\n  specialBooleanAttrs + `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,inert,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected`\n);\nfunction includeBooleanAttr(value) {\n  return !!value || value === \"\";\n}\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\nconst attrValidationCache = {};\nfunction isSSRSafeAttrName(name) {\n  if (attrValidationCache.hasOwnProperty(name)) {\n    return attrValidationCache[name];\n  }\n  const isUnsafe = unsafeAttrCharRE.test(name);\n  if (isUnsafe) {\n    console.error(`unsafe attribute name: ${name}`);\n  }\n  return attrValidationCache[name] = !isUnsafe;\n}\nconst propsToAttrMap = {\n  acceptCharset: \"accept-charset\",\n  className: \"class\",\n  htmlFor: \"for\",\n  httpEquiv: \"http-equiv\"\n};\nconst isKnownHtmlAttr = /* @__PURE__ */ makeMap(\n  `accept,accept-charset,accesskey,action,align,allow,alt,async,autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,border,buffered,capture,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,formaction,formenctype,formmethod,formnovalidate,formtarget,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,translate,type,usemap,value,width,wrap`\n);\nconst isKnownSvgAttr = /* @__PURE__ */ makeMap(\n  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,color-interpolation-filters,color-profile,color-rendering,contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,overflow,overline-position,overline-thickness,panose-1,paint-order,path,pathLength,patternContentUnits,patternTransform,patternUnits,ping,pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,specularConstant,specularExponent,speed,spreadMethod,startOffset,stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,string,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,text-decoration,text-rendering,textLength,to,transform,transform-origin,type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`\n);\n\nconst escapeRE = /[\"'&<>]/;\nfunction escapeHtml(string) {\n  const str = \"\" + string;\n  const match = escapeRE.exec(str);\n  if (!match) {\n    return str;\n  }\n  let html = \"\";\n  let escaped;\n  let index;\n  let lastIndex = 0;\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escaped = \"&quot;\";\n        break;\n      case 38:\n        escaped = \"&amp;\";\n        break;\n      case 39:\n        escaped = \"&#39;\";\n        break;\n      case 60:\n        escaped = \"&lt;\";\n        break;\n      case 62:\n        escaped = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    if (lastIndex !== index) {\n      html += str.slice(lastIndex, index);\n    }\n    lastIndex = index + 1;\n    html += escaped;\n  }\n  return lastIndex !== index ? html + str.slice(lastIndex, index) : html;\n}\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\nfunction escapeHtmlComment(src) {\n  return src.replace(commentStripRE, \"\");\n}\n\nfunction looseCompareArrays(a, b) {\n  if (a.length !== b.length)\n    return false;\n  let equal = true;\n  for (let i = 0; equal && i < a.length; i++) {\n    equal = looseEqual(a[i], b[i]);\n  }\n  return equal;\n}\nfunction looseEqual(a, b) {\n  if (a === b)\n    return true;\n  let aValidType = isDate(a);\n  let bValidType = isDate(b);\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false;\n  }\n  aValidType = isSymbol(a);\n  bValidType = isSymbol(b);\n  if (aValidType || bValidType) {\n    return a === b;\n  }\n  aValidType = isArray(a);\n  bValidType = isArray(b);\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? looseCompareArrays(a, b) : false;\n  }\n  aValidType = isObject(a);\n  bValidType = isObject(b);\n  if (aValidType || bValidType) {\n    if (!aValidType || !bValidType) {\n      return false;\n    }\n    const aKeysCount = Object.keys(a).length;\n    const bKeysCount = Object.keys(b).length;\n    if (aKeysCount !== bKeysCount) {\n      return false;\n    }\n    for (const key in a) {\n      const aHasKey = a.hasOwnProperty(key);\n      const bHasKey = b.hasOwnProperty(key);\n      if (aHasKey && !bHasKey || !aHasKey && bHasKey || !looseEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n  }\n  return String(a) === String(b);\n}\nfunction looseIndexOf(arr, val) {\n  return arr.findIndex((item) => looseEqual(item, val));\n}\n\nconst toDisplayString = (val) => {\n  return isString(val) ? val : val == null ? \"\" : isArray(val) || isObject(val) && (val.toString === objectToString || !isFunction(val.toString)) ? JSON.stringify(val, replacer, 2) : String(val);\n};\nconst replacer = (_key, val) => {\n  if (val && val.__v_isRef) {\n    return replacer(_key, val.value);\n  } else if (isMap(val)) {\n    return {\n      [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val2]) => {\n        entries[`${key} =>`] = val2;\n        return entries;\n      }, {})\n    };\n  } else if (isSet(val)) {\n    return {\n      [`Set(${val.size})`]: [...val.values()]\n    };\n  } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\n    return String(val);\n  }\n  return val;\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, genPropsAccessExp, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, includeBooleanAttr, invokeArrayFns, isArray, isBooleanAttr, isBuiltInDirective, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownHtmlAttr, isKnownSvgAttr, isMap, isModelListener, isObject, isOn, isPlainObject, isPromise, isRegExp, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, looseToNumber, makeMap, normalizeClass, normalizeProps, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","// Axios v1.5.0 Copyright (c) 2023 Matt Zabriskie and contributors\n'use strict';\n\nfunction bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n};\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n};\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n};\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  };\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n};\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n};\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n};\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n};\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n};\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n};\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n};\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n};\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n};\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n};\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  };\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n};\n\nconst noop = () => {};\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n};\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz';\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n};\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0];\n  }\n\n  return str;\n};\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  };\n\n  return visit(obj, 0);\n};\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nvar utils = {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype$1 = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype$1, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype$1);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\n// eslint-disable-next-line strict\nvar httpAdapter = null;\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode$1(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode$1);\n  } : encode$1;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nfunction buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nvar InterceptorManager$1 = InterceptorManager;\n\nvar transitionalDefaults = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n\nvar URLSearchParams$1 = typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n\nvar FormData$1 = typeof FormData !== 'undefined' ? FormData : null;\n\nvar Blob$1 = typeof Blob !== 'undefined' ? Blob : null;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\n const isStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\n\nvar platform = {\n  isBrowser: true,\n  classes: {\n    URLSearchParams: URLSearchParams$1,\n    FormData: FormData$1,\n    Blob: Blob$1\n  },\n  isStandardBrowserEnv,\n  isStandardBrowserWebWorkerEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n\nfunction toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: platform.isNode ? 'http' : 'xhr',\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nvar defaults$1 = defaults;\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nvar parseHeaders = rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite);\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nvar AxiosHeaders$1 = AxiosHeaders;\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nfunction transformData(fns, response) {\n  const config = this || defaults$1;\n  const context = response || config;\n  const headers = AxiosHeaders$1.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n\nfunction isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nfunction settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n\nvar cookies = platform.isStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })();\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nfunction isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nfunction combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nfunction buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n\nvar isURLSameOrigin = platform.isStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n\nfunction parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nvar xhrAdapter = isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders$1.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      if (platform.isStandardBrowserEnv || platform.isStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else {\n        requestHeaders.setContentType('multipart/form-data;', false); // mobile/desktop app frameworks\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders$1.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (platform.isStandardBrowserEnv) {\n      // Add xsrf header\n      const xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath))\n        && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n};\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n};\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if(fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nvar adapters = {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      if((adapter = utils.isString(nameOrAdapter) ? knownAdapters[nameOrAdapter.toLowerCase()] : nameOrAdapter)) {\n        break;\n      }\n    }\n\n    if (!adapter) {\n      if (adapter === false) {\n        throw new AxiosError(\n          `Adapter ${nameOrAdapter} is not supported by the environment`,\n          'ERR_NOT_SUPPORT'\n        );\n      }\n\n      throw new Error(\n        utils.hasOwnProp(knownAdapters, nameOrAdapter) ?\n          `Adapter '${nameOrAdapter}' is not available in the build` :\n          `Unknown adapter '${nameOrAdapter}'`\n      );\n    }\n\n    if (!utils.isFunction(adapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n};\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nfunction dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders$1.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults$1.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders$1.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders$1.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders$1 ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nfunction mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n\nconst VERSION = \"1.5.0\";\n\nconst validators$1 = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators$1[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators$1.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nvar validator = {\n  assertOptions,\n  validators: validators$1\n};\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager$1(),\n      response: new InterceptorManager$1()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        };\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders$1.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nvar Axios$1 = Axios;\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nvar CancelToken$1 = CancelToken;\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nfunction spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nfunction isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n\nconst HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nvar HttpStatusCode$1 = HttpStatusCode;\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios$1(defaultConfig);\n  const instance = bind(Axios$1.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios$1.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults$1);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios$1;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken$1;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders$1;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode$1;\n\naxios.default = axios;\n\nmodule.exports = axios;\n//# sourceMappingURL=axios.cjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { ThrottlingConstants } from '../../utils/Constants.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass ThrottlingEntity {\n    /**\n     * validates if a given cache entry is \"Throttling\", parses <key,value>\n     * @param key\n     * @param entity\n     */\n    static isThrottlingEntity(key, entity) {\n        let validateKey = false;\n        if (key) {\n            validateKey =\n                key.indexOf(ThrottlingConstants.THROTTLING_PREFIX) === 0;\n        }\n        let validateEntity = true;\n        if (entity) {\n            validateEntity = entity.hasOwnProperty(\"throttleTime\");\n        }\n        return validateKey && validateEntity;\n    }\n}\n\nexport { ThrottlingEntity };\n//# sourceMappingURL=ThrottlingEntity.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { CacheManager, CredentialType, RefreshTokenEntity, AccessTokenEntity, IdTokenEntity, AccountEntity, createClientAuthError, ClientAuthErrorCodes, AppMetadataEntity, ServerTelemetryEntity, AuthorityMetadataEntity, Constants, PersistentCacheKeys, ThrottlingEntity, PerformanceEvents, StringUtils, ProtocolUtils, AuthToken, CacheRecord, DEFAULT_CRYPTO_IMPLEMENTATION, CcsCredentialType } from '@azure/msal-common';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { BrowserCacheLocation, StaticCacheKeys, InMemoryCacheKeys, TemporaryCacheKeys } from '../utils/BrowserConstants.mjs';\nimport { BrowserStorage } from './BrowserStorage.mjs';\nimport { MemoryStorage } from './MemoryStorage.mjs';\nimport { BrowserProtocolUtils } from '../utils/BrowserProtocolUtils.mjs';\nimport { base64Decode } from '../encode/Base64Decode.mjs';\nimport { base64Encode } from '../encode/Base64Encode.mjs';\nimport { noTokenRequestCacheError, unableToParseTokenRequestCacheError, noCachedAuthorityError, interactionInProgress } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This class implements the cache storage interface for MSAL through browser local or session storage.\n * Cookies are only used if storeAuthStateInCookie is true, and are only used for\n * parameters such as state and nonce, generally.\n */\nclass BrowserCacheManager extends CacheManager {\n    constructor(clientId, cacheConfig, cryptoImpl, logger, staticAuthorityOptions) {\n        super(clientId, cryptoImpl, logger, staticAuthorityOptions);\n        // Cookie life calculation (hours * minutes * seconds * ms)\n        this.COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\n        this.cacheConfig = cacheConfig;\n        this.logger = logger;\n        this.internalStorage = new MemoryStorage();\n        this.browserStorage = this.setupBrowserStorage(this.cacheConfig.cacheLocation);\n        this.temporaryCacheStorage = this.setupTemporaryCacheStorage(this.cacheConfig.temporaryCacheLocation, this.cacheConfig.cacheLocation);\n        // Migrate cache entries from older versions of MSAL.\n        if (cacheConfig.cacheMigrationEnabled) {\n            this.migrateCacheEntries();\n            this.createKeyMaps();\n        }\n    }\n    /**\n     * Returns a window storage class implementing the IWindowStorage interface that corresponds to the configured cacheLocation.\n     * @param cacheLocation\n     */\n    setupBrowserStorage(cacheLocation) {\n        switch (cacheLocation) {\n            case BrowserCacheLocation.LocalStorage:\n            case BrowserCacheLocation.SessionStorage:\n                try {\n                    return new BrowserStorage(cacheLocation);\n                }\n                catch (e) {\n                    this.logger.verbose(e);\n                    break;\n                }\n        }\n        this.cacheConfig.cacheLocation = BrowserCacheLocation.MemoryStorage;\n        return new MemoryStorage();\n    }\n    /**\n     * Returns a window storage class implementing the IWindowStorage interface that corresponds to the configured temporaryCacheLocation.\n     * @param temporaryCacheLocation\n     * @param cacheLocation\n     */\n    setupTemporaryCacheStorage(temporaryCacheLocation, cacheLocation) {\n        switch (cacheLocation) {\n            case BrowserCacheLocation.LocalStorage:\n            case BrowserCacheLocation.SessionStorage:\n                try {\n                    // Temporary cache items will always be stored in session storage to mitigate problems caused by multiple tabs\n                    return new BrowserStorage(temporaryCacheLocation ||\n                        BrowserCacheLocation.SessionStorage);\n                }\n                catch (e) {\n                    this.logger.verbose(e);\n                    return this.internalStorage;\n                }\n            case BrowserCacheLocation.MemoryStorage:\n            default:\n                return this.internalStorage;\n        }\n    }\n    /**\n     * Migrate all old cache entries to new schema. No rollback supported.\n     * @param storeAuthStateInCookie\n     */\n    migrateCacheEntries() {\n        const idTokenKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ID_TOKEN}`;\n        const clientInfoKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.CLIENT_INFO}`;\n        const errorKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR}`;\n        const errorDescKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR_DESC}`;\n        const idTokenValue = this.browserStorage.getItem(idTokenKey);\n        const clientInfoValue = this.browserStorage.getItem(clientInfoKey);\n        const errorValue = this.browserStorage.getItem(errorKey);\n        const errorDescValue = this.browserStorage.getItem(errorDescKey);\n        const values = [\n            idTokenValue,\n            clientInfoValue,\n            errorValue,\n            errorDescValue,\n        ];\n        const keysToMigrate = [\n            PersistentCacheKeys.ID_TOKEN,\n            PersistentCacheKeys.CLIENT_INFO,\n            PersistentCacheKeys.ERROR,\n            PersistentCacheKeys.ERROR_DESC,\n        ];\n        keysToMigrate.forEach((cacheKey, index) => this.migrateCacheEntry(cacheKey, values[index]));\n    }\n    /**\n     * Utility function to help with migration.\n     * @param newKey\n     * @param value\n     * @param storeAuthStateInCookie\n     */\n    migrateCacheEntry(newKey, value) {\n        if (value) {\n            this.setTemporaryCache(newKey, value, true);\n        }\n    }\n    /**\n     * Searches all cache entries for MSAL accounts and creates the account key map\n     * This is used to migrate users from older versions of MSAL which did not create the map.\n     * @returns\n     */\n    createKeyMaps() {\n        this.logger.trace(\"BrowserCacheManager - createKeyMaps called.\");\n        const accountKeys = this.getItem(StaticCacheKeys.ACCOUNT_KEYS);\n        const tokenKeys = this.getItem(`${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`);\n        if (accountKeys && tokenKeys) {\n            this.logger.verbose(\"BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration.\");\n            // Key maps already exist, no need to iterate through cache\n            return;\n        }\n        const allKeys = this.browserStorage.getKeys();\n        allKeys.forEach((key) => {\n            if (this.isCredentialKey(key)) {\n                // Get item, parse, validate and write key to map\n                const value = this.getItem(key);\n                if (value) {\n                    const credObj = this.validateAndParseJson(value);\n                    if (credObj && credObj.hasOwnProperty(\"credentialType\")) {\n                        switch (credObj[\"credentialType\"]) {\n                            case CredentialType.ID_TOKEN:\n                                if (IdTokenEntity.isIdTokenEntity(credObj)) {\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map\");\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - idToken with key: ${key} found, saving key to token key map`);\n                                    const idTokenEntity = CacheManager.toObject(new IdTokenEntity(), credObj);\n                                    const newKey = this.updateCredentialCacheKey(key, idTokenEntity);\n                                    this.addTokenKey(newKey, CredentialType.ID_TOKEN);\n                                    return;\n                                }\n                                else {\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping.\");\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${key}`);\n                                }\n                                break;\n                            case CredentialType.ACCESS_TOKEN:\n                            case CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME:\n                                if (AccessTokenEntity.isAccessTokenEntity(credObj)) {\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map\");\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - accessToken with key: ${key} found, saving key to token key map`);\n                                    const accessTokenEntity = CacheManager.toObject(new AccessTokenEntity(), credObj);\n                                    const newKey = this.updateCredentialCacheKey(key, accessTokenEntity);\n                                    this.addTokenKey(newKey, CredentialType.ACCESS_TOKEN);\n                                    return;\n                                }\n                                else {\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping.\");\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${key}`);\n                                }\n                                break;\n                            case CredentialType.REFRESH_TOKEN:\n                                if (RefreshTokenEntity.isRefreshTokenEntity(credObj)) {\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map\");\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - refreshToken with key: ${key} found, saving key to token key map`);\n                                    const refreshTokenEntity = CacheManager.toObject(new RefreshTokenEntity(), credObj);\n                                    const newKey = this.updateCredentialCacheKey(key, refreshTokenEntity);\n                                    this.addTokenKey(newKey, CredentialType.REFRESH_TOKEN);\n                                    return;\n                                }\n                                else {\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping.\");\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${key}`);\n                                }\n                                break;\n                            // If credentialType isn't one of our predefined ones, it may not be an MSAL cache value. Ignore.\n                        }\n                    }\n                }\n            }\n            if (this.isAccountKey(key)) {\n                const value = this.getItem(key);\n                if (value) {\n                    const accountObj = this.validateAndParseJson(value);\n                    if (accountObj &&\n                        AccountEntity.isAccountEntity(accountObj)) {\n                        this.logger.trace(\"BrowserCacheManager:createKeyMaps - account found, saving key to account key map\");\n                        this.logger.tracePii(`BrowserCacheManager:createKeyMaps - account with key: ${key} found, saving key to account key map`);\n                        this.addAccountKeyToMap(key);\n                    }\n                }\n            }\n        });\n    }\n    /**\n     * Parses passed value as JSON object, JSON.parse() will throw an error.\n     * @param input\n     */\n    validateAndParseJson(jsonValue) {\n        try {\n            const parsedJson = JSON.parse(jsonValue);\n            /**\n             * There are edge cases in which JSON.parse will successfully parse a non-valid JSON object\n             * (e.g. JSON.parse will parse an escaped string into an unescaped string), so adding a type check\n             * of the parsed value is necessary in order to be certain that the string represents a valid JSON object.\n             *\n             */\n            return parsedJson && typeof parsedJson === \"object\"\n                ? parsedJson\n                : null;\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    /**\n     * fetches the entry from the browser storage based off the key\n     * @param key\n     */\n    getItem(key) {\n        return this.browserStorage.getItem(key);\n    }\n    /**\n     * sets the entry in the browser storage\n     * @param key\n     * @param value\n     */\n    setItem(key, value) {\n        this.browserStorage.setItem(key, value);\n    }\n    /**\n     * fetch the account entity from the platform cache\n     * @param accountKey\n     */\n    getAccount(accountKey) {\n        this.logger.trace(\"BrowserCacheManager.getAccount called\");\n        const account = this.getItem(accountKey);\n        if (!account) {\n            this.removeAccountKeyFromMap(accountKey);\n            return null;\n        }\n        const parsedAccount = this.validateAndParseJson(account);\n        if (!parsedAccount || !AccountEntity.isAccountEntity(parsedAccount)) {\n            this.removeAccountKeyFromMap(accountKey);\n            return null;\n        }\n        return CacheManager.toObject(new AccountEntity(), parsedAccount);\n    }\n    /**\n     * set account entity in the platform cache\n     * @param account\n     */\n    setAccount(account) {\n        this.logger.trace(\"BrowserCacheManager.setAccount called\");\n        const key = account.generateAccountKey();\n        this.setItem(key, JSON.stringify(account));\n        this.addAccountKeyToMap(key);\n    }\n    /**\n     * Returns the array of account keys currently cached\n     * @returns\n     */\n    getAccountKeys() {\n        this.logger.trace(\"BrowserCacheManager.getAccountKeys called\");\n        const accountKeys = this.getItem(StaticCacheKeys.ACCOUNT_KEYS);\n        if (accountKeys) {\n            return JSON.parse(accountKeys);\n        }\n        this.logger.verbose(\"BrowserCacheManager.getAccountKeys - No account keys found\");\n        return [];\n    }\n    /**\n     * Add a new account to the key map\n     * @param key\n     */\n    addAccountKeyToMap(key) {\n        this.logger.trace(\"BrowserCacheManager.addAccountKeyToMap called\");\n        this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${key}`);\n        const accountKeys = this.getAccountKeys();\n        if (accountKeys.indexOf(key) === -1) {\n            // Only add key if it does not already exist in the map\n            accountKeys.push(key);\n            this.setItem(StaticCacheKeys.ACCOUNT_KEYS, JSON.stringify(accountKeys));\n            this.logger.verbose(\"BrowserCacheManager.addAccountKeyToMap account key added\");\n        }\n        else {\n            this.logger.verbose(\"BrowserCacheManager.addAccountKeyToMap account key already exists in map\");\n        }\n    }\n    /**\n     * Remove an account from the key map\n     * @param key\n     */\n    removeAccountKeyFromMap(key) {\n        this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap called\");\n        this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${key}`);\n        const accountKeys = this.getAccountKeys();\n        const removalIndex = accountKeys.indexOf(key);\n        if (removalIndex > -1) {\n            accountKeys.splice(removalIndex, 1);\n            this.setItem(StaticCacheKeys.ACCOUNT_KEYS, JSON.stringify(accountKeys));\n            this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap account key removed\");\n        }\n        else {\n            this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap key not found in existing map\");\n        }\n    }\n    /**\n     * Extends inherited removeAccount function to include removal of the account key from the map\n     * @param key\n     */\n    async removeAccount(key) {\n        void super.removeAccount(key);\n        this.removeAccountKeyFromMap(key);\n    }\n    /**\n     * Removes given idToken from the cache and from the key map\n     * @param key\n     */\n    removeIdToken(key) {\n        super.removeIdToken(key);\n        this.removeTokenKey(key, CredentialType.ID_TOKEN);\n    }\n    /**\n     * Removes given accessToken from the cache and from the key map\n     * @param key\n     */\n    async removeAccessToken(key) {\n        void super.removeAccessToken(key);\n        this.removeTokenKey(key, CredentialType.ACCESS_TOKEN);\n    }\n    /**\n     * Removes given refreshToken from the cache and from the key map\n     * @param key\n     */\n    removeRefreshToken(key) {\n        super.removeRefreshToken(key);\n        this.removeTokenKey(key, CredentialType.REFRESH_TOKEN);\n    }\n    /**\n     * Gets the keys for the cached tokens associated with this clientId\n     * @returns\n     */\n    getTokenKeys() {\n        this.logger.trace(\"BrowserCacheManager.getTokenKeys called\");\n        const item = this.getItem(`${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`);\n        if (item) {\n            const tokenKeys = this.validateAndParseJson(item);\n            if (tokenKeys &&\n                tokenKeys.hasOwnProperty(\"idToken\") &&\n                tokenKeys.hasOwnProperty(\"accessToken\") &&\n                tokenKeys.hasOwnProperty(\"refreshToken\")) {\n                return tokenKeys;\n            }\n            else {\n                this.logger.error(\"BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map.\");\n            }\n        }\n        else {\n            this.logger.verbose(\"BrowserCacheManager.getTokenKeys - No token keys found\");\n        }\n        return {\n            idToken: [],\n            accessToken: [],\n            refreshToken: [],\n        };\n    }\n    /**\n     * Adds the given key to the token key map\n     * @param key\n     * @param type\n     */\n    addTokenKey(key, type) {\n        this.logger.trace(\"BrowserCacheManager addTokenKey called\");\n        const tokenKeys = this.getTokenKeys();\n        switch (type) {\n            case CredentialType.ID_TOKEN:\n                if (tokenKeys.idToken.indexOf(key) === -1) {\n                    this.logger.info(\"BrowserCacheManager: addTokenKey - idToken added to map\");\n                    tokenKeys.idToken.push(key);\n                }\n                break;\n            case CredentialType.ACCESS_TOKEN:\n                if (tokenKeys.accessToken.indexOf(key) === -1) {\n                    this.logger.info(\"BrowserCacheManager: addTokenKey - accessToken added to map\");\n                    tokenKeys.accessToken.push(key);\n                }\n                break;\n            case CredentialType.REFRESH_TOKEN:\n                if (tokenKeys.refreshToken.indexOf(key) === -1) {\n                    this.logger.info(\"BrowserCacheManager: addTokenKey - refreshToken added to map\");\n                    tokenKeys.refreshToken.push(key);\n                }\n                break;\n            default:\n                this.logger.error(`BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${type}`);\n                throw createClientAuthError(ClientAuthErrorCodes.unexpectedCredentialType);\n        }\n        this.setItem(`${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`, JSON.stringify(tokenKeys));\n    }\n    /**\n     * Removes the given key from the token key map\n     * @param key\n     * @param type\n     */\n    removeTokenKey(key, type) {\n        this.logger.trace(\"BrowserCacheManager removeTokenKey called\");\n        const tokenKeys = this.getTokenKeys();\n        switch (type) {\n            case CredentialType.ID_TOKEN:\n                this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${key} from map`);\n                const idRemoval = tokenKeys.idToken.indexOf(key);\n                if (idRemoval > -1) {\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - idToken removed from map\");\n                    tokenKeys.idToken.splice(idRemoval, 1);\n                }\n                else {\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.\");\n                }\n                break;\n            case CredentialType.ACCESS_TOKEN:\n                this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${key} from map`);\n                const accessRemoval = tokenKeys.accessToken.indexOf(key);\n                if (accessRemoval > -1) {\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - accessToken removed from map\");\n                    tokenKeys.accessToken.splice(accessRemoval, 1);\n                }\n                else {\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.\");\n                }\n                break;\n            case CredentialType.REFRESH_TOKEN:\n                this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${key} from map`);\n                const refreshRemoval = tokenKeys.refreshToken.indexOf(key);\n                if (refreshRemoval > -1) {\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - refreshToken removed from map\");\n                    tokenKeys.refreshToken.splice(refreshRemoval, 1);\n                }\n                else {\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.\");\n                }\n                break;\n            default:\n                this.logger.error(`BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${type}`);\n                throw createClientAuthError(ClientAuthErrorCodes.unexpectedCredentialType);\n        }\n        this.setItem(`${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`, JSON.stringify(tokenKeys));\n    }\n    /**\n     * generates idToken entity from a string\n     * @param idTokenKey\n     */\n    getIdTokenCredential(idTokenKey) {\n        const value = this.getItem(idTokenKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: called, no cache hit\");\n            this.removeTokenKey(idTokenKey, CredentialType.ID_TOKEN);\n            return null;\n        }\n        const parsedIdToken = this.validateAndParseJson(value);\n        if (!parsedIdToken || !IdTokenEntity.isIdTokenEntity(parsedIdToken)) {\n            this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: called, no cache hit\");\n            this.removeTokenKey(idTokenKey, CredentialType.ID_TOKEN);\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: cache hit\");\n        return CacheManager.toObject(new IdTokenEntity(), parsedIdToken);\n    }\n    /**\n     * set IdToken credential to the platform cache\n     * @param idToken\n     */\n    setIdTokenCredential(idToken) {\n        this.logger.trace(\"BrowserCacheManager.setIdTokenCredential called\");\n        const idTokenKey = idToken.generateCredentialKey();\n        this.setItem(idTokenKey, JSON.stringify(idToken));\n        this.addTokenKey(idTokenKey, CredentialType.ID_TOKEN);\n    }\n    /**\n     * generates accessToken entity from a string\n     * @param key\n     */\n    getAccessTokenCredential(accessTokenKey) {\n        const value = this.getItem(accessTokenKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\");\n            this.removeTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\n            return null;\n        }\n        const parsedAccessToken = this.validateAndParseJson(value);\n        if (!parsedAccessToken ||\n            !AccessTokenEntity.isAccessTokenEntity(parsedAccessToken)) {\n            this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\");\n            this.removeTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: cache hit\");\n        return CacheManager.toObject(new AccessTokenEntity(), parsedAccessToken);\n    }\n    /**\n     * set accessToken credential to the platform cache\n     * @param accessToken\n     */\n    setAccessTokenCredential(accessToken) {\n        this.logger.trace(\"BrowserCacheManager.setAccessTokenCredential called\");\n        const accessTokenKey = accessToken.generateCredentialKey();\n        this.setItem(accessTokenKey, JSON.stringify(accessToken));\n        this.addTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\n    }\n    /**\n     * generates refreshToken entity from a string\n     * @param refreshTokenKey\n     */\n    getRefreshTokenCredential(refreshTokenKey) {\n        const value = this.getItem(refreshTokenKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\");\n            this.removeTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\n            return null;\n        }\n        const parsedRefreshToken = this.validateAndParseJson(value);\n        if (!parsedRefreshToken ||\n            !RefreshTokenEntity.isRefreshTokenEntity(parsedRefreshToken)) {\n            this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\");\n            this.removeTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: cache hit\");\n        return CacheManager.toObject(new RefreshTokenEntity(), parsedRefreshToken);\n    }\n    /**\n     * set refreshToken credential to the platform cache\n     * @param refreshToken\n     */\n    setRefreshTokenCredential(refreshToken) {\n        this.logger.trace(\"BrowserCacheManager.setRefreshTokenCredential called\");\n        const refreshTokenKey = refreshToken.generateCredentialKey();\n        this.setItem(refreshTokenKey, JSON.stringify(refreshToken));\n        this.addTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\n    }\n    /**\n     * fetch appMetadata entity from the platform cache\n     * @param appMetadataKey\n     */\n    getAppMetadata(appMetadataKey) {\n        const value = this.getItem(appMetadataKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getAppMetadata: called, no cache hit\");\n            return null;\n        }\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (!parsedMetadata ||\n            !AppMetadataEntity.isAppMetadataEntity(appMetadataKey, parsedMetadata)) {\n            this.logger.trace(\"BrowserCacheManager.getAppMetadata: called, no cache hit\");\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getAppMetadata: cache hit\");\n        return CacheManager.toObject(new AppMetadataEntity(), parsedMetadata);\n    }\n    /**\n     * set appMetadata entity to the platform cache\n     * @param appMetadata\n     */\n    setAppMetadata(appMetadata) {\n        this.logger.trace(\"BrowserCacheManager.setAppMetadata called\");\n        const appMetadataKey = appMetadata.generateAppMetadataKey();\n        this.setItem(appMetadataKey, JSON.stringify(appMetadata));\n    }\n    /**\n     * fetch server telemetry entity from the platform cache\n     * @param serverTelemetryKey\n     */\n    getServerTelemetry(serverTelemetryKey) {\n        const value = this.getItem(serverTelemetryKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getServerTelemetry: called, no cache hit\");\n            return null;\n        }\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (!parsedMetadata ||\n            !ServerTelemetryEntity.isServerTelemetryEntity(serverTelemetryKey, parsedMetadata)) {\n            this.logger.trace(\"BrowserCacheManager.getServerTelemetry: called, no cache hit\");\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getServerTelemetry: cache hit\");\n        return CacheManager.toObject(new ServerTelemetryEntity(), parsedMetadata);\n    }\n    /**\n     * set server telemetry entity to the platform cache\n     * @param serverTelemetryKey\n     * @param serverTelemetry\n     */\n    setServerTelemetry(serverTelemetryKey, serverTelemetry) {\n        this.logger.trace(\"BrowserCacheManager.setServerTelemetry called\");\n        this.setItem(serverTelemetryKey, JSON.stringify(serverTelemetry));\n    }\n    /**\n     *\n     */\n    getAuthorityMetadata(key) {\n        const value = this.internalStorage.getItem(key);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getAuthorityMetadata: called, no cache hit\");\n            return null;\n        }\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (parsedMetadata &&\n            AuthorityMetadataEntity.isAuthorityMetadataEntity(key, parsedMetadata)) {\n            this.logger.trace(\"BrowserCacheManager.getAuthorityMetadata: cache hit\");\n            return CacheManager.toObject(new AuthorityMetadataEntity(), parsedMetadata);\n        }\n        return null;\n    }\n    /**\n     *\n     */\n    getAuthorityMetadataKeys() {\n        const allKeys = this.internalStorage.getKeys();\n        return allKeys.filter((key) => {\n            return this.isAuthorityMetadata(key);\n        });\n    }\n    /**\n     * Sets wrapper metadata in memory\n     * @param wrapperSKU\n     * @param wrapperVersion\n     */\n    setWrapperMetadata(wrapperSKU, wrapperVersion) {\n        this.internalStorage.setItem(InMemoryCacheKeys.WRAPPER_SKU, wrapperSKU);\n        this.internalStorage.setItem(InMemoryCacheKeys.WRAPPER_VER, wrapperVersion);\n    }\n    /**\n     * Returns wrapper metadata from in-memory storage\n     */\n    getWrapperMetadata() {\n        const sku = this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_SKU) ||\n            Constants.EMPTY_STRING;\n        const version = this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_VER) ||\n            Constants.EMPTY_STRING;\n        return [sku, version];\n    }\n    /**\n     *\n     * @param entity\n     */\n    setAuthorityMetadata(key, entity) {\n        this.logger.trace(\"BrowserCacheManager.setAuthorityMetadata called\");\n        this.internalStorage.setItem(key, JSON.stringify(entity));\n    }\n    /**\n     * Gets the active account\n     */\n    getActiveAccount() {\n        const activeAccountKeyFilters = this.generateCacheKey(PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS);\n        const activeAccountValueFilters = this.getItem(activeAccountKeyFilters);\n        if (!activeAccountValueFilters) {\n            // if new active account cache type isn't found, it's an old version, so look for that instead\n            this.logger.trace(\"BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema\");\n            const activeAccountKeyLocal = this.generateCacheKey(PersistentCacheKeys.ACTIVE_ACCOUNT);\n            const activeAccountValueLocal = this.getItem(activeAccountKeyLocal);\n            if (!activeAccountValueLocal) {\n                this.logger.trace(\"BrowserCacheManager.getActiveAccount: No active account found\");\n                return null;\n            }\n            const activeAccount = this.getAccountInfoFilteredBy({\n                localAccountId: activeAccountValueLocal,\n            });\n            if (activeAccount) {\n                this.logger.trace(\"BrowserCacheManager.getActiveAccount: Legacy active account cache schema found\");\n                this.logger.trace(\"BrowserCacheManager.getActiveAccount: Adding active account filters cache schema\");\n                this.setActiveAccount(activeAccount);\n                return activeAccount;\n            }\n            return null;\n        }\n        const activeAccountValueObj = this.validateAndParseJson(activeAccountValueFilters);\n        if (activeAccountValueObj) {\n            this.logger.trace(\"BrowserCacheManager.getActiveAccount: Active account filters schema found\");\n            return this.getAccountInfoFilteredBy({\n                homeAccountId: activeAccountValueObj.homeAccountId,\n                localAccountId: activeAccountValueObj.localAccountId,\n            });\n        }\n        this.logger.trace(\"BrowserCacheManager.getActiveAccount: No active account found\");\n        return null;\n    }\n    /**\n     * Sets the active account's localAccountId in cache\n     * @param account\n     */\n    setActiveAccount(account) {\n        const activeAccountKey = this.generateCacheKey(PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS);\n        const activeAccountKeyLocal = this.generateCacheKey(PersistentCacheKeys.ACTIVE_ACCOUNT);\n        if (account) {\n            this.logger.verbose(\"setActiveAccount: Active account set\");\n            const activeAccountValue = {\n                homeAccountId: account.homeAccountId,\n                localAccountId: account.localAccountId,\n            };\n            this.browserStorage.setItem(activeAccountKey, JSON.stringify(activeAccountValue));\n            this.browserStorage.setItem(activeAccountKeyLocal, account.localAccountId);\n        }\n        else {\n            this.logger.verbose(\"setActiveAccount: No account passed, active account not set\");\n            this.browserStorage.removeItem(activeAccountKey);\n            this.browserStorage.removeItem(activeAccountKeyLocal);\n        }\n    }\n    /**\n     * fetch throttling entity from the platform cache\n     * @param throttlingCacheKey\n     */\n    getThrottlingCache(throttlingCacheKey) {\n        const value = this.getItem(throttlingCacheKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getThrottlingCache: called, no cache hit\");\n            return null;\n        }\n        const parsedThrottlingCache = this.validateAndParseJson(value);\n        if (!parsedThrottlingCache ||\n            !ThrottlingEntity.isThrottlingEntity(throttlingCacheKey, parsedThrottlingCache)) {\n            this.logger.trace(\"BrowserCacheManager.getThrottlingCache: called, no cache hit\");\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getThrottlingCache: cache hit\");\n        return CacheManager.toObject(new ThrottlingEntity(), parsedThrottlingCache);\n    }\n    /**\n     * set throttling entity to the platform cache\n     * @param throttlingCacheKey\n     * @param throttlingCache\n     */\n    setThrottlingCache(throttlingCacheKey, throttlingCache) {\n        this.logger.trace(\"BrowserCacheManager.setThrottlingCache called\");\n        this.setItem(throttlingCacheKey, JSON.stringify(throttlingCache));\n    }\n    /**\n     * Gets cache item with given key.\n     * Will retrieve from cookies if storeAuthStateInCookie is set to true.\n     * @param key\n     */\n    getTemporaryCache(cacheKey, generateKey) {\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            const itemCookie = this.getItemCookie(key);\n            if (itemCookie) {\n                this.logger.trace(\"BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies\");\n                return itemCookie;\n            }\n        }\n        const value = this.temporaryCacheStorage.getItem(key);\n        if (!value) {\n            // If temp cache item not found in session/memory, check local storage for items set by old versions\n            if (this.cacheConfig.cacheLocation ===\n                BrowserCacheLocation.LocalStorage) {\n                const item = this.browserStorage.getItem(key);\n                if (item) {\n                    this.logger.trace(\"BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage\");\n                    return item;\n                }\n            }\n            this.logger.trace(\"BrowserCacheManager.getTemporaryCache: No cache item found in local storage\");\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getTemporaryCache: Temporary cache item returned\");\n        return value;\n    }\n    /**\n     * Sets the cache item with the key and value given.\n     * Stores in cookie if storeAuthStateInCookie is set to true.\n     * This can cause cookie overflow if used incorrectly.\n     * @param key\n     * @param value\n     */\n    setTemporaryCache(cacheKey, value, generateKey) {\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\n        this.temporaryCacheStorage.setItem(key, value);\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            this.logger.trace(\"BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie\");\n            this.setItemCookie(key, value);\n        }\n    }\n    /**\n     * Removes the cache item with the given key.\n     * Will also clear the cookie item if storeAuthStateInCookie is set to true.\n     * @param key\n     */\n    removeItem(key) {\n        this.browserStorage.removeItem(key);\n        this.temporaryCacheStorage.removeItem(key);\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            this.logger.trace(\"BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie\");\n            this.clearItemCookie(key);\n        }\n    }\n    /**\n     * Checks whether key is in cache.\n     * @param key\n     */\n    containsKey(key) {\n        return (this.browserStorage.containsKey(key) ||\n            this.temporaryCacheStorage.containsKey(key));\n    }\n    /**\n     * Gets all keys in window.\n     */\n    getKeys() {\n        return [\n            ...this.browserStorage.getKeys(),\n            ...this.temporaryCacheStorage.getKeys(),\n        ];\n    }\n    /**\n     * Clears all cache entries created by MSAL.\n     */\n    async clear() {\n        // Removes all accounts and their credentials\n        await this.removeAllAccounts();\n        this.removeAppMetadata();\n        // Removes all remaining MSAL cache items\n        this.getKeys().forEach((cacheKey) => {\n            // Check if key contains msal prefix; For now, we are clearing all the cache items created by MSAL.js\n            if ((this.browserStorage.containsKey(cacheKey) ||\n                this.temporaryCacheStorage.containsKey(cacheKey)) &&\n                (cacheKey.indexOf(Constants.CACHE_PREFIX) !== -1 ||\n                    cacheKey.indexOf(this.clientId) !== -1)) {\n                this.removeItem(cacheKey);\n            }\n        });\n        this.internalStorage.clear();\n    }\n    /**\n     * Clears all access tokes that have claims prior to saving the current one\n     * @param performanceClient {IPerformanceClient}\n     * @returns\n     */\n    async clearTokensAndKeysWithClaims(performanceClient) {\n        performanceClient.addQueueMeasurement(PerformanceEvents.ClearTokensAndKeysWithClaims);\n        const tokenKeys = this.getTokenKeys();\n        const removedAccessTokens = [];\n        tokenKeys.accessToken.forEach((key) => {\n            // if the access token has claims in its key, remove the token key and the token\n            const credential = this.getAccessTokenCredential(key);\n            if (credential?.requestedClaimsHash &&\n                key.includes(credential.requestedClaimsHash.toLowerCase())) {\n                removedAccessTokens.push(this.removeAccessToken(key));\n            }\n        });\n        await Promise.all(removedAccessTokens);\n        // warn if any access tokens are removed\n        if (removedAccessTokens.length > 0) {\n            this.logger.warning(`${removedAccessTokens.length} access tokens with claims in the cache keys have been removed from the cache.`);\n        }\n    }\n    /**\n     * Add value to cookies\n     * @param cookieName\n     * @param cookieValue\n     * @param expires\n     */\n    setItemCookie(cookieName, cookieValue, expires) {\n        let cookieStr = `${encodeURIComponent(cookieName)}=${encodeURIComponent(cookieValue)};path=/;SameSite=Lax;`;\n        if (expires) {\n            const expireTime = this.getCookieExpirationTime(expires);\n            cookieStr += `expires=${expireTime};`;\n        }\n        if (this.cacheConfig.secureCookies) {\n            cookieStr += \"Secure;\";\n        }\n        document.cookie = cookieStr;\n    }\n    /**\n     * Get one item by key from cookies\n     * @param cookieName\n     */\n    getItemCookie(cookieName) {\n        const name = `${encodeURIComponent(cookieName)}=`;\n        const cookieList = document.cookie.split(\";\");\n        for (let i = 0; i < cookieList.length; i++) {\n            let cookie = cookieList[i];\n            while (cookie.charAt(0) === \" \") {\n                cookie = cookie.substring(1);\n            }\n            if (cookie.indexOf(name) === 0) {\n                return decodeURIComponent(cookie.substring(name.length, cookie.length));\n            }\n        }\n        return Constants.EMPTY_STRING;\n    }\n    /**\n     * Clear all msal-related cookies currently set in the browser. Should only be used to clear temporary cache items.\n     */\n    clearMsalCookies() {\n        const cookiePrefix = `${Constants.CACHE_PREFIX}.${this.clientId}`;\n        const cookieList = document.cookie.split(\";\");\n        cookieList.forEach((cookie) => {\n            while (cookie.charAt(0) === \" \") {\n                // eslint-disable-next-line no-param-reassign\n                cookie = cookie.substring(1);\n            }\n            if (cookie.indexOf(cookiePrefix) === 0) {\n                const cookieKey = cookie.split(\"=\")[0];\n                this.clearItemCookie(cookieKey);\n            }\n        });\n    }\n    /**\n     * Clear an item in the cookies by key\n     * @param cookieName\n     */\n    clearItemCookie(cookieName) {\n        this.setItemCookie(cookieName, Constants.EMPTY_STRING, -1);\n    }\n    /**\n     * Get cookie expiration time\n     * @param cookieLifeDays\n     */\n    getCookieExpirationTime(cookieLifeDays) {\n        const today = new Date();\n        const expr = new Date(today.getTime() + cookieLifeDays * this.COOKIE_LIFE_MULTIPLIER);\n        return expr.toUTCString();\n    }\n    /**\n     * Gets the cache object referenced by the browser\n     */\n    getCache() {\n        return this.browserStorage;\n    }\n    /**\n     * interface compat, we cannot overwrite browser cache; Functionality is supported by individual entities in browser\n     */\n    setCache() {\n        // sets nothing\n    }\n    /**\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\n     * @param key\n     * @param addInstanceId\n     */\n    generateCacheKey(key) {\n        const generatedKey = this.validateAndParseJson(key);\n        if (!generatedKey) {\n            if (StringUtils.startsWith(key, Constants.CACHE_PREFIX) ||\n                StringUtils.startsWith(key, PersistentCacheKeys.ADAL_ID_TOKEN)) {\n                return key;\n            }\n            return `${Constants.CACHE_PREFIX}.${this.clientId}.${key}`;\n        }\n        return JSON.stringify(key);\n    }\n    /**\n     * Create authorityKey to cache authority\n     * @param state\n     */\n    generateAuthorityKey(stateString) {\n        const { libraryState: { id: stateId }, } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n        return this.generateCacheKey(`${TemporaryCacheKeys.AUTHORITY}.${stateId}`);\n    }\n    /**\n     * Create Nonce key to cache nonce\n     * @param state\n     */\n    generateNonceKey(stateString) {\n        const { libraryState: { id: stateId }, } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n        return this.generateCacheKey(`${TemporaryCacheKeys.NONCE_IDTOKEN}.${stateId}`);\n    }\n    /**\n     * Creates full cache key for the request state\n     * @param stateString State string for the request\n     */\n    generateStateKey(stateString) {\n        // Use the library state id to key temp storage for uniqueness for multiple concurrent requests\n        const { libraryState: { id: stateId }, } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n        return this.generateCacheKey(`${TemporaryCacheKeys.REQUEST_STATE}.${stateId}`);\n    }\n    /**\n     * Gets the cached authority based on the cached state. Returns empty if no cached state found.\n     */\n    getCachedAuthority(cachedState) {\n        const stateCacheKey = this.generateStateKey(cachedState);\n        const state = this.getTemporaryCache(stateCacheKey);\n        if (!state) {\n            return null;\n        }\n        const authorityCacheKey = this.generateAuthorityKey(state);\n        return this.getTemporaryCache(authorityCacheKey);\n    }\n    /**\n     * Updates account, authority, and state in cache\n     * @param serverAuthenticationRequest\n     * @param account\n     */\n    updateCacheEntries(state, nonce, authorityInstance, loginHint, account) {\n        this.logger.trace(\"BrowserCacheManager.updateCacheEntries called\");\n        // Cache the request state\n        const stateCacheKey = this.generateStateKey(state);\n        this.setTemporaryCache(stateCacheKey, state, false);\n        // Cache the nonce\n        const nonceCacheKey = this.generateNonceKey(state);\n        this.setTemporaryCache(nonceCacheKey, nonce, false);\n        // Cache authorityKey\n        const authorityCacheKey = this.generateAuthorityKey(state);\n        this.setTemporaryCache(authorityCacheKey, authorityInstance, false);\n        if (account) {\n            const ccsCredential = {\n                credential: account.homeAccountId,\n                type: CcsCredentialType.HOME_ACCOUNT_ID,\n            };\n            this.setTemporaryCache(TemporaryCacheKeys.CCS_CREDENTIAL, JSON.stringify(ccsCredential), true);\n        }\n        else if (loginHint) {\n            const ccsCredential = {\n                credential: loginHint,\n                type: CcsCredentialType.UPN,\n            };\n            this.setTemporaryCache(TemporaryCacheKeys.CCS_CREDENTIAL, JSON.stringify(ccsCredential), true);\n        }\n    }\n    /**\n     * Reset all temporary cache items\n     * @param state\n     */\n    resetRequestCache(state) {\n        this.logger.trace(\"BrowserCacheManager.resetRequestCache called\");\n        // check state and remove associated cache items\n        if (state) {\n            this.getKeys().forEach((key) => {\n                if (key.indexOf(state) !== -1) {\n                    this.removeItem(key);\n                }\n            });\n            // delete generic interactive request parameters\n            this.removeItem(this.generateStateKey(state));\n            this.removeItem(this.generateNonceKey(state));\n            this.removeItem(this.generateAuthorityKey(state));\n        }\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.URL_HASH));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.CORRELATION_ID));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.CCS_CREDENTIAL));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.NATIVE_REQUEST));\n        this.setInteractionInProgress(false);\n    }\n    /**\n     * Removes temporary cache for the provided state\n     * @param stateString\n     */\n    cleanRequestByState(stateString) {\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByState called\");\n        // Interaction is completed - remove interaction status.\n        if (stateString) {\n            const stateKey = this.generateStateKey(stateString);\n            const cachedState = this.temporaryCacheStorage.getItem(stateKey);\n            this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${cachedState}`);\n            this.resetRequestCache(cachedState || Constants.EMPTY_STRING);\n        }\n        this.clearMsalCookies();\n    }\n    /**\n     * Looks in temporary cache for any state values with the provided interactionType and removes all temporary cache items for that state\n     * Used in scenarios where temp cache needs to be cleaned but state is not known, such as clicking browser back button.\n     * @param interactionType\n     */\n    cleanRequestByInteractionType(interactionType) {\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByInteractionType called\");\n        // Loop through all keys to find state key\n        this.getKeys().forEach((key) => {\n            // If this key is not the state key, move on\n            if (key.indexOf(TemporaryCacheKeys.REQUEST_STATE) === -1) {\n                return;\n            }\n            // Retrieve state value, return if not a valid value\n            const stateValue = this.temporaryCacheStorage.getItem(key);\n            if (!stateValue) {\n                return;\n            }\n            // Extract state and ensure it matches given InteractionType, then clean request cache\n            const parsedState = BrowserProtocolUtils.extractBrowserRequestState(this.cryptoImpl, stateValue);\n            if (parsedState &&\n                parsedState.interactionType === interactionType) {\n                this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${stateValue}`);\n                this.resetRequestCache(stateValue);\n            }\n        });\n        this.clearMsalCookies();\n        this.setInteractionInProgress(false);\n    }\n    cacheCodeRequest(authCodeRequest) {\n        this.logger.trace(\"BrowserCacheManager.cacheCodeRequest called\");\n        const encodedValue = base64Encode(JSON.stringify(authCodeRequest));\n        this.setTemporaryCache(TemporaryCacheKeys.REQUEST_PARAMS, encodedValue, true);\n    }\n    /**\n     * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\n     */\n    getCachedRequest(state) {\n        this.logger.trace(\"BrowserCacheManager.getCachedRequest called\");\n        // Get token request from cache and parse as TokenExchangeParameters.\n        const encodedTokenRequest = this.getTemporaryCache(TemporaryCacheKeys.REQUEST_PARAMS, true);\n        if (!encodedTokenRequest) {\n            throw createBrowserAuthError(noTokenRequestCacheError);\n        }\n        let parsedRequest;\n        try {\n            parsedRequest = JSON.parse(base64Decode(encodedTokenRequest));\n        }\n        catch (e) {\n            this.logger.errorPii(`Attempted to parse: ${encodedTokenRequest}`);\n            this.logger.error(`Parsing cached token request threw with error: ${e}`);\n            throw createBrowserAuthError(unableToParseTokenRequestCacheError);\n        }\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\n        // Get cached authority and use if no authority is cached with request.\n        if (!parsedRequest.authority) {\n            const authorityCacheKey = this.generateAuthorityKey(state);\n            const cachedAuthority = this.getTemporaryCache(authorityCacheKey);\n            if (!cachedAuthority) {\n                throw createBrowserAuthError(noCachedAuthorityError);\n            }\n            parsedRequest.authority = cachedAuthority;\n        }\n        return parsedRequest;\n    }\n    /**\n     * Gets cached native request for redirect flows\n     */\n    getCachedNativeRequest() {\n        this.logger.trace(\"BrowserCacheManager.getCachedNativeRequest called\");\n        const cachedRequest = this.getTemporaryCache(TemporaryCacheKeys.NATIVE_REQUEST, true);\n        if (!cachedRequest) {\n            this.logger.trace(\"BrowserCacheManager.getCachedNativeRequest: No cached native request found\");\n            return null;\n        }\n        const parsedRequest = this.validateAndParseJson(cachedRequest);\n        if (!parsedRequest) {\n            this.logger.error(\"BrowserCacheManager.getCachedNativeRequest: Unable to parse native request\");\n            return null;\n        }\n        return parsedRequest;\n    }\n    isInteractionInProgress(matchClientId) {\n        const clientId = this.getInteractionInProgress();\n        if (matchClientId) {\n            return clientId === this.clientId;\n        }\n        else {\n            return !!clientId;\n        }\n    }\n    getInteractionInProgress() {\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\n        return this.getTemporaryCache(key, false);\n    }\n    setInteractionInProgress(inProgress) {\n        // Ensure we don't overwrite interaction in progress for a different clientId\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\n        if (inProgress) {\n            if (this.getInteractionInProgress()) {\n                throw createBrowserAuthError(interactionInProgress);\n            }\n            else {\n                // No interaction is in progress\n                this.setTemporaryCache(key, this.clientId, false);\n            }\n        }\n        else if (!inProgress &&\n            this.getInteractionInProgress() === this.clientId) {\n            this.removeItem(key);\n        }\n    }\n    /**\n     * Returns username retrieved from ADAL or MSAL v1 idToken\n     * @deprecated\n     */\n    getLegacyLoginHint() {\n        // Only check for adal/msal token if no SSO params are being used\n        const adalIdTokenString = this.getTemporaryCache(PersistentCacheKeys.ADAL_ID_TOKEN);\n        if (adalIdTokenString) {\n            this.browserStorage.removeItem(PersistentCacheKeys.ADAL_ID_TOKEN);\n            this.logger.verbose(\"Cached ADAL id token retrieved.\");\n        }\n        // Check for cached MSAL v1 id token\n        const msalIdTokenString = this.getTemporaryCache(PersistentCacheKeys.ID_TOKEN, true);\n        if (msalIdTokenString) {\n            this.removeItem(this.generateCacheKey(PersistentCacheKeys.ID_TOKEN));\n            this.logger.verbose(\"Cached MSAL.js v1 id token retrieved\");\n        }\n        const cachedIdTokenString = msalIdTokenString || adalIdTokenString;\n        if (cachedIdTokenString) {\n            const idTokenClaims = AuthToken.extractTokenClaims(cachedIdTokenString, base64Decode);\n            if (idTokenClaims.preferred_username) {\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint\");\n                return idTokenClaims.preferred_username;\n            }\n            else if (idTokenClaims.upn) {\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint\");\n                return idTokenClaims.upn;\n            }\n            else {\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.\");\n            }\n        }\n        return null;\n    }\n    /**\n     * Updates a credential's cache key if the current cache key is outdated\n     */\n    updateCredentialCacheKey(currentCacheKey, credential) {\n        const updatedCacheKey = credential.generateCredentialKey();\n        if (currentCacheKey !== updatedCacheKey) {\n            const cacheItem = this.getItem(currentCacheKey);\n            if (cacheItem) {\n                this.removeItem(currentCacheKey);\n                this.setItem(updatedCacheKey, cacheItem);\n                this.logger.verbose(`Updated an outdated ${credential.credentialType} cache key`);\n                return updatedCacheKey;\n            }\n            else {\n                this.logger.error(`Attempted to update an outdated ${credential.credentialType} cache key but no item matching the outdated key was found in storage`);\n            }\n        }\n        return currentCacheKey;\n    }\n    /**\n     * Returns application id as redirect context during AcquireTokenRedirect flow.\n     */\n    getRedirectRequestContext() {\n        return this.getTemporaryCache(TemporaryCacheKeys.REDIRECT_CONTEXT, true);\n    }\n    /**\n     * Sets application id as the redirect context during AcquireTokenRedirect flow.\n     * @param value\n     */\n    setRedirectRequestContext(value) {\n        this.setTemporaryCache(TemporaryCacheKeys.REDIRECT_CONTEXT, value, true);\n    }\n    /**\n     * Builds credential entities from AuthenticationResult object and saves the resulting credentials to the cache\n     * @param result\n     * @param request\n     */\n    async hydrateCache(result, request) {\n        const idTokenEntity = IdTokenEntity.createIdTokenEntity(result.account?.homeAccountId, result.account?.environment, result.idToken, this.clientId, result.tenantId);\n        let claimsHash;\n        if (request.claims) {\n            claimsHash = await this.cryptoImpl.hashString(request.claims);\n        }\n        const accessTokenEntity = AccessTokenEntity.createAccessTokenEntity(result.account?.homeAccountId, result.account.environment, result.accessToken, this.clientId, result.tenantId, result.scopes.join(\" \"), result.expiresOn?.getTime() || 0, result.extExpiresOn?.getTime() || 0, this.cryptoImpl, undefined, // refreshOn\n        result.tokenType, undefined, // userAssertionHash\n        request.sshKid, request.claims, claimsHash);\n        const cacheRecord = new CacheRecord(undefined, idTokenEntity, accessTokenEntity);\n        return this.saveCacheRecord(cacheRecord);\n    }\n}\nconst DEFAULT_BROWSER_CACHE_MANAGER = (clientId, logger) => {\n    const cacheOptions = {\n        cacheLocation: BrowserCacheLocation.MemoryStorage,\n        temporaryCacheLocation: BrowserCacheLocation.MemoryStorage,\n        storeAuthStateInCookie: false,\n        secureCookies: false,\n        cacheMigrationEnabled: false,\n        claimsBasedCachingEnabled: false,\n    };\n    return new BrowserCacheManager(clientId, cacheOptions, DEFAULT_CRYPTO_IMPLEMENTATION, logger);\n};\n\nexport { BrowserCacheManager, DEFAULT_BROWSER_CACHE_MANAGER };\n//# sourceMappingURL=BrowserCacheManager.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { createBrowserConfigurationAuthError } from '../error/BrowserConfigurationAuthError.mjs';\nimport { BrowserCacheLocation } from '../utils/BrowserConstants.mjs';\nimport { storageNotSupported } from '../error/BrowserConfigurationAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass BrowserStorage {\n    constructor(cacheLocation) {\n        this.validateWindowStorage(cacheLocation);\n        this.windowStorage = window[cacheLocation];\n    }\n    validateWindowStorage(cacheLocation) {\n        if ((cacheLocation !== BrowserCacheLocation.LocalStorage &&\n            cacheLocation !== BrowserCacheLocation.SessionStorage) ||\n            !window[cacheLocation]) {\n            throw createBrowserConfigurationAuthError(storageNotSupported);\n        }\n    }\n    getItem(key) {\n        return this.windowStorage.getItem(key);\n    }\n    setItem(key, value) {\n        this.windowStorage.setItem(key, value);\n    }\n    removeItem(key) {\n        this.windowStorage.removeItem(key);\n    }\n    getKeys() {\n        return Object.keys(this.windowStorage);\n    }\n    containsKey(key) {\n        return this.windowStorage.hasOwnProperty(key);\n    }\n}\n\nexport { BrowserStorage };\n//# sourceMappingURL=BrowserStorage.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass MemoryStorage {\n    constructor() {\n        this.cache = new Map();\n    }\n    getItem(key) {\n        return this.cache.get(key) || null;\n    }\n    setItem(key, value) {\n        this.cache.set(key, value);\n    }\n    removeItem(key) {\n        this.cache.delete(key);\n    }\n    getKeys() {\n        const cacheKeys = [];\n        this.cache.forEach((value, key) => {\n            cacheKeys.push(key);\n        });\n        return cacheKeys;\n    }\n    containsKey(key) {\n        return this.cache.has(key);\n    }\n    clear() {\n        this.cache.clear();\n    }\n}\n\nexport { MemoryStorage };\n//# sourceMappingURL=MemoryStorage.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { methodNotImplemented } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst StubbedNetworkModule = {\n    sendGetRequestAsync: () => {\n        return Promise.reject(createClientAuthError(methodNotImplemented));\n    },\n    sendPostRequestAsync: () => {\n        return Promise.reject(createClientAuthError(methodNotImplemented));\n    },\n};\n\nexport { StubbedNetworkModule };\n//# sourceMappingURL=INetworkModule.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { PerformanceEventStatus } from './PerformanceEvent.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass StubPerformanceMeasurement {\n    startMeasurement() {\n        return;\n    }\n    endMeasurement() {\n        return;\n    }\n    flushMeasurement() {\n        return null;\n    }\n}\nclass StubPerformanceClient {\n    generateId() {\n        return \"callback-id\";\n    }\n    startMeasurement(measureName, correlationId) {\n        return {\n            end: () => null,\n            discard: () => { },\n            add: () => { },\n            increment: () => { },\n            event: {\n                eventId: this.generateId(),\n                status: PerformanceEventStatus.InProgress,\n                authority: \"\",\n                libraryName: \"\",\n                libraryVersion: \"\",\n                clientId: \"\",\n                name: measureName,\n                startTimeMs: Date.now(),\n                correlationId: correlationId || \"\",\n            },\n            measurement: new StubPerformanceMeasurement(),\n        };\n    }\n    startPerformanceMeasurement() {\n        return new StubPerformanceMeasurement();\n    }\n    calculateQueuedTime() {\n        return 0;\n    }\n    addQueueMeasurement() {\n        return;\n    }\n    setPreQueueTime() {\n        return;\n    }\n    endMeasurement() {\n        return null;\n    }\n    discardMeasurements() {\n        return;\n    }\n    removePerformanceCallback() {\n        return true;\n    }\n    addPerformanceCallback() {\n        return \"\";\n    }\n    emitEvents() {\n        return;\n    }\n    addFields() {\n        return;\n    }\n    incrementFields() {\n        return;\n    }\n    cacheEventByCorrelationId() {\n        return;\n    }\n}\n\nexport { StubPerformanceClient, StubPerformanceMeasurement };\n//# sourceMappingURL=StubPerformanceClient.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { Constants } from '@azure/msal-common';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { HTTP_REQUEST_TYPE } from '../utils/BrowserConstants.mjs';\nimport { getRequestFailed, noNetworkConnectivity, failedToParseResponse, postRequestFailed } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n */\nclass FetchClient {\n    /**\n     * Fetch Client for REST endpoints - Get request\n     * @param url\n     * @param headers\n     * @param body\n     */\n    async sendGetRequestAsync(url, options) {\n        let response;\n        try {\n            response = await fetch(url, {\n                method: HTTP_REQUEST_TYPE.GET,\n                headers: this.getFetchHeaders(options),\n            });\n        }\n        catch (e) {\n            if (window.navigator.onLine) {\n                throw createBrowserAuthError(getRequestFailed);\n            }\n            else {\n                throw createBrowserAuthError(noNetworkConnectivity);\n            }\n        }\n        try {\n            return {\n                headers: this.getHeaderDict(response.headers),\n                body: (await response.json()),\n                status: response.status,\n            };\n        }\n        catch (e) {\n            throw createBrowserAuthError(failedToParseResponse);\n        }\n    }\n    /**\n     * Fetch Client for REST endpoints - Post request\n     * @param url\n     * @param headers\n     * @param body\n     */\n    async sendPostRequestAsync(url, options) {\n        const reqBody = (options && options.body) || Constants.EMPTY_STRING;\n        let response;\n        try {\n            response = await fetch(url, {\n                method: HTTP_REQUEST_TYPE.POST,\n                headers: this.getFetchHeaders(options),\n                body: reqBody,\n            });\n        }\n        catch (e) {\n            if (window.navigator.onLine) {\n                throw createBrowserAuthError(postRequestFailed);\n            }\n            else {\n                throw createBrowserAuthError(noNetworkConnectivity);\n            }\n        }\n        try {\n            return {\n                headers: this.getHeaderDict(response.headers),\n                body: (await response.json()),\n                status: response.status,\n            };\n        }\n        catch (e) {\n            throw createBrowserAuthError(failedToParseResponse);\n        }\n    }\n    /**\n     * Get Fetch API Headers object from string map\n     * @param inputHeaders\n     */\n    getFetchHeaders(options) {\n        const headers = new Headers();\n        if (!(options && options.headers)) {\n            return headers;\n        }\n        const optionsHeaders = options.headers;\n        Object.keys(optionsHeaders).forEach((key) => {\n            headers.append(key, optionsHeaders[key]);\n        });\n        return headers;\n    }\n    getHeaderDict(headers) {\n        const headerDict = {};\n        headers.forEach((value, key) => {\n            headerDict[key] = value;\n        });\n        return headerDict;\n    }\n}\n\nexport { FetchClient };\n//# sourceMappingURL=FetchClient.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { Constants, StubPerformanceClient, ProtocolMode, Logger, createClientConfigurationError, ClientConfigurationErrorCodes, ServerResponseType, AzureCloudInstance, LogLevel, DEFAULT_SYSTEM_OPTIONS, StubbedNetworkModule } from '@azure/msal-common';\nimport { BrowserCacheLocation, BrowserConstants } from '../utils/BrowserConstants.mjs';\nimport { NavigationClient } from '../navigation/NavigationClient.mjs';\nimport { FetchClient } from '../network/FetchClient.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n// Default timeout for popup windows and iframes in milliseconds\nconst DEFAULT_POPUP_TIMEOUT_MS = 60000;\nconst DEFAULT_IFRAME_TIMEOUT_MS = 6000;\nconst DEFAULT_REDIRECT_TIMEOUT_MS = 30000;\nconst DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS = 2000;\n/**\n * MSAL function that sets the default options when not explicitly configured from app developer\n *\n * @param auth\n * @param cache\n * @param system\n *\n * @returns Configuration object\n */\nfunction buildConfiguration({ auth: userInputAuth, cache: userInputCache, system: userInputSystem, telemetry: userInputTelemetry, }, isBrowserEnvironment) {\n    // Default auth options for browser\n    const DEFAULT_AUTH_OPTIONS = {\n        clientId: Constants.EMPTY_STRING,\n        authority: `${Constants.DEFAULT_AUTHORITY}`,\n        knownAuthorities: [],\n        cloudDiscoveryMetadata: Constants.EMPTY_STRING,\n        authorityMetadata: Constants.EMPTY_STRING,\n        redirectUri: Constants.EMPTY_STRING,\n        postLogoutRedirectUri: Constants.EMPTY_STRING,\n        navigateToLoginRequestUrl: true,\n        clientCapabilities: [],\n        protocolMode: ProtocolMode.AAD,\n        OIDCOptions: {\n            serverResponseType: ServerResponseType.FRAGMENT,\n            defaultScopes: [\n                Constants.OPENID_SCOPE,\n                Constants.PROFILE_SCOPE,\n                Constants.OFFLINE_ACCESS_SCOPE,\n            ],\n        },\n        azureCloudOptions: {\n            azureCloudInstance: AzureCloudInstance.None,\n            tenant: Constants.EMPTY_STRING,\n        },\n        skipAuthorityMetadataCache: false,\n        supportsNestedAppAuth: false,\n    };\n    // Default cache options for browser\n    const DEFAULT_CACHE_OPTIONS = {\n        cacheLocation: BrowserCacheLocation.SessionStorage,\n        temporaryCacheLocation: BrowserCacheLocation.SessionStorage,\n        storeAuthStateInCookie: false,\n        secureCookies: false,\n        // Default cache migration to true if cache location is localStorage since entries are preserved across tabs/windows. Migration has little to no benefit in sessionStorage and memoryStorage\n        cacheMigrationEnabled: userInputCache &&\n            userInputCache.cacheLocation === BrowserCacheLocation.LocalStorage\n            ? true\n            : false,\n        claimsBasedCachingEnabled: false,\n    };\n    // Default logger options for browser\n    const DEFAULT_LOGGER_OPTIONS = {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        loggerCallback: () => {\n            // allow users to not set logger call back\n        },\n        logLevel: LogLevel.Info,\n        piiLoggingEnabled: false,\n    };\n    // Default system options for browser\n    const DEFAULT_BROWSER_SYSTEM_OPTIONS = {\n        ...DEFAULT_SYSTEM_OPTIONS,\n        loggerOptions: DEFAULT_LOGGER_OPTIONS,\n        networkClient: isBrowserEnvironment\n            ? new FetchClient()\n            : StubbedNetworkModule,\n        navigationClient: new NavigationClient(),\n        loadFrameTimeout: 0,\n        // If loadFrameTimeout is provided, use that as default.\n        windowHashTimeout: userInputSystem?.loadFrameTimeout || DEFAULT_POPUP_TIMEOUT_MS,\n        iframeHashTimeout: userInputSystem?.loadFrameTimeout || DEFAULT_IFRAME_TIMEOUT_MS,\n        navigateFrameWait: 0,\n        redirectNavigationTimeout: DEFAULT_REDIRECT_TIMEOUT_MS,\n        asyncPopups: false,\n        allowRedirectInIframe: false,\n        allowNativeBroker: false,\n        nativeBrokerHandshakeTimeout: userInputSystem?.nativeBrokerHandshakeTimeout ||\n            DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS,\n        pollIntervalMilliseconds: BrowserConstants.DEFAULT_POLL_INTERVAL_MS,\n    };\n    const providedSystemOptions = {\n        ...DEFAULT_BROWSER_SYSTEM_OPTIONS,\n        ...userInputSystem,\n        loggerOptions: userInputSystem?.loggerOptions || DEFAULT_LOGGER_OPTIONS,\n    };\n    const DEFAULT_TELEMETRY_OPTIONS = {\n        application: {\n            appName: Constants.EMPTY_STRING,\n            appVersion: Constants.EMPTY_STRING,\n        },\n        client: new StubPerformanceClient(),\n    };\n    // Throw an error if user has set OIDCOptions without being in OIDC protocol mode\n    if (userInputAuth?.protocolMode !== ProtocolMode.OIDC &&\n        userInputAuth?.OIDCOptions) {\n        const logger = new Logger(providedSystemOptions.loggerOptions);\n        logger.warning(JSON.stringify(createClientConfigurationError(ClientConfigurationErrorCodes.cannotSetOIDCOptions)));\n    }\n    // Throw an error if user has set allowNativeBroker to true without being in AAD protocol mode\n    if (userInputAuth?.protocolMode &&\n        userInputAuth.protocolMode !== ProtocolMode.AAD &&\n        providedSystemOptions?.allowNativeBroker) {\n        throw createClientConfigurationError(ClientConfigurationErrorCodes.cannotAllowNativeBroker);\n    }\n    const overlayedConfig = {\n        auth: {\n            ...DEFAULT_AUTH_OPTIONS,\n            ...userInputAuth,\n            OIDCOptions: {\n                ...DEFAULT_AUTH_OPTIONS.OIDCOptions,\n                ...userInputAuth?.OIDCOptions,\n            },\n        },\n        cache: { ...DEFAULT_CACHE_OPTIONS, ...userInputCache },\n        system: providedSystemOptions,\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...userInputTelemetry },\n    };\n    return overlayedConfig;\n}\n\nexport { DEFAULT_IFRAME_TIMEOUT_MS, DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS, DEFAULT_POPUP_TIMEOUT_MS, DEFAULT_REDIRECT_TIMEOUT_MS, buildConfiguration };\n//# sourceMappingURL=Configuration.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nfunction isOpenIdConfigResponse(response) {\n    return (response.hasOwnProperty(\"authorization_endpoint\") &&\n        response.hasOwnProperty(\"token_endpoint\") &&\n        response.hasOwnProperty(\"issuer\") &&\n        response.hasOwnProperty(\"jwks_uri\"));\n}\n\nexport { isOpenIdConfigResponse };\n//# sourceMappingURL=OpenIdConfigResponse.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nfunction isCloudInstanceDiscoveryResponse(response) {\n    return (response.hasOwnProperty(\"tenant_discovery_endpoint\") &&\n        response.hasOwnProperty(\"metadata\"));\n}\n\nexport { isCloudInstanceDiscoveryResponse };\n//# sourceMappingURL=CloudInstanceDiscoveryResponse.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nfunction isCloudInstanceDiscoveryErrorResponse(response) {\n    return (response.hasOwnProperty(\"error\") &&\n        response.hasOwnProperty(\"error_description\"));\n}\n\nexport { isCloudInstanceDiscoveryErrorResponse };\n//# sourceMappingURL=CloudInstanceDiscoveryErrorResponse.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { Constants, ResponseCodes, RegionDiscoverySources } from '../utils/Constants.mjs';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\nimport { invokeAsync } from '../utils/FunctionWrappers.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass RegionDiscovery {\n    constructor(networkInterface, logger, performanceClient, correlationId) {\n        this.networkInterface = networkInterface;\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n        this.correlationId = correlationId;\n    }\n    /**\n     * Detect the region from the application's environment.\n     *\n     * @returns Promise<string | null>\n     */\n    async detectRegion(environmentRegion, regionDiscoveryMetadata) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RegionDiscoveryDetectRegion, this.correlationId);\n        // Initialize auto detected region with the region from the envrionment\n        let autodetectedRegionName = environmentRegion;\n        // Check if a region was detected from the environment, if not, attempt to get the region from IMDS\n        if (!autodetectedRegionName) {\n            const options = RegionDiscovery.IMDS_OPTIONS;\n            try {\n                const localIMDSVersionResponse = await invokeAsync(this.getRegionFromIMDS.bind(this), PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.logger, this.performanceClient, this.correlationId)(Constants.IMDS_VERSION, options);\n                if (localIMDSVersionResponse.status ===\n                    ResponseCodes.httpSuccess) {\n                    autodetectedRegionName = localIMDSVersionResponse.body;\n                    regionDiscoveryMetadata.region_source =\n                        RegionDiscoverySources.IMDS;\n                }\n                // If the response using the local IMDS version failed, try to fetch the current version of IMDS and retry.\n                if (localIMDSVersionResponse.status ===\n                    ResponseCodes.httpBadRequest) {\n                    const currentIMDSVersion = await invokeAsync(this.getCurrentVersion.bind(this), PerformanceEvents.RegionDiscoveryGetCurrentVersion, this.logger, this.performanceClient, this.correlationId)(options);\n                    if (!currentIMDSVersion) {\n                        regionDiscoveryMetadata.region_source =\n                            RegionDiscoverySources.FAILED_AUTO_DETECTION;\n                        return null;\n                    }\n                    const currentIMDSVersionResponse = await invokeAsync(this.getRegionFromIMDS.bind(this), PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.logger, this.performanceClient, this.correlationId)(currentIMDSVersion, options);\n                    if (currentIMDSVersionResponse.status ===\n                        ResponseCodes.httpSuccess) {\n                        autodetectedRegionName =\n                            currentIMDSVersionResponse.body;\n                        regionDiscoveryMetadata.region_source =\n                            RegionDiscoverySources.IMDS;\n                    }\n                }\n            }\n            catch (e) {\n                regionDiscoveryMetadata.region_source =\n                    RegionDiscoverySources.FAILED_AUTO_DETECTION;\n                return null;\n            }\n        }\n        else {\n            regionDiscoveryMetadata.region_source =\n                RegionDiscoverySources.ENVIRONMENT_VARIABLE;\n        }\n        // If no region was auto detected from the environment or from the IMDS endpoint, mark the attempt as a FAILED_AUTO_DETECTION\n        if (!autodetectedRegionName) {\n            regionDiscoveryMetadata.region_source =\n                RegionDiscoverySources.FAILED_AUTO_DETECTION;\n        }\n        return autodetectedRegionName || null;\n    }\n    /**\n     * Make the call to the IMDS endpoint\n     *\n     * @param imdsEndpointUrl\n     * @returns Promise<NetworkResponse<string>>\n     */\n    async getRegionFromIMDS(version, options) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.correlationId);\n        return this.networkInterface.sendGetRequestAsync(`${Constants.IMDS_ENDPOINT}?api-version=${version}&format=text`, options, Constants.IMDS_TIMEOUT);\n    }\n    /**\n     * Get the most recent version of the IMDS endpoint available\n     *\n     * @returns Promise<string | null>\n     */\n    async getCurrentVersion(options) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RegionDiscoveryGetCurrentVersion, this.correlationId);\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync(`${Constants.IMDS_ENDPOINT}?format=json`, options);\n            // When IMDS endpoint is called without the api version query param, bad request response comes back with latest version.\n            if (response.status === ResponseCodes.httpBadRequest &&\n                response.body &&\n                response.body[\"newest-versions\"] &&\n                response.body[\"newest-versions\"].length > 0) {\n                return response.body[\"newest-versions\"][0];\n            }\n            return null;\n        }\n        catch (e) {\n            return null;\n        }\n    }\n}\n// Options for the IMDS endpoint request\nRegionDiscovery.IMDS_OPTIONS = {\n    headers: {\n        Metadata: \"true\",\n    },\n};\n\nexport { RegionDiscovery };\n//# sourceMappingURL=RegionDiscovery.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { AuthorityType } from './AuthorityType.mjs';\nimport { isOpenIdConfigResponse } from './OpenIdConfigResponse.mjs';\nimport { UrlString } from '../url/UrlString.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { Constants, AuthorityMetadataSource, RegionDiscoveryOutcomes, AADAuthorityConstants } from '../utils/Constants.mjs';\nimport { EndpointMetadata, getCloudDiscoveryMetadataFromHardcodedValues, getCloudDiscoveryMetadataFromNetworkResponse, InstanceDiscoveryMetadataAliases } from './AuthorityMetadata.mjs';\nimport { createClientConfigurationError } from '../error/ClientConfigurationError.mjs';\nimport { ProtocolMode } from './ProtocolMode.mjs';\nimport { AuthorityMetadataEntity } from '../cache/entities/AuthorityMetadataEntity.mjs';\nimport { AzureCloudInstance } from './AuthorityOptions.mjs';\nimport { isCloudInstanceDiscoveryResponse } from './CloudInstanceDiscoveryResponse.mjs';\nimport { isCloudInstanceDiscoveryErrorResponse } from './CloudInstanceDiscoveryErrorResponse.mjs';\nimport { RegionDiscovery } from './RegionDiscovery.mjs';\nimport { AuthError } from '../error/AuthError.mjs';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\nimport { invokeAsync } from '../utils/FunctionWrappers.mjs';\nimport { endpointResolutionError, endSessionEndpointNotSupported, openIdConfigError } from '../error/ClientAuthErrorCodes.mjs';\nimport { invalidAuthorityMetadata, untrustedAuthority, invalidCloudDiscoveryMetadata } from '../error/ClientConfigurationErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\n * endpoint. It will store the pertinent config data in this object for use during token calls.\n * @internal\n */\nclass Authority {\n    constructor(authority, networkInterface, cacheManager, authorityOptions, logger, performanceClient, correlationId) {\n        this.canonicalAuthority = authority;\n        this._canonicalAuthority.validateAsUri();\n        this.networkInterface = networkInterface;\n        this.cacheManager = cacheManager;\n        this.authorityOptions = authorityOptions;\n        this.regionDiscoveryMetadata = {\n            region_used: undefined,\n            region_source: undefined,\n            region_outcome: undefined,\n        };\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n        this.correlationId = correlationId;\n        this.regionDiscovery = new RegionDiscovery(networkInterface, this.logger, this.performanceClient, this.correlationId);\n    }\n    /**\n     * Get {@link AuthorityType}\n     * @param authorityUri {@link IUri}\n     * @private\n     */\n    getAuthorityType(authorityUri) {\n        // CIAM auth url pattern is being standardized as: <tenant>.ciamlogin.com\n        if (authorityUri.HostNameAndPort.endsWith(Constants.CIAM_AUTH_URL)) {\n            return AuthorityType.Ciam;\n        }\n        const pathSegments = authorityUri.PathSegments;\n        if (pathSegments.length) {\n            switch (pathSegments[0].toLowerCase()) {\n                case Constants.ADFS:\n                    return AuthorityType.Adfs;\n                case Constants.DSTS:\n                    return AuthorityType.Dsts;\n            }\n        }\n        return AuthorityType.Default;\n    }\n    // See above for AuthorityType\n    get authorityType() {\n        return this.getAuthorityType(this.canonicalAuthorityUrlComponents);\n    }\n    /**\n     * ProtocolMode enum representing the way endpoints are constructed.\n     */\n    get protocolMode() {\n        return this.authorityOptions.protocolMode;\n    }\n    /**\n     * Returns authorityOptions which can be used to reinstantiate a new authority instance\n     */\n    get options() {\n        return this.authorityOptions;\n    }\n    /**\n     * A URL that is the authority set by the developer\n     */\n    get canonicalAuthority() {\n        return this._canonicalAuthority.urlString;\n    }\n    /**\n     * Sets canonical authority.\n     */\n    set canonicalAuthority(url) {\n        this._canonicalAuthority = new UrlString(url);\n        this._canonicalAuthority.validateAsUri();\n        this._canonicalAuthorityUrlComponents = null;\n    }\n    /**\n     * Get authority components.\n     */\n    get canonicalAuthorityUrlComponents() {\n        if (!this._canonicalAuthorityUrlComponents) {\n            this._canonicalAuthorityUrlComponents =\n                this._canonicalAuthority.getUrlComponents();\n        }\n        return this._canonicalAuthorityUrlComponents;\n    }\n    /**\n     * Get hostname and port i.e. login.microsoftonline.com\n     */\n    get hostnameAndPort() {\n        return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase();\n    }\n    /**\n     * Get tenant for authority.\n     */\n    get tenant() {\n        return this.canonicalAuthorityUrlComponents.PathSegments[0];\n    }\n    /**\n     * OAuth /authorize endpoint for requests\n     */\n    get authorizationEndpoint() {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.authorization_endpoint);\n        }\n        else {\n            throw createClientAuthError(endpointResolutionError);\n        }\n    }\n    /**\n     * OAuth /token endpoint for requests\n     */\n    get tokenEndpoint() {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.token_endpoint);\n        }\n        else {\n            throw createClientAuthError(endpointResolutionError);\n        }\n    }\n    get deviceCodeEndpoint() {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.token_endpoint.replace(\"/token\", \"/devicecode\"));\n        }\n        else {\n            throw createClientAuthError(endpointResolutionError);\n        }\n    }\n    /**\n     * OAuth logout endpoint for requests\n     */\n    get endSessionEndpoint() {\n        if (this.discoveryComplete()) {\n            // ROPC policies may not have end_session_endpoint set\n            if (!this.metadata.end_session_endpoint) {\n                throw createClientAuthError(endSessionEndpointNotSupported);\n            }\n            return this.replacePath(this.metadata.end_session_endpoint);\n        }\n        else {\n            throw createClientAuthError(endpointResolutionError);\n        }\n    }\n    /**\n     * OAuth issuer for requests\n     */\n    get selfSignedJwtAudience() {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.issuer);\n        }\n        else {\n            throw createClientAuthError(endpointResolutionError);\n        }\n    }\n    /**\n     * Jwks_uri for token signing keys\n     */\n    get jwksUri() {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.jwks_uri);\n        }\n        else {\n            throw createClientAuthError(endpointResolutionError);\n        }\n    }\n    /**\n     * Returns a flag indicating that tenant name can be replaced in authority {@link IUri}\n     * @param authorityUri {@link IUri}\n     * @private\n     */\n    canReplaceTenant(authorityUri) {\n        return (authorityUri.PathSegments.length === 1 &&\n            !Authority.reservedTenantDomains.has(authorityUri.PathSegments[0]) &&\n            this.getAuthorityType(authorityUri) === AuthorityType.Default &&\n            this.protocolMode === ProtocolMode.AAD);\n    }\n    /**\n     * Replaces tenant in url path with current tenant. Defaults to common.\n     * @param urlString\n     */\n    replaceTenant(urlString) {\n        return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\n    }\n    /**\n     * Replaces path such as tenant or policy with the current tenant or policy.\n     * @param urlString\n     */\n    replacePath(urlString) {\n        let endpoint = urlString;\n        const cachedAuthorityUrl = new UrlString(this.metadata.canonical_authority);\n        const cachedAuthorityUrlComponents = cachedAuthorityUrl.getUrlComponents();\n        const cachedAuthorityParts = cachedAuthorityUrlComponents.PathSegments;\n        const currentAuthorityParts = this.canonicalAuthorityUrlComponents.PathSegments;\n        currentAuthorityParts.forEach((currentPart, index) => {\n            let cachedPart = cachedAuthorityParts[index];\n            if (index === 0 &&\n                this.canReplaceTenant(cachedAuthorityUrlComponents)) {\n                const tenantId = new UrlString(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];\n                /**\n                 * Check if AAD canonical authority contains tenant domain name, for example \"testdomain.onmicrosoft.com\",\n                 * by comparing its first path segment to the corresponding authorization endpoint path segment, which is\n                 * always resolved with tenant id by OIDC.\n                 */\n                if (cachedPart !== tenantId) {\n                    this.logger.verbose(`Replacing tenant domain name ${cachedPart} with id ${tenantId}`);\n                    cachedPart = tenantId;\n                }\n            }\n            if (currentPart !== cachedPart) {\n                endpoint = endpoint.replace(`/${cachedPart}/`, `/${currentPart}/`);\n            }\n        });\n        return this.replaceTenant(endpoint);\n    }\n    /**\n     * The default open id configuration endpoint for any canonical authority.\n     */\n    get defaultOpenIdConfigurationEndpoint() {\n        const canonicalAuthorityHost = this.hostnameAndPort;\n        if (this.canonicalAuthority.endsWith(\"v2.0/\") ||\n            this.authorityType === AuthorityType.Adfs ||\n            (this.protocolMode !== ProtocolMode.AAD &&\n                !this.isAliasOfKnownMicrosoftAuthority(canonicalAuthorityHost))) {\n            return `${this.canonicalAuthority}.well-known/openid-configuration`;\n        }\n        return `${this.canonicalAuthority}v2.0/.well-known/openid-configuration`;\n    }\n    /**\n     * Boolean that returns whethr or not tenant discovery has been completed.\n     */\n    discoveryComplete() {\n        return !!this.metadata;\n    }\n    /**\n     * Perform endpoint discovery to discover aliases, preferred_cache, preferred_network\n     * and the /authorize, /token and logout endpoints.\n     */\n    async resolveEndpointsAsync() {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityResolveEndpointsAsync, this.correlationId);\n        const metadataEntity = this.getCurrentMetadataEntity();\n        const cloudDiscoverySource = await invokeAsync(this.updateCloudDiscoveryMetadata.bind(this), PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata, this.logger, this.performanceClient, this.correlationId)(metadataEntity);\n        this.canonicalAuthority = this.canonicalAuthority.replace(this.hostnameAndPort, metadataEntity.preferred_network);\n        const endpointSource = await invokeAsync(this.updateEndpointMetadata.bind(this), PerformanceEvents.AuthorityUpdateEndpointMetadata, this.logger, this.performanceClient, this.correlationId)(metadataEntity);\n        this.updateCachedMetadata(metadataEntity, cloudDiscoverySource, {\n            source: endpointSource,\n        });\n    }\n    /**\n     * Returns metadata entity from cache if it exists, otherwiser returns a new metadata entity built\n     * from the configured canonical authority\n     * @returns\n     */\n    getCurrentMetadataEntity() {\n        let metadataEntity = this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);\n        if (!metadataEntity) {\n            metadataEntity = new AuthorityMetadataEntity();\n            metadataEntity.updateCanonicalAuthority(this.canonicalAuthority);\n        }\n        return metadataEntity;\n    }\n    /**\n     * Updates cached metadata based on metadata source and sets the instance's metadata\n     * property to the same value\n     * @param metadataEntity\n     * @param cloudDiscoverySource\n     * @param endpointMetadataResult\n     */\n    updateCachedMetadata(metadataEntity, cloudDiscoverySource, endpointMetadataResult) {\n        if (cloudDiscoverySource !== AuthorityMetadataSource.CACHE &&\n            endpointMetadataResult?.source !== AuthorityMetadataSource.CACHE) {\n            // Reset the expiration time unless both values came from a successful cache lookup\n            metadataEntity.resetExpiresAt();\n            metadataEntity.updateCanonicalAuthority(this.canonicalAuthority);\n        }\n        const cacheKey = this.cacheManager.generateAuthorityMetadataCacheKey(metadataEntity.preferred_cache);\n        this.cacheManager.setAuthorityMetadata(cacheKey, metadataEntity);\n        this.metadata = metadataEntity;\n    }\n    /**\n     * Update AuthorityMetadataEntity with new endpoints and return where the information came from\n     * @param metadataEntity\n     */\n    async updateEndpointMetadata(metadataEntity) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityUpdateEndpointMetadata, this.correlationId);\n        const localMetadata = this.updateEndpointMetadataFromLocalSources(metadataEntity);\n        // Further update may be required for hardcoded metadata if regional metadata is preferred\n        if (localMetadata) {\n            if (localMetadata.source ===\n                AuthorityMetadataSource.HARDCODED_VALUES) {\n                // If the user prefers to use an azure region replace the global endpoints with regional information.\n                if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\n                    if (localMetadata.metadata) {\n                        const hardcodedMetadata = await invokeAsync(this.updateMetadataWithRegionalInformation.bind(this), PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.logger, this.performanceClient, this.correlationId)(localMetadata.metadata);\n                        metadataEntity.updateEndpointMetadata(hardcodedMetadata, false);\n                    }\n                }\n            }\n            return localMetadata.source;\n        }\n        // Get metadata from network if local sources aren't available\n        let metadata = await invokeAsync(this.getEndpointMetadataFromNetwork.bind(this), PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork, this.logger, this.performanceClient, this.correlationId)();\n        if (metadata) {\n            // If the user prefers to use an azure region replace the global endpoints with regional information.\n            if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\n                metadata = await invokeAsync(this.updateMetadataWithRegionalInformation.bind(this), PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.logger, this.performanceClient, this.correlationId)(metadata);\n            }\n            metadataEntity.updateEndpointMetadata(metadata, true);\n            return AuthorityMetadataSource.NETWORK;\n        }\n        else {\n            // Metadata could not be obtained from the config, cache, network or hardcoded values\n            throw createClientAuthError(openIdConfigError, this.defaultOpenIdConfigurationEndpoint);\n        }\n    }\n    /**\n     * Updates endpoint metadata from local sources and returns where the information was retrieved from and the metadata config\n     * response if the source is hardcoded metadata\n     * @param metadataEntity\n     * @returns\n     */\n    updateEndpointMetadataFromLocalSources(metadataEntity) {\n        this.logger.verbose(\"Attempting to get endpoint metadata from authority configuration\");\n        const configMetadata = this.getEndpointMetadataFromConfig();\n        if (configMetadata) {\n            this.logger.verbose(\"Found endpoint metadata in authority configuration\");\n            metadataEntity.updateEndpointMetadata(configMetadata, false);\n            return {\n                source: AuthorityMetadataSource.CONFIG,\n            };\n        }\n        this.logger.verbose(\"Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values.\");\n        // skipAuthorityMetadataCache is used to bypass hardcoded authority metadata and force a network metadata cache lookup and network metadata request if no cached response is available.\n        if (this.authorityOptions.skipAuthorityMetadataCache) {\n            this.logger.verbose(\"Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.\");\n        }\n        else {\n            const hardcodedMetadata = this.getEndpointMetadataFromHardcodedValues();\n            if (hardcodedMetadata) {\n                metadataEntity.updateEndpointMetadata(hardcodedMetadata, false);\n                return {\n                    source: AuthorityMetadataSource.HARDCODED_VALUES,\n                    metadata: hardcodedMetadata,\n                };\n            }\n            else {\n                this.logger.verbose(\"Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.\");\n            }\n        }\n        // Check cached metadata entity expiration status\n        const metadataEntityExpired = metadataEntity.isExpired();\n        if (this.isAuthoritySameType(metadataEntity) &&\n            metadataEntity.endpointsFromNetwork &&\n            !metadataEntityExpired) {\n            // No need to update\n            this.logger.verbose(\"Found endpoint metadata in the cache.\");\n            return { source: AuthorityMetadataSource.CACHE };\n        }\n        else if (metadataEntityExpired) {\n            this.logger.verbose(\"The metadata entity is expired.\");\n        }\n        return null;\n    }\n    /**\n     * Compares the number of url components after the domain to determine if the cached\n     * authority metadata can be used for the requested authority. Protects against same domain different\n     * authority such as login.microsoftonline.com/tenant and login.microsoftonline.com/tfp/tenant/policy\n     * @param metadataEntity\n     */\n    isAuthoritySameType(metadataEntity) {\n        const cachedAuthorityUrl = new UrlString(metadataEntity.canonical_authority);\n        const cachedParts = cachedAuthorityUrl.getUrlComponents().PathSegments;\n        return (cachedParts.length ===\n            this.canonicalAuthorityUrlComponents.PathSegments.length);\n    }\n    /**\n     * Parse authorityMetadata config option\n     */\n    getEndpointMetadataFromConfig() {\n        if (this.authorityOptions.authorityMetadata) {\n            try {\n                return JSON.parse(this.authorityOptions.authorityMetadata);\n            }\n            catch (e) {\n                throw createClientConfigurationError(invalidAuthorityMetadata);\n            }\n        }\n        return null;\n    }\n    /**\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\n     *\n     * @param hasHardcodedMetadata boolean\n     */\n    async getEndpointMetadataFromNetwork() {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork, this.correlationId);\n        const options = {};\n        /*\n         * TODO: Add a timeout if the authority exists in our library's\n         * hardcoded list of metadata\n         */\n        const openIdConfigurationEndpoint = this.defaultOpenIdConfigurationEndpoint;\n        this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${openIdConfigurationEndpoint}`);\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync(openIdConfigurationEndpoint, options);\n            const isValidResponse = isOpenIdConfigResponse(response.body);\n            if (isValidResponse) {\n                return response.body;\n            }\n            else {\n                this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration`);\n                return null;\n            }\n        }\n        catch (e) {\n            this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${e}`);\n            return null;\n        }\n    }\n    /**\n     * Get OAuth endpoints for common authorities.\n     */\n    getEndpointMetadataFromHardcodedValues() {\n        if (this.canonicalAuthority in EndpointMetadata) {\n            return EndpointMetadata[this.canonicalAuthority];\n        }\n        return null;\n    }\n    /**\n     * Update the retrieved metadata with regional information.\n     * User selected Azure region will be used if configured.\n     */\n    async updateMetadataWithRegionalInformation(metadata) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.correlationId);\n        const userConfiguredAzureRegion = this.authorityOptions.azureRegionConfiguration?.azureRegion;\n        if (userConfiguredAzureRegion) {\n            if (userConfiguredAzureRegion !==\n                Constants.AZURE_REGION_AUTO_DISCOVER_FLAG) {\n                this.regionDiscoveryMetadata.region_outcome =\n                    RegionDiscoveryOutcomes.CONFIGURED_NO_AUTO_DETECTION;\n                this.regionDiscoveryMetadata.region_used =\n                    userConfiguredAzureRegion;\n                return Authority.replaceWithRegionalInformation(metadata, userConfiguredAzureRegion);\n            }\n            const autodetectedRegionName = await invokeAsync(this.regionDiscovery.detectRegion.bind(this.regionDiscovery), PerformanceEvents.RegionDiscoveryDetectRegion, this.logger, this.performanceClient, this.correlationId)(this.authorityOptions.azureRegionConfiguration\n                ?.environmentRegion, this.regionDiscoveryMetadata);\n            if (autodetectedRegionName) {\n                this.regionDiscoveryMetadata.region_outcome =\n                    RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_SUCCESSFUL;\n                this.regionDiscoveryMetadata.region_used =\n                    autodetectedRegionName;\n                return Authority.replaceWithRegionalInformation(metadata, autodetectedRegionName);\n            }\n            this.regionDiscoveryMetadata.region_outcome =\n                RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_FAILED;\n        }\n        return metadata;\n    }\n    /**\n     * Updates the AuthorityMetadataEntity with new aliases, preferred_network and preferred_cache\n     * and returns where the information was retrieved from\n     * @param metadataEntity\n     * @returns AuthorityMetadataSource\n     */\n    async updateCloudDiscoveryMetadata(metadataEntity) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata, this.correlationId);\n        const localMetadataSource = this.updateCloudDiscoveryMetadataFromLocalSources(metadataEntity);\n        if (localMetadataSource) {\n            return localMetadataSource;\n        }\n        // Fallback to network as metadata source\n        const metadata = await invokeAsync(this.getCloudDiscoveryMetadataFromNetwork.bind(this), PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork, this.logger, this.performanceClient, this.correlationId)();\n        if (metadata) {\n            metadataEntity.updateCloudDiscoveryMetadata(metadata, true);\n            return AuthorityMetadataSource.NETWORK;\n        }\n        // Metadata could not be obtained from the config, cache, network or hardcoded values\n        throw createClientConfigurationError(untrustedAuthority);\n    }\n    updateCloudDiscoveryMetadataFromLocalSources(metadataEntity) {\n        this.logger.verbose(\"Attempting to get cloud discovery metadata  from authority configuration\");\n        this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities ||\n            Constants.NOT_APPLICABLE}`);\n        this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata ||\n            Constants.NOT_APPLICABLE}`);\n        this.logger.verbosePii(`Canonical Authority: ${metadataEntity.canonical_authority || Constants.NOT_APPLICABLE}`);\n        const metadata = this.getCloudDiscoveryMetadataFromConfig();\n        if (metadata) {\n            this.logger.verbose(\"Found cloud discovery metadata in authority configuration\");\n            metadataEntity.updateCloudDiscoveryMetadata(metadata, false);\n            return AuthorityMetadataSource.CONFIG;\n        }\n        // If the cached metadata came from config but that config was not passed to this instance, we must go to hardcoded values\n        this.logger.verbose(\"Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values.\");\n        if (this.options.skipAuthorityMetadataCache) {\n            this.logger.verbose(\"Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.\");\n        }\n        else {\n            const hardcodedMetadata = getCloudDiscoveryMetadataFromHardcodedValues(this.canonicalAuthority);\n            if (hardcodedMetadata) {\n                this.logger.verbose(\"Found cloud discovery metadata from hardcoded values.\");\n                metadataEntity.updateCloudDiscoveryMetadata(hardcodedMetadata, false);\n                return AuthorityMetadataSource.HARDCODED_VALUES;\n            }\n            this.logger.verbose(\"Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.\");\n        }\n        const metadataEntityExpired = metadataEntity.isExpired();\n        if (this.isAuthoritySameType(metadataEntity) &&\n            metadataEntity.aliasesFromNetwork &&\n            !metadataEntityExpired) {\n            this.logger.verbose(\"Found cloud discovery metadata in the cache.\");\n            // No need to update\n            return AuthorityMetadataSource.CACHE;\n        }\n        else if (metadataEntityExpired) {\n            this.logger.verbose(\"The metadata entity is expired.\");\n        }\n        return null;\n    }\n    /**\n     * Parse cloudDiscoveryMetadata config or check knownAuthorities\n     */\n    getCloudDiscoveryMetadataFromConfig() {\n        // CIAM does not support cloud discovery metadata\n        if (this.authorityType === AuthorityType.Ciam) {\n            this.logger.verbose(\"CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host.\");\n            return Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\n        }\n        // Check if network response was provided in config\n        if (this.authorityOptions.cloudDiscoveryMetadata) {\n            this.logger.verbose(\"The cloud discovery metadata has been provided as a network response, in the config.\");\n            try {\n                this.logger.verbose(\"Attempting to parse the cloud discovery metadata.\");\n                const parsedResponse = JSON.parse(this.authorityOptions.cloudDiscoveryMetadata);\n                const metadata = getCloudDiscoveryMetadataFromNetworkResponse(parsedResponse.metadata, this.hostnameAndPort);\n                this.logger.verbose(\"Parsed the cloud discovery metadata.\");\n                if (metadata) {\n                    this.logger.verbose(\"There is returnable metadata attached to the parsed cloud discovery metadata.\");\n                    return metadata;\n                }\n                else {\n                    this.logger.verbose(\"There is no metadata attached to the parsed cloud discovery metadata.\");\n                }\n            }\n            catch (e) {\n                this.logger.verbose(\"Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error.\");\n                throw createClientConfigurationError(invalidCloudDiscoveryMetadata);\n            }\n        }\n        // If cloudDiscoveryMetadata is empty or does not contain the host, check knownAuthorities\n        if (this.isInKnownAuthorities()) {\n            this.logger.verbose(\"The host is included in knownAuthorities. Creating new cloud discovery metadata from the host.\");\n            return Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\n        }\n        return null;\n    }\n    /**\n     * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config\n     *\n     * @param hasHardcodedMetadata boolean\n     */\n    async getCloudDiscoveryMetadataFromNetwork() {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork, this.correlationId);\n        const instanceDiscoveryEndpoint = `${Constants.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`;\n        const options = {};\n        /*\n         * TODO: Add a timeout if the authority exists in our library's\n         * hardcoded list of metadata\n         */\n        let match = null;\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync(instanceDiscoveryEndpoint, options);\n            let typedResponseBody;\n            let metadata;\n            if (isCloudInstanceDiscoveryResponse(response.body)) {\n                typedResponseBody =\n                    response.body;\n                metadata = typedResponseBody.metadata;\n                this.logger.verbosePii(`tenant_discovery_endpoint is: ${typedResponseBody.tenant_discovery_endpoint}`);\n            }\n            else if (isCloudInstanceDiscoveryErrorResponse(response.body)) {\n                this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${response.status}`);\n                typedResponseBody =\n                    response.body;\n                if (typedResponseBody.error === Constants.INVALID_INSTANCE) {\n                    this.logger.error(\"The CloudInstanceDiscoveryErrorResponse error is invalid_instance.\");\n                    return null;\n                }\n                this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${typedResponseBody.error}`);\n                this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${typedResponseBody.error_description}`);\n                this.logger.warning(\"Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []\");\n                metadata = [];\n            }\n            else {\n                this.logger.error(\"AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse\");\n                return null;\n            }\n            this.logger.verbose(\"Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request.\");\n            match = getCloudDiscoveryMetadataFromNetworkResponse(metadata, this.hostnameAndPort);\n        }\n        catch (error) {\n            if (error instanceof AuthError) {\n                this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.\\nError: ${error.errorCode}\\nError Description: ${error.errorMessage}`);\n            }\n            else {\n                const typedError = error;\n                this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\\nError: ${typedError.name}\\nError Description: ${typedError.message}`);\n            }\n            return null;\n        }\n        // Custom Domain scenario, host is trusted because Instance Discovery call succeeded\n        if (!match) {\n            this.logger.warning(\"The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request.\");\n            this.logger.verbose(\"Creating custom Authority for custom domain scenario.\");\n            match = Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\n        }\n        return match;\n    }\n    /**\n     * Helper function to determine if this host is included in the knownAuthorities config option\n     */\n    isInKnownAuthorities() {\n        const matches = this.authorityOptions.knownAuthorities.filter((authority) => {\n            return (UrlString.getDomainFromUrl(authority).toLowerCase() ===\n                this.hostnameAndPort);\n        });\n        return matches.length > 0;\n    }\n    /**\n     * helper function to populate the authority based on azureCloudOptions\n     * @param authorityString\n     * @param azureCloudOptions\n     */\n    static generateAuthority(authorityString, azureCloudOptions) {\n        let authorityAzureCloudInstance;\n        if (azureCloudOptions &&\n            azureCloudOptions.azureCloudInstance !== AzureCloudInstance.None) {\n            const tenant = azureCloudOptions.tenant\n                ? azureCloudOptions.tenant\n                : Constants.DEFAULT_COMMON_TENANT;\n            authorityAzureCloudInstance = `${azureCloudOptions.azureCloudInstance}/${tenant}/`;\n        }\n        return authorityAzureCloudInstance\n            ? authorityAzureCloudInstance\n            : authorityString;\n    }\n    /**\n     * Creates cloud discovery metadata object from a given host\n     * @param host\n     */\n    static createCloudDiscoveryMetadataFromHost(host) {\n        return {\n            preferred_network: host,\n            preferred_cache: host,\n            aliases: [host],\n        };\n    }\n    /**\n     * helper function to generate environment from authority object\n     */\n    getPreferredCache() {\n        if (this.discoveryComplete()) {\n            return this.metadata.preferred_cache;\n        }\n        else {\n            throw createClientAuthError(endpointResolutionError);\n        }\n    }\n    /**\n     * Returns whether or not the provided host is an alias of this authority instance\n     * @param host\n     */\n    isAlias(host) {\n        return this.metadata.aliases.indexOf(host) > -1;\n    }\n    /**\n     * Returns whether or not the provided host is an alias of a known Microsoft authority for purposes of endpoint discovery\n     * @param host\n     */\n    isAliasOfKnownMicrosoftAuthority(host) {\n        return InstanceDiscoveryMetadataAliases.has(host);\n    }\n    /**\n     * Checks whether the provided host is that of a public cloud authority\n     *\n     * @param authority string\n     * @returns bool\n     */\n    static isPublicCloudAuthority(host) {\n        return Constants.KNOWN_PUBLIC_CLOUDS.indexOf(host) >= 0;\n    }\n    /**\n     * Rebuild the authority string with the region\n     *\n     * @param host string\n     * @param region string\n     */\n    static buildRegionalAuthorityString(host, region, queryString) {\n        // Create and validate a Url string object with the initial authority string\n        const authorityUrlInstance = new UrlString(host);\n        authorityUrlInstance.validateAsUri();\n        const authorityUrlParts = authorityUrlInstance.getUrlComponents();\n        let hostNameAndPort = `${region}.${authorityUrlParts.HostNameAndPort}`;\n        if (this.isPublicCloudAuthority(authorityUrlParts.HostNameAndPort)) {\n            hostNameAndPort = `${region}.${Constants.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`;\n        }\n        // Include the query string portion of the url\n        const url = UrlString.constructAuthorityUriFromObject({\n            ...authorityUrlInstance.getUrlComponents(),\n            HostNameAndPort: hostNameAndPort,\n        }).urlString;\n        // Add the query string if a query string was provided\n        if (queryString)\n            return `${url}?${queryString}`;\n        return url;\n    }\n    /**\n     * Replace the endpoints in the metadata object with their regional equivalents.\n     *\n     * @param metadata OpenIdConfigResponse\n     * @param azureRegion string\n     */\n    static replaceWithRegionalInformation(metadata, azureRegion) {\n        const regionalMetadata = { ...metadata };\n        regionalMetadata.authorization_endpoint =\n            Authority.buildRegionalAuthorityString(regionalMetadata.authorization_endpoint, azureRegion);\n        // TODO: Enquire on whether we should leave the query string or remove it before releasing the feature\n        regionalMetadata.token_endpoint =\n            Authority.buildRegionalAuthorityString(regionalMetadata.token_endpoint, azureRegion, Constants.REGIONAL_AUTH_NON_MSI_QUERY_STRING);\n        if (regionalMetadata.end_session_endpoint) {\n            regionalMetadata.end_session_endpoint =\n                Authority.buildRegionalAuthorityString(regionalMetadata.end_session_endpoint, azureRegion);\n        }\n        return regionalMetadata;\n    }\n    /**\n     * Transform CIAM_AUTHORIY as per the below rules:\n     * If no path segments found and it is a CIAM authority (hostname ends with .ciamlogin.com), then transform it\n     *\n     * NOTE: The transformation path should go away once STS supports CIAM with the format: `tenantIdorDomain.ciamlogin.com`\n     * `ciamlogin.com` can also change in the future and we should accommodate the same\n     *\n     * @param authority\n     */\n    static transformCIAMAuthority(authority) {\n        let ciamAuthority = authority;\n        const authorityUrl = new UrlString(authority);\n        const authorityUrlComponents = authorityUrl.getUrlComponents();\n        // check if transformation is needed\n        if (authorityUrlComponents.PathSegments.length === 0 &&\n            authorityUrlComponents.HostNameAndPort.endsWith(Constants.CIAM_AUTH_URL)) {\n            const tenantIdOrDomain = authorityUrlComponents.HostNameAndPort.split(\".\")[0];\n            ciamAuthority = `${ciamAuthority}${tenantIdOrDomain}${Constants.AAD_TENANT_DOMAIN_SUFFIX}`;\n        }\n        return ciamAuthority;\n    }\n}\n// Reserved tenant domain names that will not be replaced with tenant id\nAuthority.reservedTenantDomains = new Set([\n    \"{tenant}\",\n    \"{tenantid}\",\n    AADAuthorityConstants.COMMON,\n    AADAuthorityConstants.CONSUMERS,\n    AADAuthorityConstants.ORGANIZATIONS,\n]);\nfunction formatAuthorityUri(authorityUri) {\n    return authorityUri.endsWith(Constants.FORWARD_SLASH)\n        ? authorityUri\n        : `${authorityUri}${Constants.FORWARD_SLASH}`;\n}\nfunction buildStaticAuthorityOptions(authOptions) {\n    const rawCloudDiscoveryMetadata = authOptions.cloudDiscoveryMetadata;\n    let cloudDiscoveryMetadata = undefined;\n    if (rawCloudDiscoveryMetadata) {\n        try {\n            cloudDiscoveryMetadata = JSON.parse(rawCloudDiscoveryMetadata).metadata;\n        }\n        catch (e) {\n            throw createClientConfigurationError(invalidCloudDiscoveryMetadata);\n        }\n    }\n    return {\n        canonicalAuthority: authOptions.authority\n            ? formatAuthorityUri(authOptions.authority)\n            : undefined,\n        knownAuthorities: authOptions.knownAuthorities,\n        cloudDiscoveryMetadata: cloudDiscoveryMetadata,\n    };\n}\n\nexport { Authority, buildStaticAuthorityOptions, formatAuthorityUri };\n//# sourceMappingURL=Authority.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { ThrottlingConstants, Constants, HeaderNames } from '../utils/Constants.mjs';\nimport { ServerError } from '../error/ServerError.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass ThrottlingUtils {\n    /**\n     * Prepares a RequestThumbprint to be stored as a key.\n     * @param thumbprint\n     */\n    static generateThrottlingStorageKey(thumbprint) {\n        return `${ThrottlingConstants.THROTTLING_PREFIX}.${JSON.stringify(thumbprint)}`;\n    }\n    /**\n     * Performs necessary throttling checks before a network request.\n     * @param cacheManager\n     * @param thumbprint\n     */\n    static preProcess(cacheManager, thumbprint) {\n        const key = ThrottlingUtils.generateThrottlingStorageKey(thumbprint);\n        const value = cacheManager.getThrottlingCache(key);\n        if (value) {\n            if (value.throttleTime < Date.now()) {\n                cacheManager.removeItem(key);\n                return;\n            }\n            throw new ServerError(value.errorCodes?.join(\" \") || Constants.EMPTY_STRING, value.errorMessage, value.subError);\n        }\n    }\n    /**\n     * Performs necessary throttling checks after a network request.\n     * @param cacheManager\n     * @param thumbprint\n     * @param response\n     */\n    static postProcess(cacheManager, thumbprint, response) {\n        if (ThrottlingUtils.checkResponseStatus(response) ||\n            ThrottlingUtils.checkResponseForRetryAfter(response)) {\n            const thumbprintValue = {\n                throttleTime: ThrottlingUtils.calculateThrottleTime(parseInt(response.headers[HeaderNames.RETRY_AFTER])),\n                error: response.body.error,\n                errorCodes: response.body.error_codes,\n                errorMessage: response.body.error_description,\n                subError: response.body.suberror,\n            };\n            cacheManager.setThrottlingCache(ThrottlingUtils.generateThrottlingStorageKey(thumbprint), thumbprintValue);\n        }\n    }\n    /**\n     * Checks a NetworkResponse object's status codes against 429 or 5xx\n     * @param response\n     */\n    static checkResponseStatus(response) {\n        return (response.status === 429 ||\n            (response.status >= 500 && response.status < 600));\n    }\n    /**\n     * Checks a NetworkResponse object's RetryAfter header\n     * @param response\n     */\n    static checkResponseForRetryAfter(response) {\n        if (response.headers) {\n            return (response.headers.hasOwnProperty(HeaderNames.RETRY_AFTER) &&\n                (response.status < 200 || response.status >= 300));\n        }\n        return false;\n    }\n    /**\n     * Calculates the Unix-time value for a throttle to expire given throttleTime in seconds.\n     * @param throttleTime\n     */\n    static calculateThrottleTime(throttleTime) {\n        const time = throttleTime <= 0 ? 0 : throttleTime;\n        const currentSeconds = Date.now() / 1000;\n        return Math.floor(Math.min(currentSeconds +\n            (time || ThrottlingConstants.DEFAULT_THROTTLE_TIME_SECONDS), currentSeconds +\n            ThrottlingConstants.DEFAULT_MAX_THROTTLE_TIME_SECONDS) * 1000);\n    }\n    static removeThrottle(cacheManager, clientId, request, homeAccountIdentifier) {\n        const thumbprint = {\n            clientId: clientId,\n            authority: request.authority,\n            scopes: request.scopes,\n            homeAccountIdentifier: homeAccountIdentifier,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n        const key = this.generateThrottlingStorageKey(thumbprint);\n        cacheManager.removeItem(key);\n    }\n}\n\nexport { ThrottlingUtils };\n//# sourceMappingURL=ThrottlingUtils.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { ThrottlingUtils } from './ThrottlingUtils.mjs';\nimport { AuthError } from '../error/AuthError.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { networkError } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass NetworkManager {\n    constructor(networkClient, cacheManager) {\n        this.networkClient = networkClient;\n        this.cacheManager = cacheManager;\n    }\n    /**\n     * Wraps sendPostRequestAsync with necessary preflight and postflight logic\n     * @param thumbprint\n     * @param tokenEndpoint\n     * @param options\n     */\n    async sendPostRequest(thumbprint, tokenEndpoint, options) {\n        ThrottlingUtils.preProcess(this.cacheManager, thumbprint);\n        let response;\n        try {\n            response = await this.networkClient.sendPostRequestAsync(tokenEndpoint, options);\n        }\n        catch (e) {\n            if (e instanceof AuthError) {\n                throw e;\n            }\n            else {\n                throw createClientAuthError(networkError);\n            }\n        }\n        ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response);\n        return response;\n    }\n}\n\nexport { NetworkManager };\n//# sourceMappingURL=NetworkManager.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { createClientConfigurationError } from '../error/ClientConfigurationError.mjs';\nimport { CodeChallengeMethodValues, PromptValue } from '../utils/Constants.mjs';\nimport { redirectUriEmpty, invalidPromptValue, invalidClaims, pkceParamsMissing, invalidCodeChallengeMethod } from '../error/ClientConfigurationErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Validates server consumable params from the \"request\" objects\n */\nclass RequestValidator {\n    /**\n     * Utility to check if the `redirectUri` in the request is a non-null value\n     * @param redirectUri\n     */\n    static validateRedirectUri(redirectUri) {\n        if (!redirectUri) {\n            throw createClientConfigurationError(redirectUriEmpty);\n        }\n    }\n    /**\n     * Utility to validate prompt sent by the user in the request\n     * @param prompt\n     */\n    static validatePrompt(prompt) {\n        const promptValues = [];\n        for (const value in PromptValue) {\n            promptValues.push(PromptValue[value]);\n        }\n        if (promptValues.indexOf(prompt) < 0) {\n            throw createClientConfigurationError(invalidPromptValue);\n        }\n    }\n    static validateClaims(claims) {\n        try {\n            JSON.parse(claims);\n        }\n        catch (e) {\n            throw createClientConfigurationError(invalidClaims);\n        }\n    }\n    /**\n     * Utility to validate code_challenge and code_challenge_method\n     * @param codeChallenge\n     * @param codeChallengeMethod\n     */\n    static validateCodeChallengeParams(codeChallenge, codeChallengeMethod) {\n        if (!codeChallenge || !codeChallengeMethod) {\n            throw createClientConfigurationError(pkceParamsMissing);\n        }\n        else {\n            this.validateCodeChallengeMethod(codeChallengeMethod);\n        }\n    }\n    /**\n     * Utility to validate code_challenge_method\n     * @param codeChallengeMethod\n     */\n    static validateCodeChallengeMethod(codeChallengeMethod) {\n        if ([\n            CodeChallengeMethodValues.PLAIN,\n            CodeChallengeMethodValues.S256,\n        ].indexOf(codeChallengeMethod) < 0) {\n            throw createClientConfigurationError(invalidCodeChallengeMethod);\n        }\n    }\n    /**\n     * Removes unnecessary, duplicate, and empty string query parameters from extraQueryParameters\n     * @param request\n     */\n    static sanitizeEQParams(eQParams, queryParams) {\n        if (!eQParams) {\n            return {};\n        }\n        // Remove any query parameters already included in SSO params\n        queryParams.forEach((_value, key) => {\n            if (eQParams[key]) {\n                delete eQParams[key];\n            }\n        });\n        // remove empty string parameters\n        return Object.fromEntries(Object.entries(eQParams).filter((kv) => kv[1] !== \"\"));\n    }\n}\n\nexport { RequestValidator };\n//# sourceMappingURL=RequestValidator.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { AADServerParamKeys, Constants, ResponseMode, OIDC_DEFAULT_SCOPES, SSOTypes, HeaderNames, CLIENT_INFO, ClaimsRequestKeys, PasswordGrantConstants, AuthenticationScheme, ThrottlingConstants } from '../utils/Constants.mjs';\nimport { ScopeSet } from './ScopeSet.mjs';\nimport { createClientConfigurationError } from '../error/ClientConfigurationError.mjs';\nimport { RequestValidator } from './RequestValidator.mjs';\nimport { pkceParamsMissing, invalidClaims } from '../error/ClientConfigurationErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass RequestParameterBuilder {\n    constructor() {\n        this.parameters = new Map();\n    }\n    /**\n     * add response_type = code\n     */\n    addResponseTypeCode() {\n        this.parameters.set(AADServerParamKeys.RESPONSE_TYPE, encodeURIComponent(Constants.CODE_RESPONSE_TYPE));\n    }\n    /**\n     * add response_type = token id_token\n     */\n    addResponseTypeForTokenAndIdToken() {\n        this.parameters.set(AADServerParamKeys.RESPONSE_TYPE, encodeURIComponent(`${Constants.TOKEN_RESPONSE_TYPE} ${Constants.ID_TOKEN_RESPONSE_TYPE}`));\n    }\n    /**\n     * add response_mode. defaults to query.\n     * @param responseMode\n     */\n    addResponseMode(responseMode) {\n        this.parameters.set(AADServerParamKeys.RESPONSE_MODE, encodeURIComponent(responseMode ? responseMode : ResponseMode.QUERY));\n    }\n    /**\n     * Add flag to indicate STS should attempt to use WAM if available\n     */\n    addNativeBroker() {\n        this.parameters.set(AADServerParamKeys.NATIVE_BROKER, encodeURIComponent(\"1\"));\n    }\n    /**\n     * add scopes. set addOidcScopes to false to prevent default scopes in non-user scenarios\n     * @param scopeSet\n     * @param addOidcScopes\n     */\n    addScopes(scopes, addOidcScopes = true, defaultScopes = OIDC_DEFAULT_SCOPES) {\n        // Always add openid to the scopes when adding OIDC scopes\n        if (addOidcScopes &&\n            !defaultScopes.includes(\"openid\") &&\n            !scopes.includes(\"openid\")) {\n            defaultScopes.push(\"openid\");\n        }\n        const requestScopes = addOidcScopes\n            ? [...(scopes || []), ...defaultScopes]\n            : scopes || [];\n        const scopeSet = new ScopeSet(requestScopes);\n        this.parameters.set(AADServerParamKeys.SCOPE, encodeURIComponent(scopeSet.printScopes()));\n    }\n    /**\n     * add clientId\n     * @param clientId\n     */\n    addClientId(clientId) {\n        this.parameters.set(AADServerParamKeys.CLIENT_ID, encodeURIComponent(clientId));\n    }\n    /**\n     * add redirect_uri\n     * @param redirectUri\n     */\n    addRedirectUri(redirectUri) {\n        RequestValidator.validateRedirectUri(redirectUri);\n        this.parameters.set(AADServerParamKeys.REDIRECT_URI, encodeURIComponent(redirectUri));\n    }\n    /**\n     * add post logout redirectUri\n     * @param redirectUri\n     */\n    addPostLogoutRedirectUri(redirectUri) {\n        RequestValidator.validateRedirectUri(redirectUri);\n        this.parameters.set(AADServerParamKeys.POST_LOGOUT_URI, encodeURIComponent(redirectUri));\n    }\n    /**\n     * add id_token_hint to logout request\n     * @param idTokenHint\n     */\n    addIdTokenHint(idTokenHint) {\n        this.parameters.set(AADServerParamKeys.ID_TOKEN_HINT, encodeURIComponent(idTokenHint));\n    }\n    /**\n     * add domain_hint\n     * @param domainHint\n     */\n    addDomainHint(domainHint) {\n        this.parameters.set(SSOTypes.DOMAIN_HINT, encodeURIComponent(domainHint));\n    }\n    /**\n     * add login_hint\n     * @param loginHint\n     */\n    addLoginHint(loginHint) {\n        this.parameters.set(SSOTypes.LOGIN_HINT, encodeURIComponent(loginHint));\n    }\n    /**\n     * Adds the CCS (Cache Credential Service) query parameter for login_hint\n     * @param loginHint\n     */\n    addCcsUpn(loginHint) {\n        this.parameters.set(HeaderNames.CCS_HEADER, encodeURIComponent(`UPN:${loginHint}`));\n    }\n    /**\n     * Adds the CCS (Cache Credential Service) query parameter for account object\n     * @param loginHint\n     */\n    addCcsOid(clientInfo) {\n        this.parameters.set(HeaderNames.CCS_HEADER, encodeURIComponent(`Oid:${clientInfo.uid}@${clientInfo.utid}`));\n    }\n    /**\n     * add sid\n     * @param sid\n     */\n    addSid(sid) {\n        this.parameters.set(SSOTypes.SID, encodeURIComponent(sid));\n    }\n    /**\n     * add claims\n     * @param claims\n     */\n    addClaims(claims, clientCapabilities) {\n        const mergedClaims = this.addClientCapabilitiesToClaims(claims, clientCapabilities);\n        RequestValidator.validateClaims(mergedClaims);\n        this.parameters.set(AADServerParamKeys.CLAIMS, encodeURIComponent(mergedClaims));\n    }\n    /**\n     * add correlationId\n     * @param correlationId\n     */\n    addCorrelationId(correlationId) {\n        this.parameters.set(AADServerParamKeys.CLIENT_REQUEST_ID, encodeURIComponent(correlationId));\n    }\n    /**\n     * add library info query params\n     * @param libraryInfo\n     */\n    addLibraryInfo(libraryInfo) {\n        // Telemetry Info\n        this.parameters.set(AADServerParamKeys.X_CLIENT_SKU, libraryInfo.sku);\n        this.parameters.set(AADServerParamKeys.X_CLIENT_VER, libraryInfo.version);\n        if (libraryInfo.os) {\n            this.parameters.set(AADServerParamKeys.X_CLIENT_OS, libraryInfo.os);\n        }\n        if (libraryInfo.cpu) {\n            this.parameters.set(AADServerParamKeys.X_CLIENT_CPU, libraryInfo.cpu);\n        }\n    }\n    /**\n     * Add client telemetry parameters\n     * @param appTelemetry\n     */\n    addApplicationTelemetry(appTelemetry) {\n        if (appTelemetry?.appName) {\n            this.parameters.set(AADServerParamKeys.X_APP_NAME, appTelemetry.appName);\n        }\n        if (appTelemetry?.appVersion) {\n            this.parameters.set(AADServerParamKeys.X_APP_VER, appTelemetry.appVersion);\n        }\n    }\n    /**\n     * add prompt\n     * @param prompt\n     */\n    addPrompt(prompt) {\n        RequestValidator.validatePrompt(prompt);\n        this.parameters.set(`${AADServerParamKeys.PROMPT}`, encodeURIComponent(prompt));\n    }\n    /**\n     * add state\n     * @param state\n     */\n    addState(state) {\n        if (state) {\n            this.parameters.set(AADServerParamKeys.STATE, encodeURIComponent(state));\n        }\n    }\n    /**\n     * add nonce\n     * @param nonce\n     */\n    addNonce(nonce) {\n        this.parameters.set(AADServerParamKeys.NONCE, encodeURIComponent(nonce));\n    }\n    /**\n     * add code_challenge and code_challenge_method\n     * - throw if either of them are not passed\n     * @param codeChallenge\n     * @param codeChallengeMethod\n     */\n    addCodeChallengeParams(codeChallenge, codeChallengeMethod) {\n        RequestValidator.validateCodeChallengeParams(codeChallenge, codeChallengeMethod);\n        if (codeChallenge && codeChallengeMethod) {\n            this.parameters.set(AADServerParamKeys.CODE_CHALLENGE, encodeURIComponent(codeChallenge));\n            this.parameters.set(AADServerParamKeys.CODE_CHALLENGE_METHOD, encodeURIComponent(codeChallengeMethod));\n        }\n        else {\n            throw createClientConfigurationError(pkceParamsMissing);\n        }\n    }\n    /**\n     * add the `authorization_code` passed by the user to exchange for a token\n     * @param code\n     */\n    addAuthorizationCode(code) {\n        this.parameters.set(AADServerParamKeys.CODE, encodeURIComponent(code));\n    }\n    /**\n     * add the `authorization_code` passed by the user to exchange for a token\n     * @param code\n     */\n    addDeviceCode(code) {\n        this.parameters.set(AADServerParamKeys.DEVICE_CODE, encodeURIComponent(code));\n    }\n    /**\n     * add the `refreshToken` passed by the user\n     * @param refreshToken\n     */\n    addRefreshToken(refreshToken) {\n        this.parameters.set(AADServerParamKeys.REFRESH_TOKEN, encodeURIComponent(refreshToken));\n    }\n    /**\n     * add the `code_verifier` passed by the user to exchange for a token\n     * @param codeVerifier\n     */\n    addCodeVerifier(codeVerifier) {\n        this.parameters.set(AADServerParamKeys.CODE_VERIFIER, encodeURIComponent(codeVerifier));\n    }\n    /**\n     * add client_secret\n     * @param clientSecret\n     */\n    addClientSecret(clientSecret) {\n        this.parameters.set(AADServerParamKeys.CLIENT_SECRET, encodeURIComponent(clientSecret));\n    }\n    /**\n     * add clientAssertion for confidential client flows\n     * @param clientAssertion\n     */\n    addClientAssertion(clientAssertion) {\n        if (clientAssertion) {\n            this.parameters.set(AADServerParamKeys.CLIENT_ASSERTION, encodeURIComponent(clientAssertion));\n        }\n    }\n    /**\n     * add clientAssertionType for confidential client flows\n     * @param clientAssertionType\n     */\n    addClientAssertionType(clientAssertionType) {\n        if (clientAssertionType) {\n            this.parameters.set(AADServerParamKeys.CLIENT_ASSERTION_TYPE, encodeURIComponent(clientAssertionType));\n        }\n    }\n    /**\n     * add OBO assertion for confidential client flows\n     * @param clientAssertion\n     */\n    addOboAssertion(oboAssertion) {\n        this.parameters.set(AADServerParamKeys.OBO_ASSERTION, encodeURIComponent(oboAssertion));\n    }\n    /**\n     * add grant type\n     * @param grantType\n     */\n    addRequestTokenUse(tokenUse) {\n        this.parameters.set(AADServerParamKeys.REQUESTED_TOKEN_USE, encodeURIComponent(tokenUse));\n    }\n    /**\n     * add grant type\n     * @param grantType\n     */\n    addGrantType(grantType) {\n        this.parameters.set(AADServerParamKeys.GRANT_TYPE, encodeURIComponent(grantType));\n    }\n    /**\n     * add client info\n     *\n     */\n    addClientInfo() {\n        this.parameters.set(CLIENT_INFO, \"1\");\n    }\n    /**\n     * add extraQueryParams\n     * @param eQParams\n     */\n    addExtraQueryParameters(eQParams) {\n        const sanitizedEQParams = RequestValidator.sanitizeEQParams(eQParams, this.parameters);\n        Object.keys(sanitizedEQParams).forEach((key) => {\n            this.parameters.set(key, eQParams[key]);\n        });\n    }\n    addClientCapabilitiesToClaims(claims, clientCapabilities) {\n        let mergedClaims;\n        // Parse provided claims into JSON object or initialize empty object\n        if (!claims) {\n            mergedClaims = {};\n        }\n        else {\n            try {\n                mergedClaims = JSON.parse(claims);\n            }\n            catch (e) {\n                throw createClientConfigurationError(invalidClaims);\n            }\n        }\n        if (clientCapabilities && clientCapabilities.length > 0) {\n            if (!mergedClaims.hasOwnProperty(ClaimsRequestKeys.ACCESS_TOKEN)) {\n                // Add access_token key to claims object\n                mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN] = {};\n            }\n            // Add xms_cc claim with provided clientCapabilities to access_token key\n            mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN][ClaimsRequestKeys.XMS_CC] = {\n                values: clientCapabilities,\n            };\n        }\n        return JSON.stringify(mergedClaims);\n    }\n    /**\n     * adds `username` for Password Grant flow\n     * @param username\n     */\n    addUsername(username) {\n        this.parameters.set(PasswordGrantConstants.username, encodeURIComponent(username));\n    }\n    /**\n     * adds `password` for Password Grant flow\n     * @param password\n     */\n    addPassword(password) {\n        this.parameters.set(PasswordGrantConstants.password, encodeURIComponent(password));\n    }\n    /**\n     * add pop_jwk to query params\n     * @param cnfString\n     */\n    addPopToken(cnfString) {\n        if (cnfString) {\n            this.parameters.set(AADServerParamKeys.TOKEN_TYPE, AuthenticationScheme.POP);\n            this.parameters.set(AADServerParamKeys.REQ_CNF, encodeURIComponent(cnfString));\n        }\n    }\n    /**\n     * add SSH JWK and key ID to query params\n     */\n    addSshJwk(sshJwkString) {\n        if (sshJwkString) {\n            this.parameters.set(AADServerParamKeys.TOKEN_TYPE, AuthenticationScheme.SSH);\n            this.parameters.set(AADServerParamKeys.REQ_CNF, encodeURIComponent(sshJwkString));\n        }\n    }\n    /**\n     * add server telemetry fields\n     * @param serverTelemetryManager\n     */\n    addServerTelemetry(serverTelemetryManager) {\n        this.parameters.set(AADServerParamKeys.X_CLIENT_CURR_TELEM, serverTelemetryManager.generateCurrentRequestHeaderValue());\n        this.parameters.set(AADServerParamKeys.X_CLIENT_LAST_TELEM, serverTelemetryManager.generateLastRequestHeaderValue());\n    }\n    /**\n     * Adds parameter that indicates to the server that throttling is supported\n     */\n    addThrottling() {\n        this.parameters.set(AADServerParamKeys.X_MS_LIB_CAPABILITY, ThrottlingConstants.X_MS_LIB_CAPABILITY_VALUE);\n    }\n    /**\n     * Adds logout_hint parameter for \"silent\" logout which prevent server account picker\n     */\n    addLogoutHint(logoutHint) {\n        this.parameters.set(AADServerParamKeys.LOGOUT_HINT, encodeURIComponent(logoutHint));\n    }\n    /**\n     * Utility to create a URL from the params map\n     */\n    createQueryString() {\n        const queryParameterArray = new Array();\n        this.parameters.forEach((value, key) => {\n            queryParameterArray.push(`${key}=${value}`);\n        });\n        return queryParameterArray.join(\"&\");\n    }\n}\n\nexport { RequestParameterBuilder };\n//# sourceMappingURL=RequestParameterBuilder.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { buildClientConfiguration } from '../config/ClientConfiguration.mjs';\nimport { NetworkManager } from '../network/NetworkManager.mjs';\nimport { Logger } from '../logger/Logger.mjs';\nimport { HeaderNames, Constants } from '../utils/Constants.mjs';\nimport { name, version } from '../packageMetadata.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { CcsCredentialType } from '../account/CcsCredential.mjs';\nimport { buildClientInfoFromHomeAccountId } from '../account/ClientInfo.mjs';\nimport { RequestParameterBuilder } from '../request/RequestParameterBuilder.mjs';\nimport { endpointResolutionError } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\n * @internal\n */\nclass BaseClient {\n    constructor(configuration, performanceClient) {\n        // Set the configuration\n        this.config = buildClientConfiguration(configuration);\n        // Initialize the logger\n        this.logger = new Logger(this.config.loggerOptions, name, version);\n        // Initialize crypto\n        this.cryptoUtils = this.config.cryptoInterface;\n        // Initialize storage interface\n        this.cacheManager = this.config.storageInterface;\n        // Set the network interface\n        this.networkClient = this.config.networkInterface;\n        // Set the NetworkManager\n        this.networkManager = new NetworkManager(this.networkClient, this.cacheManager);\n        // Set TelemetryManager\n        this.serverTelemetryManager = this.config.serverTelemetryManager;\n        // set Authority\n        this.authority = this.config.authOptions.authority;\n        // set performance telemetry client\n        this.performanceClient = performanceClient;\n    }\n    /**\n     * Creates default headers for requests to token endpoint\n     */\n    createTokenRequestHeaders(ccsCred) {\n        const headers = {};\n        headers[HeaderNames.CONTENT_TYPE] = Constants.URL_FORM_CONTENT_TYPE;\n        if (!this.config.systemOptions.preventCorsPreflight && ccsCred) {\n            switch (ccsCred.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(ccsCred.credential);\n                        headers[HeaderNames.CCS_HEADER] = `Oid:${clientInfo.uid}@${clientInfo.utid}`;\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\n                            e);\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    headers[HeaderNames.CCS_HEADER] = `UPN: ${ccsCred.credential}`;\n                    break;\n            }\n        }\n        return headers;\n    }\n    /**\n     * Http post to token endpoint\n     * @param tokenEndpoint\n     * @param queryString\n     * @param headers\n     * @param thumbprint\n     */\n    async executePostToTokenEndpoint(tokenEndpoint, queryString, headers, thumbprint, correlationId, queuedEvent) {\n        if (queuedEvent) {\n            this.performanceClient?.addQueueMeasurement(queuedEvent, correlationId);\n        }\n        const response = await this.networkManager.sendPostRequest(thumbprint, tokenEndpoint, { body: queryString, headers: headers });\n        this.performanceClient?.addFields({\n            refreshTokenSize: response.body.refresh_token?.length || 0,\n            httpVerToken: response.headers?.[HeaderNames.X_MS_HTTP_VERSION] || \"\",\n        }, correlationId);\n        if (this.config.serverTelemetryManager &&\n            response.status < 500 &&\n            response.status !== 429) {\n            // Telemetry data successfully logged by server, clear Telemetry cache\n            this.config.serverTelemetryManager.clearTelemetryCache();\n        }\n        return response;\n    }\n    /**\n     * Updates the authority object of the client. Endpoint discovery must be completed.\n     * @param updatedAuthority\n     */\n    updateAuthority(updatedAuthority) {\n        if (!updatedAuthority.discoveryComplete()) {\n            throw createClientAuthError(endpointResolutionError);\n        }\n        this.authority = updatedAuthority;\n    }\n    /**\n     * Creates query string for the /token request\n     * @param request\n     */\n    createTokenQueryParameters(request) {\n        const parameterBuilder = new RequestParameterBuilder();\n        if (request.tokenQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.tokenQueryParameters);\n        }\n        return parameterBuilder.createQueryString();\n    }\n}\n\nexport { BaseClient };\n//# sourceMappingURL=BaseClient.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This class instance helps track the memory changes facilitating\n * decisions to read from and write to the persistent cache\n */ class TokenCacheContext {\n    constructor(tokenCache, hasChanged) {\n        this.cache = tokenCache;\n        this.hasChanged = hasChanged;\n    }\n    /**\n     * boolean which indicates the changes in cache\n     */\n    get cacheHasChanged() {\n        return this.hasChanged;\n    }\n    /**\n     * function to retrieve the token cache\n     */\n    get tokenCache() {\n        return this.cache;\n    }\n}\n\nexport { TokenCacheContext };\n//# sourceMappingURL=TokenCacheContext.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { buildClientInfo } from '../account/ClientInfo.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { ServerError } from '../error/ServerError.mjs';\nimport { ScopeSet } from '../request/ScopeSet.mjs';\nimport { AccountEntity } from '../cache/entities/AccountEntity.mjs';\nimport { IdTokenEntity } from '../cache/entities/IdTokenEntity.mjs';\nimport { AccessTokenEntity } from '../cache/entities/AccessTokenEntity.mjs';\nimport { RefreshTokenEntity } from '../cache/entities/RefreshTokenEntity.mjs';\nimport { isInteractionRequiredError, InteractionRequiredAuthError } from '../error/InteractionRequiredAuthError.mjs';\nimport { CacheRecord } from '../cache/entities/CacheRecord.mjs';\nimport { ProtocolUtils } from '../utils/ProtocolUtils.mjs';\nimport { Constants, HttpStatus, AuthenticationScheme, THE_FAMILY_ID } from '../utils/Constants.mjs';\nimport { PopTokenGenerator } from '../crypto/PopTokenGenerator.mjs';\nimport { AppMetadataEntity } from '../cache/entities/AppMetadataEntity.mjs';\nimport { TokenCacheContext } from '../cache/persistence/TokenCacheContext.mjs';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\nimport { extractTokenClaims, checkMaxAge } from '../account/AuthToken.mjs';\nimport { stateNotFound, invalidState, stateMismatch, nonceMismatch, authTimeNotFound, invalidCacheEnvironment, keyIdMissing } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Class that handles response parsing.\n * @internal\n */\nclass ResponseHandler {\n    constructor(clientId, cacheStorage, cryptoObj, logger, serializableCache, persistencePlugin, performanceClient) {\n        this.clientId = clientId;\n        this.cacheStorage = cacheStorage;\n        this.cryptoObj = cryptoObj;\n        this.logger = logger;\n        this.serializableCache = serializableCache;\n        this.persistencePlugin = persistencePlugin;\n        this.performanceClient = performanceClient;\n    }\n    /**\n     * Function which validates server authorization code response.\n     * @param serverResponseHash\n     * @param cachedState\n     * @param cryptoObj\n     */\n    validateServerAuthorizationCodeResponse(serverResponseHash, cachedState, cryptoObj) {\n        if (!serverResponseHash.state || !cachedState) {\n            throw serverResponseHash.state\n                ? createClientAuthError(stateNotFound, \"Cached State\")\n                : createClientAuthError(stateNotFound, \"Server State\");\n        }\n        let decodedServerResponseHash;\n        let decodedCachedState;\n        try {\n            decodedServerResponseHash = decodeURIComponent(serverResponseHash.state);\n        }\n        catch (e) {\n            throw createClientAuthError(invalidState, serverResponseHash.state);\n        }\n        try {\n            decodedCachedState = decodeURIComponent(cachedState);\n        }\n        catch (e) {\n            throw createClientAuthError(invalidState, serverResponseHash.state);\n        }\n        if (decodedServerResponseHash !== decodedCachedState) {\n            throw createClientAuthError(stateMismatch);\n        }\n        // Check for error\n        if (serverResponseHash.error ||\n            serverResponseHash.error_description ||\n            serverResponseHash.suberror) {\n            if (isInteractionRequiredError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror)) {\n                throw new InteractionRequiredAuthError(serverResponseHash.error || Constants.EMPTY_STRING, serverResponseHash.error_description, serverResponseHash.suberror, serverResponseHash.timestamp || Constants.EMPTY_STRING, serverResponseHash.trace_id || Constants.EMPTY_STRING, serverResponseHash.correlation_id || Constants.EMPTY_STRING, serverResponseHash.claims || Constants.EMPTY_STRING);\n            }\n            throw new ServerError(serverResponseHash.error || Constants.EMPTY_STRING, serverResponseHash.error_description, serverResponseHash.suberror);\n        }\n        if (serverResponseHash.client_info) {\n            buildClientInfo(serverResponseHash.client_info, cryptoObj);\n        }\n    }\n    /**\n     * Function which validates server authorization token response.\n     * @param serverResponse\n     * @param refreshAccessToken\n     */\n    validateTokenResponse(serverResponse, refreshAccessToken) {\n        // Check for error\n        if (serverResponse.error ||\n            serverResponse.error_description ||\n            serverResponse.suberror) {\n            const errString = `${serverResponse.error_codes} - [${serverResponse.timestamp}]: ${serverResponse.error_description} - Correlation ID: ${serverResponse.correlation_id} - Trace ID: ${serverResponse.trace_id}`;\n            const serverError = new ServerError(serverResponse.error, errString, serverResponse.suberror);\n            // check if 500 error\n            if (refreshAccessToken &&\n                serverResponse.status &&\n                serverResponse.status >= HttpStatus.SERVER_ERROR_RANGE_START &&\n                serverResponse.status <= HttpStatus.SERVER_ERROR_RANGE_END) {\n                this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.\\n${serverError}`);\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\n                return;\n                // check if 400 error\n            }\n            else if (refreshAccessToken &&\n                serverResponse.status &&\n                serverResponse.status >= HttpStatus.CLIENT_ERROR_RANGE_START &&\n                serverResponse.status <= HttpStatus.CLIENT_ERROR_RANGE_END) {\n                this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.\\n${serverError}`);\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\n                return;\n            }\n            if (isInteractionRequiredError(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\n                throw new InteractionRequiredAuthError(serverResponse.error, serverResponse.error_description, serverResponse.suberror, serverResponse.timestamp || Constants.EMPTY_STRING, serverResponse.trace_id || Constants.EMPTY_STRING, serverResponse.correlation_id || Constants.EMPTY_STRING, serverResponse.claims || Constants.EMPTY_STRING);\n            }\n            throw serverError;\n        }\n    }\n    /**\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\n     * @param serverTokenResponse\n     * @param authority\n     */\n    async handleServerTokenResponse(serverTokenResponse, authority, reqTimestamp, request, authCodePayload, userAssertionHash, handlingRefreshTokenResponse, forceCacheRefreshTokenResponse, serverRequestId) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.HandleServerTokenResponse, serverTokenResponse.correlation_id);\n        // create an idToken object (not entity)\n        let idTokenClaims;\n        if (serverTokenResponse.id_token) {\n            idTokenClaims = extractTokenClaims(serverTokenResponse.id_token || Constants.EMPTY_STRING, this.cryptoObj.base64Decode);\n            // token nonce check (TODO: Add a warning if no nonce is given?)\n            if (authCodePayload && authCodePayload.nonce) {\n                if (idTokenClaims.nonce !== authCodePayload.nonce) {\n                    throw createClientAuthError(nonceMismatch);\n                }\n            }\n            // token max_age check\n            if (request.maxAge || request.maxAge === 0) {\n                const authTime = idTokenClaims.auth_time;\n                if (!authTime) {\n                    throw createClientAuthError(authTimeNotFound);\n                }\n                checkMaxAge(authTime, request.maxAge);\n            }\n        }\n        // generate homeAccountId\n        this.homeAccountIdentifier = AccountEntity.generateHomeAccountId(serverTokenResponse.client_info || Constants.EMPTY_STRING, authority.authorityType, this.logger, this.cryptoObj, idTokenClaims);\n        // save the response tokens\n        let requestStateObj;\n        if (!!authCodePayload && !!authCodePayload.state) {\n            requestStateObj = ProtocolUtils.parseRequestState(this.cryptoObj, authCodePayload.state);\n        }\n        // Add keyId from request to serverTokenResponse if defined\n        serverTokenResponse.key_id =\n            serverTokenResponse.key_id || request.sshKid || undefined;\n        const cacheRecord = this.generateCacheRecord(serverTokenResponse, authority, reqTimestamp, request, idTokenClaims, userAssertionHash, authCodePayload);\n        let cacheContext;\n        try {\n            if (this.persistencePlugin && this.serializableCache) {\n                this.logger.verbose(\"Persistence enabled, calling beforeCacheAccess\");\n                cacheContext = new TokenCacheContext(this.serializableCache, true);\n                await this.persistencePlugin.beforeCacheAccess(cacheContext);\n            }\n            /*\n             * When saving a refreshed tokens to the cache, it is expected that the account that was used is present in the cache.\n             * If not present, we should return null, as it's the case that another application called removeAccount in between\n             * the calls to getAllAccounts and acquireTokenSilent. We should not overwrite that removal, unless explicitly flagged by\n             * the developer, as in the case of refresh token flow used in ADAL Node to MSAL Node migration.\n             */\n            if (handlingRefreshTokenResponse &&\n                !forceCacheRefreshTokenResponse &&\n                cacheRecord.account) {\n                const key = cacheRecord.account.generateAccountKey();\n                const account = this.cacheStorage.getAccount(key);\n                if (!account) {\n                    this.logger.warning(\"Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache\");\n                    return ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenClaims, requestStateObj, undefined, serverRequestId);\n                }\n            }\n            await this.cacheStorage.saveCacheRecord(cacheRecord, request.storeInCache);\n        }\n        finally {\n            if (this.persistencePlugin &&\n                this.serializableCache &&\n                cacheContext) {\n                this.logger.verbose(\"Persistence enabled, calling afterCacheAccess\");\n                await this.persistencePlugin.afterCacheAccess(cacheContext);\n            }\n        }\n        return ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenClaims, requestStateObj, serverTokenResponse, serverRequestId);\n    }\n    /**\n     * Generates CacheRecord\n     * @param serverTokenResponse\n     * @param idTokenObj\n     * @param authority\n     */\n    generateCacheRecord(serverTokenResponse, authority, reqTimestamp, request, idTokenClaims, userAssertionHash, authCodePayload) {\n        const env = authority.getPreferredCache();\n        if (!env) {\n            throw createClientAuthError(invalidCacheEnvironment);\n        }\n        // IdToken: non AAD scenarios can have empty realm\n        let cachedIdToken;\n        let cachedAccount;\n        if (serverTokenResponse.id_token && !!idTokenClaims) {\n            cachedIdToken = IdTokenEntity.createIdTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.id_token, this.clientId, idTokenClaims.tid || \"\");\n            cachedAccount = AccountEntity.createAccount({\n                homeAccountId: this.homeAccountIdentifier,\n                idTokenClaims: idTokenClaims,\n                clientInfo: serverTokenResponse.client_info,\n                cloudGraphHostName: authCodePayload?.cloud_graph_host_name,\n                msGraphHost: authCodePayload?.msgraph_host,\n            }, authority);\n        }\n        // AccessToken\n        let cachedAccessToken = null;\n        if (serverTokenResponse.access_token) {\n            // If scopes not returned in server response, use request scopes\n            const responseScopes = serverTokenResponse.scope\n                ? ScopeSet.fromString(serverTokenResponse.scope)\n                : new ScopeSet(request.scopes || []);\n            /*\n             * Use timestamp calculated before request\n             * Server may return timestamps as strings, parse to numbers if so.\n             */\n            const expiresIn = (typeof serverTokenResponse.expires_in === \"string\"\n                ? parseInt(serverTokenResponse.expires_in, 10)\n                : serverTokenResponse.expires_in) || 0;\n            const extExpiresIn = (typeof serverTokenResponse.ext_expires_in === \"string\"\n                ? parseInt(serverTokenResponse.ext_expires_in, 10)\n                : serverTokenResponse.ext_expires_in) || 0;\n            const refreshIn = (typeof serverTokenResponse.refresh_in === \"string\"\n                ? parseInt(serverTokenResponse.refresh_in, 10)\n                : serverTokenResponse.refresh_in) || undefined;\n            const tokenExpirationSeconds = reqTimestamp + expiresIn;\n            const extendedTokenExpirationSeconds = tokenExpirationSeconds + extExpiresIn;\n            const refreshOnSeconds = refreshIn && refreshIn > 0\n                ? reqTimestamp + refreshIn\n                : undefined;\n            // non AAD scenarios can have empty realm\n            cachedAccessToken = AccessTokenEntity.createAccessTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.access_token || Constants.EMPTY_STRING, this.clientId, idTokenClaims?.tid || authority.tenant, responseScopes.printScopes(), tokenExpirationSeconds, extendedTokenExpirationSeconds, this.cryptoObj, refreshOnSeconds, serverTokenResponse.token_type, userAssertionHash, serverTokenResponse.key_id, request.claims, request.requestedClaimsHash);\n        }\n        // refreshToken\n        let cachedRefreshToken = null;\n        if (serverTokenResponse.refresh_token) {\n            cachedRefreshToken = RefreshTokenEntity.createRefreshTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.refresh_token || Constants.EMPTY_STRING, this.clientId, serverTokenResponse.foci, userAssertionHash);\n        }\n        // appMetadata\n        let cachedAppMetadata = null;\n        if (serverTokenResponse.foci) {\n            cachedAppMetadata = AppMetadataEntity.createAppMetadataEntity(this.clientId, env, serverTokenResponse.foci);\n        }\n        return new CacheRecord(cachedAccount, cachedIdToken, cachedAccessToken, cachedRefreshToken, cachedAppMetadata);\n    }\n    /**\n     * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.\n     *\n     * Optionally takes a state string that is set as-is in the response.\n     *\n     * @param cacheRecord\n     * @param idTokenObj\n     * @param fromTokenCache\n     * @param stateString\n     */\n    static async generateAuthenticationResult(cryptoObj, authority, cacheRecord, fromTokenCache, request, idTokenClaims, requestState, serverTokenResponse, requestId) {\n        let accessToken = Constants.EMPTY_STRING;\n        let responseScopes = [];\n        let expiresOn = null;\n        let extExpiresOn;\n        let refreshOn;\n        let familyId = Constants.EMPTY_STRING;\n        if (cacheRecord.accessToken) {\n            if (cacheRecord.accessToken.tokenType === AuthenticationScheme.POP) {\n                const popTokenGenerator = new PopTokenGenerator(cryptoObj);\n                const { secret, keyId } = cacheRecord.accessToken;\n                if (!keyId) {\n                    throw createClientAuthError(keyIdMissing);\n                }\n                accessToken = await popTokenGenerator.signPopToken(secret, keyId, request);\n            }\n            else {\n                accessToken = cacheRecord.accessToken.secret;\n            }\n            responseScopes = ScopeSet.fromString(cacheRecord.accessToken.target).asArray();\n            expiresOn = new Date(Number(cacheRecord.accessToken.expiresOn) * 1000);\n            extExpiresOn = new Date(Number(cacheRecord.accessToken.extendedExpiresOn) * 1000);\n            if (cacheRecord.accessToken.refreshOn) {\n                refreshOn = new Date(Number(cacheRecord.accessToken.refreshOn) * 1000);\n            }\n        }\n        if (cacheRecord.appMetadata) {\n            familyId =\n                cacheRecord.appMetadata.familyId === THE_FAMILY_ID\n                    ? THE_FAMILY_ID\n                    : \"\";\n        }\n        const uid = idTokenClaims?.oid || idTokenClaims?.sub || \"\";\n        const tid = idTokenClaims?.tid || \"\";\n        // for hybrid + native bridge enablement, send back the native account Id\n        if (serverTokenResponse?.spa_accountid && !!cacheRecord.account) {\n            cacheRecord.account.nativeAccountId =\n                serverTokenResponse?.spa_accountid;\n        }\n        const accountInfo = cacheRecord.account\n            ? {\n                ...cacheRecord.account.getAccountInfo(),\n                idTokenClaims,\n            }\n            : null;\n        return {\n            authority: authority.canonicalAuthority,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes,\n            account: accountInfo,\n            idToken: cacheRecord?.idToken?.secret || \"\",\n            idTokenClaims: idTokenClaims || {},\n            accessToken: accessToken,\n            fromCache: fromTokenCache,\n            expiresOn: expiresOn,\n            extExpiresOn: extExpiresOn,\n            refreshOn: refreshOn,\n            correlationId: request.correlationId,\n            requestId: requestId || Constants.EMPTY_STRING,\n            familyId: familyId,\n            tokenType: cacheRecord.accessToken?.tokenType || Constants.EMPTY_STRING,\n            state: requestState\n                ? requestState.userRequestState\n                : Constants.EMPTY_STRING,\n            cloudGraphHostName: cacheRecord.account?.cloudGraphHostName ||\n                Constants.EMPTY_STRING,\n            msGraphHost: cacheRecord.account?.msGraphHost || Constants.EMPTY_STRING,\n            code: serverTokenResponse?.spa_code,\n            fromNativeBroker: false,\n        };\n    }\n}\n\nexport { ResponseHandler };\n//# sourceMappingURL=ResponseHandler.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { BaseClient } from './BaseClient.mjs';\nimport { RequestParameterBuilder } from '../request/RequestParameterBuilder.mjs';\nimport { Separators, AADServerParamKeys, GrantType, AuthenticationScheme, PromptValue, HeaderNames } from '../utils/Constants.mjs';\nimport { isOidcProtocolMode } from '../config/ClientConfiguration.mjs';\nimport { ResponseHandler } from '../response/ResponseHandler.mjs';\nimport { StringUtils } from '../utils/StringUtils.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { UrlString } from '../url/UrlString.mjs';\nimport { PopTokenGenerator } from '../crypto/PopTokenGenerator.mjs';\nimport { TimeUtils } from '../utils/TimeUtils.mjs';\nimport { buildClientInfo, buildClientInfoFromHomeAccountId } from '../account/ClientInfo.mjs';\nimport { CcsCredentialType } from '../account/CcsCredential.mjs';\nimport { createClientConfigurationError } from '../error/ClientConfigurationError.mjs';\nimport { RequestValidator } from '../request/RequestValidator.mjs';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\nimport { invokeAsync } from '../utils/FunctionWrappers.mjs';\nimport { requestCannotBeMade, authorizationCodeMissingFromServerResponse } from '../error/ClientAuthErrorCodes.mjs';\nimport { logoutRequestEmpty, missingSshJwk } from '../error/ClientConfigurationErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Oauth2.0 Authorization Code client\n * @internal\n */\nclass AuthorizationCodeClient extends BaseClient {\n    constructor(configuration, performanceClient) {\n        super(configuration, performanceClient);\n        // Flag to indicate if client is for hybrid spa auth code redemption\n        this.includeRedirectUri = true;\n        this.oidcDefaultScopes =\n            this.config.authOptions.authority.options.OIDCOptions?.defaultScopes;\n    }\n    /**\n     * Creates the URL of the authorization request letting the user input credentials and consent to the\n     * application. The URL target the /authorize endpoint of the authority configured in the\n     * application object.\n     *\n     * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\n     * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\n     * acquireToken(AuthorizationCodeRequest)\n     * @param request\n     */\n    async getAuthCodeUrl(request) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.GetAuthCodeUrl, request.correlationId);\n        const queryString = await invokeAsync(this.createAuthCodeUrlQueryString.bind(this), PerformanceEvents.AuthClientCreateQueryString, this.logger, this.performanceClient, request.correlationId)(request);\n        return UrlString.appendQueryString(this.authority.authorizationEndpoint, queryString);\n    }\n    /**\n     * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the\n     * authorization_code_grant\n     * @param request\n     */\n    async acquireToken(request, authCodePayload) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthClientAcquireToken, request.correlationId);\n        if (!request.code) {\n            throw createClientAuthError(requestCannotBeMade);\n        }\n        const reqTimestamp = TimeUtils.nowSeconds();\n        const response = await invokeAsync(this.executeTokenRequest.bind(this), PerformanceEvents.AuthClientExecuteTokenRequest, this.logger, this.performanceClient, request.correlationId)(this.authority, request);\n        // Retrieve requestId from response headers\n        const requestId = response.headers?.[HeaderNames.X_MS_REQUEST_ID];\n        const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin, this.performanceClient);\n        // Validate response. This function throws a server error if an error is returned by the server.\n        responseHandler.validateTokenResponse(response.body);\n        return invokeAsync(responseHandler.handleServerTokenResponse.bind(responseHandler), PerformanceEvents.HandleServerTokenResponse, this.logger, this.performanceClient, request.correlationId)(response.body, this.authority, reqTimestamp, request, authCodePayload, undefined, undefined, undefined, requestId);\n    }\n    /**\n     * Handles the hash fragment response from public client code request. Returns a code response used by\n     * the client to exchange for a token in acquireToken.\n     * @param hashFragment\n     */\n    handleFragmentResponse(hashFragment, cachedState) {\n        // Handle responses.\n        const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, null, null);\n        const serverParams = UrlString.getDeserializedCodeResponse(this.config.authOptions.authority.options.OIDCOptions\n            ?.serverResponseType, hashFragment);\n        // Get code response\n        responseHandler.validateServerAuthorizationCodeResponse(serverParams, cachedState, this.cryptoUtils);\n        // throw when there is no auth code in the response\n        if (!serverParams.code) {\n            throw createClientAuthError(authorizationCodeMissingFromServerResponse);\n        }\n        return {\n            ...serverParams,\n            // Code param is optional in ServerAuthorizationCodeResponse but required in AuthorizationCodePaylod\n            code: serverParams.code,\n        };\n    }\n    /**\n     * Used to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param authorityUri\n     */\n    getLogoutUri(logoutRequest) {\n        // Throw error if logoutRequest is null/undefined\n        if (!logoutRequest) {\n            throw createClientConfigurationError(logoutRequestEmpty);\n        }\n        const queryString = this.createLogoutUrlQueryString(logoutRequest);\n        // Construct logout URI\n        return UrlString.appendQueryString(this.authority.endSessionEndpoint, queryString);\n    }\n    /**\n     * Executes POST request to token endpoint\n     * @param authority\n     * @param request\n     */\n    async executeTokenRequest(authority, request) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthClientExecuteTokenRequest, request.correlationId);\n        const queryParametersString = this.createTokenQueryParameters(request);\n        const endpoint = UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\n        const requestBody = await invokeAsync(this.createTokenRequestBody.bind(this), PerformanceEvents.AuthClientCreateTokenRequestBody, this.logger, this.performanceClient, request.correlationId)(request);\n        let ccsCredential = undefined;\n        if (request.clientInfo) {\n            try {\n                const clientInfo = buildClientInfo(request.clientInfo, this.cryptoUtils);\n                ccsCredential = {\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\n                    type: CcsCredentialType.HOME_ACCOUNT_ID,\n                };\n            }\n            catch (e) {\n                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\n            }\n        }\n        const headers = this.createTokenRequestHeaders(ccsCredential || request.ccsCredential);\n        const thumbprint = {\n            clientId: request.tokenBodyParameters?.clientId ||\n                this.config.authOptions.clientId,\n            authority: authority.canonicalAuthority,\n            scopes: request.scopes,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n        return invokeAsync(this.executePostToTokenEndpoint.bind(this), PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint, this.logger, this.performanceClient, request.correlationId)(endpoint, requestBody, headers, thumbprint, request.correlationId, PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint);\n    }\n    /**\n     * Generates a map for all the params to be sent to the service\n     * @param request\n     */\n    async createTokenRequestBody(request) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthClientCreateTokenRequestBody, request.correlationId);\n        const parameterBuilder = new RequestParameterBuilder();\n        parameterBuilder.addClientId(request.tokenBodyParameters?.[AADServerParamKeys.CLIENT_ID] ||\n            this.config.authOptions.clientId);\n        /*\n         * For hybrid spa flow, there will be a code but no verifier\n         * In this scenario, don't include redirect uri as auth code will not be bound to redirect URI\n         */\n        if (!this.includeRedirectUri) {\n            // Just validate\n            RequestValidator.validateRedirectUri(request.redirectUri);\n        }\n        else {\n            // Validate and include redirect uri\n            parameterBuilder.addRedirectUri(request.redirectUri);\n        }\n        // Add scope array, parameter builder will add default scopes and dedupe\n        parameterBuilder.addScopes(request.scopes, true, this.oidcDefaultScopes);\n        // add code: user set, not validated\n        parameterBuilder.addAuthorizationCode(request.code);\n        // Add library metadata\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n        parameterBuilder.addThrottling();\n        if (this.serverTelemetryManager && !isOidcProtocolMode(this.config)) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n        // add code_verifier if passed\n        if (request.codeVerifier) {\n            parameterBuilder.addCodeVerifier(request.codeVerifier);\n        }\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\n        }\n        if (this.config.clientCredentials.clientAssertion) {\n            const clientAssertion = this.config.clientCredentials.clientAssertion;\n            parameterBuilder.addClientAssertion(clientAssertion.assertion);\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\n        }\n        parameterBuilder.addGrantType(GrantType.AUTHORIZATION_CODE_GRANT);\n        parameterBuilder.addClientInfo();\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            const popTokenGenerator = new PopTokenGenerator(this.cryptoUtils, this.performanceClient);\n            const reqCnfData = await invokeAsync(popTokenGenerator.generateCnf.bind(popTokenGenerator), PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(request, this.logger);\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\n            parameterBuilder.addPopToken(reqCnfData.reqCnfString);\n        }\n        else if (request.authenticationScheme === AuthenticationScheme.SSH) {\n            if (request.sshJwk) {\n                parameterBuilder.addSshJwk(request.sshJwk);\n            }\n            else {\n                throw createClientConfigurationError(missingSshJwk);\n            }\n        }\n        const correlationId = request.correlationId ||\n            this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n        if (!StringUtils.isEmptyObj(request.claims) ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n        let ccsCred = undefined;\n        if (request.clientInfo) {\n            try {\n                const clientInfo = buildClientInfo(request.clientInfo, this.cryptoUtils);\n                ccsCred = {\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\n                    type: CcsCredentialType.HOME_ACCOUNT_ID,\n                };\n            }\n            catch (e) {\n                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\n            }\n        }\n        else {\n            ccsCred = request.ccsCredential;\n        }\n        // Adds these as parameters in the request instead of headers to prevent CORS preflight request\n        if (this.config.systemOptions.preventCorsPreflight && ccsCred) {\n            switch (ccsCred.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(ccsCred.credential);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\n                            e);\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    parameterBuilder.addCcsUpn(ccsCred.credential);\n                    break;\n            }\n        }\n        if (request.tokenBodyParameters) {\n            parameterBuilder.addExtraQueryParameters(request.tokenBodyParameters);\n        }\n        // Add hybrid spa parameters if not already provided\n        if (request.enableSpaAuthorizationCode &&\n            (!request.tokenBodyParameters ||\n                !request.tokenBodyParameters[AADServerParamKeys.RETURN_SPA_CODE])) {\n            parameterBuilder.addExtraQueryParameters({\n                [AADServerParamKeys.RETURN_SPA_CODE]: \"1\",\n            });\n        }\n        return parameterBuilder.createQueryString();\n    }\n    /**\n     * This API validates the `AuthorizationCodeUrlRequest` and creates a URL\n     * @param request\n     */\n    async createAuthCodeUrlQueryString(request) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthClientCreateQueryString, request.correlationId);\n        const parameterBuilder = new RequestParameterBuilder();\n        parameterBuilder.addClientId(request.extraQueryParameters?.[AADServerParamKeys.CLIENT_ID] ||\n            this.config.authOptions.clientId);\n        const requestScopes = [\n            ...(request.scopes || []),\n            ...(request.extraScopesToConsent || []),\n        ];\n        parameterBuilder.addScopes(requestScopes, true, this.oidcDefaultScopes);\n        // validate the redirectUri (to be a non null value)\n        parameterBuilder.addRedirectUri(request.redirectUri);\n        // generate the correlationId if not set by the user and add\n        const correlationId = request.correlationId ||\n            this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n        // add response_mode. If not passed in it defaults to query.\n        parameterBuilder.addResponseMode(request.responseMode);\n        // add response_type = code\n        parameterBuilder.addResponseTypeCode();\n        // add library info parameters\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        if (!isOidcProtocolMode(this.config)) {\n            parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n        }\n        // add client_info=1\n        parameterBuilder.addClientInfo();\n        if (request.codeChallenge && request.codeChallengeMethod) {\n            parameterBuilder.addCodeChallengeParams(request.codeChallenge, request.codeChallengeMethod);\n        }\n        if (request.prompt) {\n            parameterBuilder.addPrompt(request.prompt);\n        }\n        if (request.domainHint) {\n            parameterBuilder.addDomainHint(request.domainHint);\n        }\n        // Add sid or loginHint with preference for login_hint claim (in request) -> sid -> loginHint (upn/email) -> username of AccountInfo object\n        if (request.prompt !== PromptValue.SELECT_ACCOUNT) {\n            // AAD will throw if prompt=select_account is passed with an account hint\n            if (request.sid && request.prompt === PromptValue.NONE) {\n                // SessionID is only used in silent calls\n                this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from request\");\n                parameterBuilder.addSid(request.sid);\n            }\n            else if (request.account) {\n                const accountSid = this.extractAccountSid(request.account);\n                const accountLoginHintClaim = this.extractLoginHint(request.account);\n                // If login_hint claim is present, use it over sid/username\n                if (accountLoginHintClaim) {\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: login_hint claim present on account\");\n                    parameterBuilder.addLoginHint(accountLoginHintClaim);\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.account.homeAccountId);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\n                    }\n                }\n                else if (accountSid && request.prompt === PromptValue.NONE) {\n                    /*\n                     * If account and loginHint are provided, we will check account first for sid before adding loginHint\n                     * SessionId is only used in silent calls\n                     */\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from account\");\n                    parameterBuilder.addSid(accountSid);\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.account.homeAccountId);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\n                    }\n                }\n                else if (request.loginHint) {\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from request\");\n                    parameterBuilder.addLoginHint(request.loginHint);\n                    parameterBuilder.addCcsUpn(request.loginHint);\n                }\n                else if (request.account.username) {\n                    // Fallback to account username if provided\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from account\");\n                    parameterBuilder.addLoginHint(request.account.username);\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.account.homeAccountId);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\n                    }\n                }\n            }\n            else if (request.loginHint) {\n                this.logger.verbose(\"createAuthCodeUrlQueryString: No account, adding login_hint from request\");\n                parameterBuilder.addLoginHint(request.loginHint);\n                parameterBuilder.addCcsUpn(request.loginHint);\n            }\n        }\n        else {\n            this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints\");\n        }\n        if (request.nonce) {\n            parameterBuilder.addNonce(request.nonce);\n        }\n        if (request.state) {\n            parameterBuilder.addState(request.state);\n        }\n        if (request.claims ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n        if (request.extraQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\n        }\n        if (request.nativeBroker) {\n            // signal ests that this is a WAM call\n            parameterBuilder.addNativeBroker();\n            // pass the req_cnf for POP\n            if (request.authenticationScheme === AuthenticationScheme.POP) {\n                const popTokenGenerator = new PopTokenGenerator(this.cryptoUtils);\n                // to reduce the URL length, it is recommended to send the hash of the req_cnf instead of the whole string\n                const reqCnfData = await invokeAsync(popTokenGenerator.generateCnf.bind(popTokenGenerator), PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(request, this.logger);\n                parameterBuilder.addPopToken(reqCnfData.reqCnfHash);\n            }\n        }\n        return parameterBuilder.createQueryString();\n    }\n    /**\n     * This API validates the `EndSessionRequest` and creates a URL\n     * @param request\n     */\n    createLogoutUrlQueryString(request) {\n        const parameterBuilder = new RequestParameterBuilder();\n        if (request.postLogoutRedirectUri) {\n            parameterBuilder.addPostLogoutRedirectUri(request.postLogoutRedirectUri);\n        }\n        if (request.correlationId) {\n            parameterBuilder.addCorrelationId(request.correlationId);\n        }\n        if (request.idTokenHint) {\n            parameterBuilder.addIdTokenHint(request.idTokenHint);\n        }\n        if (request.state) {\n            parameterBuilder.addState(request.state);\n        }\n        if (request.logoutHint) {\n            parameterBuilder.addLogoutHint(request.logoutHint);\n        }\n        if (request.extraQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\n        }\n        return parameterBuilder.createQueryString();\n    }\n    /**\n     * Helper to get sid from account. Returns null if idTokenClaims are not present or sid is not present.\n     * @param account\n     */\n    extractAccountSid(account) {\n        return account.idTokenClaims?.sid || null;\n    }\n    extractLoginHint(account) {\n        return account.idTokenClaims?.login_hint || null;\n    }\n}\n\nexport { AuthorizationCodeClient };\n//# sourceMappingURL=AuthorizationCodeClient.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { Authority, formatAuthorityUri } from './Authority.mjs';\nimport { createClientConfigurationError } from '../error/ClientConfigurationError.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\nimport { invokeAsync } from '../utils/FunctionWrappers.mjs';\nimport { endpointResolutionError } from '../error/ClientAuthErrorCodes.mjs';\nimport { urlEmptyError } from '../error/ClientConfigurationErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass AuthorityFactory {\n    /**\n     * Create an authority object of the correct type based on the url\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\n     *\n     * Also performs endpoint discovery.\n     *\n     * @param authorityUri\n     * @param networkClient\n     * @param protocolMode\n     */\n    static async createDiscoveredInstance(authorityUri, networkClient, cacheManager, authorityOptions, logger, performanceClient, correlationId) {\n        performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance, correlationId);\n        const authorityUriFinal = Authority.transformCIAMAuthority(formatAuthorityUri(authorityUri));\n        // Initialize authority and perform discovery endpoint check.\n        const acquireTokenAuthority = AuthorityFactory.createInstance(authorityUriFinal, networkClient, cacheManager, authorityOptions, logger, performanceClient, correlationId);\n        try {\n            await invokeAsync(acquireTokenAuthority.resolveEndpointsAsync.bind(acquireTokenAuthority), PerformanceEvents.AuthorityResolveEndpointsAsync, logger, performanceClient, correlationId)();\n            return acquireTokenAuthority;\n        }\n        catch (e) {\n            throw createClientAuthError(endpointResolutionError);\n        }\n    }\n    /**\n     * Create an authority object of the correct type based on the url\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\n     *\n     * Does not perform endpoint discovery.\n     *\n     * @param authorityUrl\n     * @param networkInterface\n     * @param protocolMode\n     */\n    static createInstance(authorityUrl, networkInterface, cacheManager, authorityOptions, logger, performanceClient, correlationId) {\n        // Throw error if authority url is empty\n        if (!authorityUrl) {\n            throw createClientConfigurationError(urlEmptyError);\n        }\n        return new Authority(authorityUrl, networkInterface, cacheManager, authorityOptions, logger, performanceClient, correlationId);\n    }\n}\n\nexport { AuthorityFactory };\n//# sourceMappingURL=AuthorityFactory.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { CacheOutcome, Constants, SERVER_TELEM_CONSTANTS, Separators } from '../../utils/Constants.mjs';\nimport { AuthError } from '../../error/AuthError.mjs';\nimport { ServerTelemetryEntity } from '../../cache/entities/ServerTelemetryEntity.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass ServerTelemetryManager {\n    constructor(telemetryRequest, cacheManager) {\n        this.cacheOutcome = CacheOutcome.NOT_APPLICABLE;\n        this.cacheManager = cacheManager;\n        this.apiId = telemetryRequest.apiId;\n        this.correlationId = telemetryRequest.correlationId;\n        this.wrapperSKU = telemetryRequest.wrapperSKU || Constants.EMPTY_STRING;\n        this.wrapperVer = telemetryRequest.wrapperVer || Constants.EMPTY_STRING;\n        this.telemetryCacheKey =\n            SERVER_TELEM_CONSTANTS.CACHE_KEY +\n                Separators.CACHE_KEY_SEPARATOR +\n                telemetryRequest.clientId;\n    }\n    /**\n     * API to add MSER Telemetry to request\n     */\n    generateCurrentRequestHeaderValue() {\n        const request = `${this.apiId}${SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR}${this.cacheOutcome}`;\n        const platformFields = [this.wrapperSKU, this.wrapperVer].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const regionDiscoveryFields = this.getRegionDiscoveryFields();\n        const requestWithRegionDiscoveryFields = [\n            request,\n            regionDiscoveryFields,\n        ].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        return [\n            SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\n            requestWithRegionDiscoveryFields,\n            platformFields,\n        ].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\n    }\n    /**\n     * API to add MSER Telemetry for the last failed request\n     */\n    generateLastRequestHeaderValue() {\n        const lastRequests = this.getLastRequests();\n        const maxErrors = ServerTelemetryManager.maxErrorsToSend(lastRequests);\n        const failedRequests = lastRequests.failedRequests\n            .slice(0, 2 * maxErrors)\n            .join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const errors = lastRequests.errors\n            .slice(0, maxErrors)\n            .join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const errorCount = lastRequests.errors.length;\n        // Indicate whether this header contains all data or partial data\n        const overflow = maxErrors < errorCount\n            ? SERVER_TELEM_CONSTANTS.OVERFLOW_TRUE\n            : SERVER_TELEM_CONSTANTS.OVERFLOW_FALSE;\n        const platformFields = [errorCount, overflow].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        return [\n            SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\n            lastRequests.cacheHits,\n            failedRequests,\n            errors,\n            platformFields,\n        ].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\n    }\n    /**\n     * API to cache token failures for MSER data capture\n     * @param error\n     */\n    cacheFailedRequest(error) {\n        const lastRequests = this.getLastRequests();\n        if (lastRequests.errors.length >=\n            SERVER_TELEM_CONSTANTS.MAX_CACHED_ERRORS) {\n            // Remove a cached error to make room, first in first out\n            lastRequests.failedRequests.shift(); // apiId\n            lastRequests.failedRequests.shift(); // correlationId\n            lastRequests.errors.shift();\n        }\n        lastRequests.failedRequests.push(this.apiId, this.correlationId);\n        if (error instanceof Error && !!error && error.toString()) {\n            if (error instanceof AuthError) {\n                if (error.subError) {\n                    lastRequests.errors.push(error.subError);\n                }\n                else if (error.errorCode) {\n                    lastRequests.errors.push(error.errorCode);\n                }\n                else {\n                    lastRequests.errors.push(error.toString());\n                }\n            }\n            else {\n                lastRequests.errors.push(error.toString());\n            }\n        }\n        else {\n            lastRequests.errors.push(SERVER_TELEM_CONSTANTS.UNKNOWN_ERROR);\n        }\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\n        return;\n    }\n    /**\n     * Update server telemetry cache entry by incrementing cache hit counter\n     */\n    incrementCacheHits() {\n        const lastRequests = this.getLastRequests();\n        lastRequests.cacheHits += 1;\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\n        return lastRequests.cacheHits;\n    }\n    /**\n     * Get the server telemetry entity from cache or initialize a new one\n     */\n    getLastRequests() {\n        const initialValue = new ServerTelemetryEntity();\n        const lastRequests = this.cacheManager.getServerTelemetry(this.telemetryCacheKey);\n        return lastRequests || initialValue;\n    }\n    /**\n     * Remove server telemetry cache entry\n     */\n    clearTelemetryCache() {\n        const lastRequests = this.getLastRequests();\n        const numErrorsFlushed = ServerTelemetryManager.maxErrorsToSend(lastRequests);\n        const errorCount = lastRequests.errors.length;\n        if (numErrorsFlushed === errorCount) {\n            // All errors were sent on last request, clear Telemetry cache\n            this.cacheManager.removeItem(this.telemetryCacheKey);\n        }\n        else {\n            // Partial data was flushed to server, construct a new telemetry cache item with errors that were not flushed\n            const serverTelemEntity = new ServerTelemetryEntity();\n            serverTelemEntity.failedRequests =\n                lastRequests.failedRequests.slice(numErrorsFlushed * 2); // failedRequests contains 2 items for each error\n            serverTelemEntity.errors =\n                lastRequests.errors.slice(numErrorsFlushed);\n            this.cacheManager.setServerTelemetry(this.telemetryCacheKey, serverTelemEntity);\n        }\n    }\n    /**\n     * Returns the maximum number of errors that can be flushed to the server in the next network request\n     * @param serverTelemetryEntity\n     */\n    static maxErrorsToSend(serverTelemetryEntity) {\n        let i;\n        let maxErrors = 0;\n        let dataSize = 0;\n        const errorCount = serverTelemetryEntity.errors.length;\n        for (i = 0; i < errorCount; i++) {\n            // failedRequests parameter contains pairs of apiId and correlationId, multiply index by 2 to preserve pairs\n            const apiId = serverTelemetryEntity.failedRequests[2 * i] ||\n                Constants.EMPTY_STRING;\n            const correlationId = serverTelemetryEntity.failedRequests[2 * i + 1] ||\n                Constants.EMPTY_STRING;\n            const errorCode = serverTelemetryEntity.errors[i] || Constants.EMPTY_STRING;\n            // Count number of characters that would be added to header, each character is 1 byte. Add 3 at the end to account for separators\n            dataSize +=\n                apiId.toString().length +\n                    correlationId.toString().length +\n                    errorCode.length +\n                    3;\n            if (dataSize < SERVER_TELEM_CONSTANTS.MAX_LAST_HEADER_BYTES) {\n                // Adding this entry to the header would still keep header size below the limit\n                maxErrors += 1;\n            }\n            else {\n                break;\n            }\n        }\n        return maxErrors;\n    }\n    /**\n     * Get the region discovery fields\n     *\n     * @returns string\n     */\n    getRegionDiscoveryFields() {\n        const regionDiscoveryFields = [];\n        regionDiscoveryFields.push(this.regionUsed || Constants.EMPTY_STRING);\n        regionDiscoveryFields.push(this.regionSource || Constants.EMPTY_STRING);\n        regionDiscoveryFields.push(this.regionOutcome || Constants.EMPTY_STRING);\n        return regionDiscoveryFields.join(\",\");\n    }\n    /**\n     * Update the region discovery metadata\n     *\n     * @param regionDiscoveryMetadata\n     * @returns void\n     */\n    updateRegionDiscoveryMetadata(regionDiscoveryMetadata) {\n        this.regionUsed = regionDiscoveryMetadata.region_used;\n        this.regionSource = regionDiscoveryMetadata.region_source;\n        this.regionOutcome = regionDiscoveryMetadata.region_outcome;\n    }\n    /**\n     * Set cache outcome\n     */\n    setCacheOutcome(cacheOutcome) {\n        this.cacheOutcome = cacheOutcome;\n    }\n}\n\nexport { ServerTelemetryManager };\n//# sourceMappingURL=ServerTelemetryManager.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { AccountEntity, PerformanceEvents, AuthenticationScheme, createClientConfigurationError, ClientConfigurationErrorCodes, StringUtils, UrlString, ServerTelemetryManager, AuthorityFactory } from '@azure/msal-common';\nimport { version } from '../packageMetadata.mjs';\nimport { BrowserConstants } from '../utils/BrowserConstants.mjs';\nimport { getCurrentUri } from '../utils/BrowserUtils.mjs';\nimport { createNewGuid } from '../crypto/BrowserCrypto.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass BaseInteractionClient {\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId) {\n        this.config = config;\n        this.browserStorage = storageImpl;\n        this.browserCrypto = browserCrypto;\n        this.networkClient = this.config.system.networkClient;\n        this.eventHandler = eventHandler;\n        this.navigationClient = navigationClient;\n        this.nativeMessageHandler = nativeMessageHandler;\n        this.correlationId = correlationId || createNewGuid();\n        this.logger = logger.clone(BrowserConstants.MSAL_SKU, version, this.correlationId);\n        this.performanceClient = performanceClient;\n    }\n    async clearCacheOnLogout(account) {\n        if (account) {\n            if (AccountEntity.accountInfoIsEqual(account, this.browserStorage.getActiveAccount(), false)) {\n                this.logger.verbose(\"Setting active account to null\");\n                this.browserStorage.setActiveAccount(null);\n            }\n            // Clear given account.\n            try {\n                await this.browserStorage.removeAccount(AccountEntity.generateAccountCacheKey(account));\n                this.logger.verbose(\"Cleared cache items belonging to the account provided in the logout request.\");\n            }\n            catch (error) {\n                this.logger.error(\"Account provided in logout request was not found. Local cache unchanged.\");\n            }\n        }\n        else {\n            try {\n                this.logger.verbose(\"No account provided in logout request, clearing all cache items.\", this.correlationId);\n                // Clear all accounts and tokens\n                await this.browserStorage.clear();\n                // Clear any stray keys from IndexedDB\n                await this.browserCrypto.clearKeystore();\n            }\n            catch (e) {\n                this.logger.error(\"Attempted to clear all MSAL cache items and failed. Local cache unchanged.\");\n            }\n        }\n    }\n    /**\n     * Initializer function for all request APIs\n     * @param request\n     */\n    async initializeBaseRequest(request, account) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.InitializeBaseRequest, request.correlationId);\n        const authority = request.authority || this.config.auth.authority;\n        if (account) {\n            await this.validateRequestAuthority(authority, account);\n        }\n        const scopes = [...((request && request.scopes) || [])];\n        const validatedRequest = {\n            ...request,\n            correlationId: this.correlationId,\n            authority,\n            scopes,\n        };\n        // Set authenticationScheme to BEARER if not explicitly set in the request\n        if (!validatedRequest.authenticationScheme) {\n            validatedRequest.authenticationScheme = AuthenticationScheme.BEARER;\n            this.logger.verbose('Authentication Scheme wasn\\'t explicitly set in request, defaulting to \"Bearer\" request');\n        }\n        else {\n            if (validatedRequest.authenticationScheme ===\n                AuthenticationScheme.SSH) {\n                if (!request.sshJwk) {\n                    throw createClientConfigurationError(ClientConfigurationErrorCodes.missingSshJwk);\n                }\n                if (!request.sshKid) {\n                    throw createClientConfigurationError(ClientConfigurationErrorCodes.missingSshKid);\n                }\n            }\n            this.logger.verbose(`Authentication Scheme set to \"${validatedRequest.authenticationScheme}\" as configured in Auth request`);\n        }\n        // Set requested claims hash if claims-based caching is enabled and claims were requested\n        if (this.config.cache.claimsBasedCachingEnabled &&\n            request.claims &&\n            // Checks for empty stringified object \"{}\" which doesn't qualify as requested claims\n            !StringUtils.isEmptyObj(request.claims)) {\n            validatedRequest.requestedClaimsHash =\n                await this.browserCrypto.hashString(request.claims);\n        }\n        return validatedRequest;\n    }\n    /**\n     *\n     * Use to get the redirect uri configured in MSAL or null.\n     * @param requestRedirectUri\n     * @returns Redirect URL\n     *\n     */\n    getRedirectUri(requestRedirectUri) {\n        this.logger.verbose(\"getRedirectUri called\");\n        const redirectUri = requestRedirectUri ||\n            this.config.auth.redirectUri ||\n            getCurrentUri();\n        return UrlString.getAbsoluteUrl(redirectUri, getCurrentUri());\n    }\n    /*\n     * If authority provided in the request does not match environment/authority specified\n     * in the account or MSAL config, we throw an error.\n     */\n    async validateRequestAuthority(authority, account) {\n        const discoveredAuthority = await this.getDiscoveredAuthority(authority);\n        if (!discoveredAuthority.isAlias(account.environment)) {\n            throw createClientConfigurationError(ClientConfigurationErrorCodes.authorityMismatch);\n        }\n    }\n    /**\n     *\n     * @param apiId\n     * @param correlationId\n     * @param forceRefresh\n     */\n    initializeServerTelemetryManager(apiId, forceRefresh) {\n        this.logger.verbose(\"initializeServerTelemetryManager called\");\n        const telemetryPayload = {\n            clientId: this.config.auth.clientId,\n            correlationId: this.correlationId,\n            apiId: apiId,\n            forceRefresh: forceRefresh || false,\n            wrapperSKU: this.browserStorage.getWrapperMetadata()[0],\n            wrapperVer: this.browserStorage.getWrapperMetadata()[1],\n        };\n        return new ServerTelemetryManager(telemetryPayload, this.browserStorage);\n    }\n    /**\n     * Used to get a discovered version of the default authority.\n     * @param requestAuthority\n     * @param requestCorrelationId\n     */\n    async getDiscoveredAuthority(requestAuthority) {\n        this.logger.verbose(\"getDiscoveredAuthority called\");\n        const authorityOptions = {\n            protocolMode: this.config.auth.protocolMode,\n            OIDCOptions: this.config.auth.OIDCOptions,\n            knownAuthorities: this.config.auth.knownAuthorities,\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n            authorityMetadata: this.config.auth.authorityMetadata,\n        };\n        if (requestAuthority) {\n            this.logger.verbose(\"Creating discovered authority with request authority\");\n            return await AuthorityFactory.createDiscoveredInstance(requestAuthority, this.config.system.networkClient, this.browserStorage, authorityOptions, this.logger);\n        }\n        this.logger.verbose(\"Creating discovered authority with configured authority\");\n        return await AuthorityFactory.createDiscoveredInstance(this.config.auth.authority, this.config.system.networkClient, this.browserStorage, authorityOptions, this.logger);\n    }\n}\n\nexport { BaseInteractionClient };\n//# sourceMappingURL=BaseInteractionClient.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { PerformanceEvents, invoke, invokeAsync } from '@azure/msal-common';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { urlEncodeArr } from '../encode/Base64Encode.mjs';\nimport { getRandomValues, sha256Digest } from './BrowserCrypto.mjs';\nimport { pkceNotCreated } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n// Constant byte array length\nconst RANDOM_BYTE_ARR_LENGTH = 32;\n/**\n * This file defines APIs to generate PKCE codes and code verifiers.\n */\n/**\n * Generates PKCE Codes. See the RFC for more information: https://tools.ietf.org/html/rfc7636\n */\nasync function generatePkceCodes(performanceClient, logger, correlationId) {\n    performanceClient.addQueueMeasurement(PerformanceEvents.GeneratePkceCodes, correlationId);\n    const codeVerifier = invoke(generateCodeVerifier, PerformanceEvents.GenerateCodeVerifier, logger, performanceClient, correlationId)(performanceClient, logger, correlationId);\n    const codeChallenge = await invokeAsync(generateCodeChallengeFromVerifier, PerformanceEvents.GenerateCodeChallengeFromVerifier, logger, performanceClient, correlationId)(codeVerifier, performanceClient, logger, correlationId);\n    return {\n        verifier: codeVerifier,\n        challenge: codeChallenge,\n    };\n}\n/**\n * Generates a random 32 byte buffer and returns the base64\n * encoded string to be used as a PKCE Code Verifier\n */\nfunction generateCodeVerifier(performanceClient, logger, correlationId) {\n    try {\n        // Generate random values as utf-8\n        const buffer = new Uint8Array(RANDOM_BYTE_ARR_LENGTH);\n        invoke(getRandomValues, PerformanceEvents.GetRandomValues, logger, performanceClient, correlationId)(buffer);\n        // encode verifier as base64\n        const pkceCodeVerifierB64 = urlEncodeArr(buffer);\n        return pkceCodeVerifierB64;\n    }\n    catch (e) {\n        throw createBrowserAuthError(pkceNotCreated);\n    }\n}\n/**\n * Creates a base64 encoded PKCE Code Challenge string from the\n * hash created from the PKCE Code Verifier supplied\n */\nasync function generateCodeChallengeFromVerifier(pkceCodeVerifier, performanceClient, logger, correlationId) {\n    performanceClient.addQueueMeasurement(PerformanceEvents.GenerateCodeChallengeFromVerifier, correlationId);\n    try {\n        // hashed verifier\n        const pkceHashedCodeVerifier = await invokeAsync(sha256Digest, PerformanceEvents.Sha256Digest, logger, performanceClient, correlationId)(pkceCodeVerifier, performanceClient, correlationId);\n        // encode hash as base64\n        return urlEncodeArr(new Uint8Array(pkceHashedCodeVerifier));\n    }\n    catch (e) {\n        throw createBrowserAuthError(pkceNotCreated);\n    }\n}\n\nexport { generatePkceCodes };\n//# sourceMappingURL=PkceGenerator.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { PerformanceEvents, invokeAsync, Constants, UrlString, AuthorizationCodeClient, Authority, AuthorityFactory, ProtocolUtils } from '@azure/msal-common';\nimport { BaseInteractionClient } from './BaseInteractionClient.mjs';\nimport { BrowserConstants } from '../utils/BrowserConstants.mjs';\nimport { version } from '../packageMetadata.mjs';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { BrowserProtocolUtils } from '../utils/BrowserProtocolUtils.mjs';\nimport { getCurrentUri } from '../utils/BrowserUtils.mjs';\nimport { generatePkceCodes } from '../crypto/PkceGenerator.mjs';\nimport { createNewGuid } from '../crypto/BrowserCrypto.mjs';\nimport { noStateInHash, unableToParseState, stateInteractionTypeMismatch } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Defines the class structure and helper functions used by the \"standard\", non-brokered auth flows (popup, redirect, silent (RT), silent (iframe))\n */\nclass StandardInteractionClient extends BaseInteractionClient {\n    /**\n     * Generates an auth code request tied to the url request.\n     * @param request\n     */\n    async initializeAuthorizationCodeRequest(request) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, request.correlationId);\n        const generatedPkceParams = await invokeAsync(generatePkceCodes, PerformanceEvents.GeneratePkceCodes, this.logger, this.performanceClient, this.correlationId)(this.performanceClient, this.logger, this.correlationId);\n        const authCodeRequest = {\n            ...request,\n            redirectUri: request.redirectUri,\n            code: Constants.EMPTY_STRING,\n            codeVerifier: generatedPkceParams.verifier,\n        };\n        request.codeChallenge = generatedPkceParams.challenge;\n        request.codeChallengeMethod = Constants.S256_CODE_CHALLENGE_METHOD;\n        return authCodeRequest;\n    }\n    /**\n     * Initializer for the logout request.\n     * @param logoutRequest\n     */\n    initializeLogoutRequest(logoutRequest) {\n        this.logger.verbose(\"initializeLogoutRequest called\", logoutRequest?.correlationId);\n        const validLogoutRequest = {\n            correlationId: this.correlationId || createNewGuid(),\n            ...logoutRequest,\n        };\n        /**\n         * Set logout_hint to be login_hint from ID Token Claims if present\n         * and logoutHint attribute wasn't manually set in logout request\n         */\n        if (logoutRequest) {\n            // If logoutHint isn't set and an account was passed in, try to extract logoutHint from ID Token Claims\n            if (!logoutRequest.logoutHint) {\n                if (logoutRequest.account) {\n                    const logoutHint = this.getLogoutHintFromIdTokenClaims(logoutRequest.account);\n                    if (logoutHint) {\n                        this.logger.verbose(\"Setting logoutHint to login_hint ID Token Claim value for the account provided\");\n                        validLogoutRequest.logoutHint = logoutHint;\n                    }\n                }\n                else {\n                    this.logger.verbose(\"logoutHint was not set and account was not passed into logout request, logoutHint will not be set\");\n                }\n            }\n            else {\n                this.logger.verbose(\"logoutHint has already been set in logoutRequest\");\n            }\n        }\n        else {\n            this.logger.verbose(\"logoutHint will not be set since no logout request was configured\");\n        }\n        /*\n         * Only set redirect uri if logout request isn't provided or the set uri isn't null.\n         * Otherwise, use passed uri, config, or current page.\n         */\n        if (!logoutRequest || logoutRequest.postLogoutRedirectUri !== null) {\n            if (logoutRequest && logoutRequest.postLogoutRedirectUri) {\n                this.logger.verbose(\"Setting postLogoutRedirectUri to uri set on logout request\", validLogoutRequest.correlationId);\n                validLogoutRequest.postLogoutRedirectUri =\n                    UrlString.getAbsoluteUrl(logoutRequest.postLogoutRedirectUri, getCurrentUri());\n            }\n            else if (this.config.auth.postLogoutRedirectUri === null) {\n                this.logger.verbose(\"postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect\", validLogoutRequest.correlationId);\n            }\n            else if (this.config.auth.postLogoutRedirectUri) {\n                this.logger.verbose(\"Setting postLogoutRedirectUri to configured uri\", validLogoutRequest.correlationId);\n                validLogoutRequest.postLogoutRedirectUri =\n                    UrlString.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri, getCurrentUri());\n            }\n            else {\n                this.logger.verbose(\"Setting postLogoutRedirectUri to current page\", validLogoutRequest.correlationId);\n                validLogoutRequest.postLogoutRedirectUri =\n                    UrlString.getAbsoluteUrl(getCurrentUri(), getCurrentUri());\n            }\n        }\n        else {\n            this.logger.verbose(\"postLogoutRedirectUri passed as null, not setting post logout redirect uri\", validLogoutRequest.correlationId);\n        }\n        return validLogoutRequest;\n    }\n    /**\n     * Parses login_hint ID Token Claim out of AccountInfo object to be used as\n     * logout_hint in end session request.\n     * @param account\n     */\n    getLogoutHintFromIdTokenClaims(account) {\n        const idTokenClaims = account.idTokenClaims;\n        if (idTokenClaims) {\n            if (idTokenClaims.login_hint) {\n                return idTokenClaims.login_hint;\n            }\n            else {\n                this.logger.verbose(\"The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request\");\n            }\n        }\n        else {\n            this.logger.verbose(\"The provided account does not contain ID Token Claims, logoutHint will not be added to logout request\");\n        }\n        return null;\n    }\n    /**\n     * Creates an Authorization Code Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    async createAuthCodeClient(serverTelemetryManager, authorityUrl, requestAzureCloudOptions) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.correlationId);\n        // Create auth module.\n        const clientConfig = await invokeAsync(this.getClientConfiguration.bind(this), PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.logger, this.performanceClient, this.correlationId)(serverTelemetryManager, authorityUrl, requestAzureCloudOptions);\n        return new AuthorizationCodeClient(clientConfig, this.performanceClient);\n    }\n    /**\n     * Creates a Client Configuration object with the given request authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param requestAuthority\n     * @param requestCorrelationId\n     */\n    async getClientConfiguration(serverTelemetryManager, requestAuthority, requestAzureCloudOptions) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.correlationId);\n        const discoveredAuthority = await invokeAsync(this.getDiscoveredAuthority.bind(this), PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority, this.logger, this.performanceClient, this.correlationId)(requestAuthority, requestAzureCloudOptions);\n        const logger = this.config.system.loggerOptions;\n        return {\n            authOptions: {\n                clientId: this.config.auth.clientId,\n                authority: discoveredAuthority,\n                clientCapabilities: this.config.auth.clientCapabilities,\n            },\n            systemOptions: {\n                tokenRenewalOffsetSeconds: this.config.system.tokenRenewalOffsetSeconds,\n                preventCorsPreflight: true,\n            },\n            loggerOptions: {\n                loggerCallback: logger.loggerCallback,\n                piiLoggingEnabled: logger.piiLoggingEnabled,\n                logLevel: logger.logLevel,\n                correlationId: this.correlationId,\n            },\n            cacheOptions: {\n                claimsBasedCachingEnabled: this.config.cache.claimsBasedCachingEnabled,\n            },\n            cryptoInterface: this.browserCrypto,\n            networkInterface: this.networkClient,\n            storageInterface: this.browserStorage,\n            serverTelemetryManager: serverTelemetryManager,\n            libraryInfo: {\n                sku: BrowserConstants.MSAL_SKU,\n                version: version,\n                cpu: Constants.EMPTY_STRING,\n                os: Constants.EMPTY_STRING,\n            },\n            telemetry: this.config.telemetry,\n        };\n    }\n    /**\n     * @param hash\n     * @param interactionType\n     */\n    validateAndExtractStateFromHash(serverParams, interactionType, requestCorrelationId) {\n        this.logger.verbose(\"validateAndExtractStateFromHash called\", requestCorrelationId);\n        if (!serverParams.state) {\n            throw createBrowserAuthError(noStateInHash);\n        }\n        const platformStateObj = BrowserProtocolUtils.extractBrowserRequestState(this.browserCrypto, serverParams.state);\n        if (!platformStateObj) {\n            throw createBrowserAuthError(unableToParseState);\n        }\n        if (platformStateObj.interactionType !== interactionType) {\n            throw createBrowserAuthError(stateInteractionTypeMismatch);\n        }\n        this.logger.verbose(\"Returning state from hash\", requestCorrelationId);\n        return serverParams.state;\n    }\n    /**\n     * Used to get a discovered version of the default authority.\n     * @param requestAuthority\n     * @param requestCorrelationId\n     */\n    async getDiscoveredAuthority(requestAuthority, requestAzureCloudOptions) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority, this.correlationId);\n        const authorityOptions = {\n            protocolMode: this.config.auth.protocolMode,\n            OIDCOptions: this.config.auth.OIDCOptions,\n            knownAuthorities: this.config.auth.knownAuthorities,\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n            authorityMetadata: this.config.auth.authorityMetadata,\n            skipAuthorityMetadataCache: this.config.auth.skipAuthorityMetadataCache,\n        };\n        // build authority string based on auth params, precedence - azureCloudInstance + tenant >> authority\n        const userAuthority = requestAuthority\n            ? requestAuthority\n            : this.config.auth.authority;\n        // fall back to the authority from config\n        const builtAuthority = Authority.generateAuthority(userAuthority, requestAzureCloudOptions || this.config.auth.azureCloudOptions);\n        return await invokeAsync(AuthorityFactory.createDiscoveredInstance.bind(AuthorityFactory), PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance, this.logger, this.performanceClient, this.correlationId)(builtAuthority, this.config.system.networkClient, this.browserStorage, authorityOptions, this.logger, this.performanceClient, this.correlationId);\n    }\n    /**\n     * Helper to initialize required request parameters for interactive APIs and ssoSilent()\n     * @param request\n     * @param interactionType\n     */\n    async initializeAuthorizationRequest(request, interactionType) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.correlationId);\n        const redirectUri = this.getRedirectUri(request.redirectUri);\n        const browserState = {\n            interactionType: interactionType,\n        };\n        const state = ProtocolUtils.setRequestState(this.browserCrypto, (request && request.state) || Constants.EMPTY_STRING, browserState);\n        const baseRequest = await invokeAsync(this.initializeBaseRequest.bind(this), PerformanceEvents.InitializeBaseRequest, this.logger, this.performanceClient, this.correlationId)(request);\n        const validatedRequest = {\n            ...baseRequest,\n            redirectUri: redirectUri,\n            state: state,\n            nonce: request.nonce || createNewGuid(),\n            responseMode: this.config.auth.OIDCOptions\n                .serverResponseType,\n        };\n        const account = request.account || this.browserStorage.getActiveAccount();\n        if (account) {\n            this.logger.verbose(\"Setting validated request account\", this.correlationId);\n            this.logger.verbosePii(`Setting validated request account: ${account.homeAccountId}`, this.correlationId);\n            validatedRequest.account = account;\n        }\n        // Check for ADAL/MSAL v1 SSO\n        if (!validatedRequest.loginHint && !account) {\n            const legacyLoginHint = this.browserStorage.getLegacyLoginHint();\n            if (legacyLoginHint) {\n                validatedRequest.loginHint = legacyLoginHint;\n            }\n        }\n        return validatedRequest;\n    }\n}\n\nexport { StandardInteractionClient };\n//# sourceMappingURL=StandardInteractionClient.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst contentError = \"ContentError\";\nconst userSwitch = \"user_switch\";\n\nexport { contentError, userSwitch };\n//# sourceMappingURL=NativeAuthErrorCodes.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n// Status Codes that can be thrown by WAM\nconst USER_INTERACTION_REQUIRED = \"USER_INTERACTION_REQUIRED\";\nconst USER_CANCEL = \"USER_CANCEL\";\nconst NO_NETWORK = \"NO_NETWORK\";\nconst PERSISTENT_ERROR = \"PERSISTENT_ERROR\";\nconst DISABLED = \"DISABLED\";\nconst ACCOUNT_UNAVAILABLE = \"ACCOUNT_UNAVAILABLE\";\n\nexport { ACCOUNT_UNAVAILABLE, DISABLED, NO_NETWORK, PERSISTENT_ERROR, USER_CANCEL, USER_INTERACTION_REQUIRED };\n//# sourceMappingURL=NativeStatusCodes.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { AuthError, InteractionRequiredAuthError, createInteractionRequiredAuthError, InteractionRequiredAuthErrorCodes } from '@azure/msal-common';\nimport { createBrowserAuthError } from './BrowserAuthError.mjs';\nimport { contentError, userSwitch } from './NativeAuthErrorCodes.mjs';\nimport { PERSISTENT_ERROR, DISABLED, NO_NETWORK, USER_CANCEL, USER_INTERACTION_REQUIRED, ACCOUNT_UNAVAILABLE } from '../broker/nativeBroker/NativeStatusCodes.mjs';\nimport { noNetworkConnectivity, userCancelled } from './BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst INVALID_METHOD_ERROR = -2147186943;\nconst NativeAuthErrorMessages = {\n    [userSwitch]: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\",\n};\nclass NativeAuthError extends AuthError {\n    constructor(errorCode, description, ext) {\n        super(errorCode, description);\n        Object.setPrototypeOf(this, NativeAuthError.prototype);\n        this.name = \"NativeAuthError\";\n        this.ext = ext;\n    }\n}\n/**\n * These errors should result in a fallback to the 'standard' browser based auth flow.\n */\nfunction isFatalNativeAuthError(error) {\n    if (error.ext &&\n        error.ext.status &&\n        (error.ext.status === PERSISTENT_ERROR ||\n            error.ext.status === DISABLED)) {\n        return true;\n    }\n    if (error.ext &&\n        error.ext.error &&\n        error.ext.error === INVALID_METHOD_ERROR) {\n        return true;\n    }\n    switch (error.errorCode) {\n        case contentError:\n            return true;\n        default:\n            return false;\n    }\n}\n/**\n * Create the appropriate error object based on the WAM status code.\n * @param code\n * @param description\n * @param ext\n * @returns\n */\nfunction createNativeAuthError(code, description, ext) {\n    if (ext && ext.status) {\n        switch (ext.status) {\n            case ACCOUNT_UNAVAILABLE:\n                return createInteractionRequiredAuthError(InteractionRequiredAuthErrorCodes.nativeAccountUnavailable);\n            case USER_INTERACTION_REQUIRED:\n                return new InteractionRequiredAuthError(code, description);\n            case USER_CANCEL:\n                return createBrowserAuthError(userCancelled);\n            case NO_NETWORK:\n                return createBrowserAuthError(noNetworkConnectivity);\n        }\n    }\n    return new NativeAuthError(code, NativeAuthErrorMessages[code] || description, ext);\n}\n\nexport { NativeAuthError, NativeAuthErrorMessages, createNativeAuthError, isFatalNativeAuthError };\n//# sourceMappingURL=NativeAuthError.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { isOidcProtocolMode } from '../config/ClientConfiguration.mjs';\nimport { BaseClient } from './BaseClient.mjs';\nimport { RequestParameterBuilder } from '../request/RequestParameterBuilder.mjs';\nimport { AADServerParamKeys, GrantType, AuthenticationScheme, HeaderNames, Errors } from '../utils/Constants.mjs';\nimport { ResponseHandler } from '../response/ResponseHandler.mjs';\nimport { PopTokenGenerator } from '../crypto/PopTokenGenerator.mjs';\nimport { StringUtils } from '../utils/StringUtils.mjs';\nimport { createClientConfigurationError } from '../error/ClientConfigurationError.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { ServerError } from '../error/ServerError.mjs';\nimport { TimeUtils } from '../utils/TimeUtils.mjs';\nimport { UrlString } from '../url/UrlString.mjs';\nimport { CcsCredentialType } from '../account/CcsCredential.mjs';\nimport { buildClientInfoFromHomeAccountId } from '../account/ClientInfo.mjs';\nimport { createInteractionRequiredAuthError, InteractionRequiredAuthError } from '../error/InteractionRequiredAuthError.mjs';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\nimport { invokeAsync, invoke } from '../utils/FunctionWrappers.mjs';\nimport { tokenRequestEmpty, missingSshJwk } from '../error/ClientConfigurationErrorCodes.mjs';\nimport { noAccountInSilentRequest } from '../error/ClientAuthErrorCodes.mjs';\nimport { noTokensFound } from '../error/InteractionRequiredAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * OAuth2.0 refresh token client\n * @internal\n */\nclass RefreshTokenClient extends BaseClient {\n    constructor(configuration, performanceClient) {\n        super(configuration, performanceClient);\n    }\n    async acquireToken(request) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientAcquireToken, request.correlationId);\n        const reqTimestamp = TimeUtils.nowSeconds();\n        const response = await invokeAsync(this.executeTokenRequest.bind(this), PerformanceEvents.RefreshTokenClientExecuteTokenRequest, this.logger, this.performanceClient, request.correlationId)(request, this.authority);\n        // Retrieve requestId from response headers\n        const requestId = response.headers?.[HeaderNames.X_MS_REQUEST_ID];\n        const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);\n        responseHandler.validateTokenResponse(response.body);\n        return invokeAsync(responseHandler.handleServerTokenResponse.bind(responseHandler), PerformanceEvents.HandleServerTokenResponse, this.logger, this.performanceClient, request.correlationId)(response.body, this.authority, reqTimestamp, request, undefined, undefined, true, request.forceCache, requestId);\n    }\n    /**\n     * Gets cached refresh token and attaches to request, then calls acquireToken API\n     * @param request\n     */\n    async acquireTokenByRefreshToken(request) {\n        // Cannot renew token if no request object is given.\n        if (!request) {\n            throw createClientConfigurationError(tokenRequestEmpty);\n        }\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken, request.correlationId);\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n            throw createClientAuthError(noAccountInSilentRequest);\n        }\n        // try checking if FOCI is enabled for the given application\n        const isFOCI = this.cacheManager.isAppMetadataFOCI(request.account.environment);\n        // if the app is part of the family, retrive a Family refresh token if present and make a refreshTokenRequest\n        if (isFOCI) {\n            try {\n                return invokeAsync(this.acquireTokenWithCachedRefreshToken.bind(this), PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request.correlationId)(request, true);\n            }\n            catch (e) {\n                const noFamilyRTInCache = e instanceof InteractionRequiredAuthError &&\n                    e.errorCode ===\n                        noTokensFound;\n                const clientMismatchErrorWithFamilyRT = e instanceof ServerError &&\n                    e.errorCode === Errors.INVALID_GRANT_ERROR &&\n                    e.subError === Errors.CLIENT_MISMATCH_ERROR;\n                // if family Refresh Token (FRT) cache acquisition fails or if client_mismatch error is seen with FRT, reattempt with application Refresh Token (ART)\n                if (noFamilyRTInCache || clientMismatchErrorWithFamilyRT) {\n                    return invokeAsync(this.acquireTokenWithCachedRefreshToken.bind(this), PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request.correlationId)(request, false);\n                    // throw in all other cases\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        // fall back to application refresh token acquisition\n        return invokeAsync(this.acquireTokenWithCachedRefreshToken.bind(this), PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request.correlationId)(request, false);\n    }\n    /**\n     * makes a network call to acquire tokens by exchanging RefreshToken available in userCache; throws if refresh token is not cached\n     * @param request\n     */\n    async acquireTokenWithCachedRefreshToken(request, foci) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\n        // fetches family RT or application RT based on FOCI value\n        const refreshToken = invoke(this.cacheManager.getRefreshToken.bind(this.cacheManager), PerformanceEvents.CacheManagerGetRefreshToken, this.logger, this.performanceClient, request.correlationId)(request.account, foci);\n        if (!refreshToken) {\n            throw createInteractionRequiredAuthError(noTokensFound);\n        }\n        // attach cached RT size to the current measurement\n        const refreshTokenRequest = {\n            ...request,\n            refreshToken: refreshToken.secret,\n            authenticationScheme: request.authenticationScheme || AuthenticationScheme.BEARER,\n            ccsCredential: {\n                credential: request.account.homeAccountId,\n                type: CcsCredentialType.HOME_ACCOUNT_ID,\n            },\n        };\n        return invokeAsync(this.acquireToken.bind(this), PerformanceEvents.RefreshTokenClientAcquireToken, this.logger, this.performanceClient, request.correlationId)(refreshTokenRequest);\n    }\n    /**\n     * Constructs the network message and makes a NW call to the underlying secure token service\n     * @param request\n     * @param authority\n     */\n    async executeTokenRequest(request, authority) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientExecuteTokenRequest, request.correlationId);\n        const queryParametersString = this.createTokenQueryParameters(request);\n        const endpoint = UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\n        const requestBody = await invokeAsync(this.createTokenRequestBody.bind(this), PerformanceEvents.RefreshTokenClientCreateTokenRequestBody, this.logger, this.performanceClient, request.correlationId)(request);\n        const headers = this.createTokenRequestHeaders(request.ccsCredential);\n        const thumbprint = {\n            clientId: request.tokenBodyParameters?.clientId ||\n                this.config.authOptions.clientId,\n            authority: authority.canonicalAuthority,\n            scopes: request.scopes,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n        return invokeAsync(this.executePostToTokenEndpoint.bind(this), PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint, this.logger, this.performanceClient, request.correlationId)(endpoint, requestBody, headers, thumbprint, request.correlationId, PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint);\n    }\n    /**\n     * Helper function to create the token request body\n     * @param request\n     */\n    async createTokenRequestBody(request) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientCreateTokenRequestBody, request.correlationId);\n        const correlationId = request.correlationId;\n        const parameterBuilder = new RequestParameterBuilder();\n        parameterBuilder.addClientId(request.tokenBodyParameters?.[AADServerParamKeys.CLIENT_ID] ||\n            this.config.authOptions.clientId);\n        if (request.redirectUri) {\n            parameterBuilder.addRedirectUri(request.redirectUri);\n        }\n        parameterBuilder.addScopes(request.scopes, true, this.config.authOptions.authority.options.OIDCOptions?.defaultScopes);\n        parameterBuilder.addGrantType(GrantType.REFRESH_TOKEN_GRANT);\n        parameterBuilder.addClientInfo();\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n        parameterBuilder.addThrottling();\n        if (this.serverTelemetryManager && !isOidcProtocolMode(this.config)) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n        parameterBuilder.addCorrelationId(correlationId);\n        parameterBuilder.addRefreshToken(request.refreshToken);\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\n        }\n        if (this.config.clientCredentials.clientAssertion) {\n            const clientAssertion = this.config.clientCredentials.clientAssertion;\n            parameterBuilder.addClientAssertion(clientAssertion.assertion);\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\n        }\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            const popTokenGenerator = new PopTokenGenerator(this.cryptoUtils, this.performanceClient);\n            const reqCnfData = await invokeAsync(popTokenGenerator.generateCnf.bind(popTokenGenerator), PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(request, this.logger);\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\n            parameterBuilder.addPopToken(reqCnfData.reqCnfString);\n        }\n        else if (request.authenticationScheme === AuthenticationScheme.SSH) {\n            if (request.sshJwk) {\n                parameterBuilder.addSshJwk(request.sshJwk);\n            }\n            else {\n                throw createClientConfigurationError(missingSshJwk);\n            }\n        }\n        if (!StringUtils.isEmptyObj(request.claims) ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n        if (this.config.systemOptions.preventCorsPreflight &&\n            request.ccsCredential) {\n            switch (request.ccsCredential.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.ccsCredential.credential);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\n                            e);\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    parameterBuilder.addCcsUpn(request.ccsCredential.credential);\n                    break;\n            }\n        }\n        if (request.tokenBodyParameters) {\n            parameterBuilder.addExtraQueryParameters(request.tokenBodyParameters);\n        }\n        return parameterBuilder.createQueryString();\n    }\n}\n\nexport { RefreshTokenClient };\n//# sourceMappingURL=RefreshTokenClient.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { BaseClient } from './BaseClient.mjs';\nimport { TimeUtils } from '../utils/TimeUtils.mjs';\nimport { RefreshTokenClient } from './RefreshTokenClient.mjs';\nimport { ClientAuthError, createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { ResponseHandler } from '../response/ResponseHandler.mjs';\nimport { CacheOutcome } from '../utils/Constants.mjs';\nimport { StringUtils } from '../utils/StringUtils.mjs';\nimport { extractTokenClaims, checkMaxAge } from '../account/AuthToken.mjs';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\nimport { invokeAsync } from '../utils/FunctionWrappers.mjs';\nimport { tokenRefreshRequired, noAccountInSilentRequest, authTimeNotFound } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass SilentFlowClient extends BaseClient {\n    constructor(configuration, performanceClient) {\n        super(configuration, performanceClient);\n    }\n    /**\n     * Retrieves a token from cache if it is still valid, or uses the cached refresh token to renew\n     * the given token and returns the renewed token\n     * @param request\n     */\n    async acquireToken(request) {\n        try {\n            const [authResponse, cacheOutcome] = await this.acquireCachedToken(request);\n            // if the token is not expired but must be refreshed; get a new one in the background\n            if (cacheOutcome === CacheOutcome.PROACTIVELY_REFRESHED) {\n                this.logger.info(\"SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed.\");\n                // refresh the access token in the background\n                const refreshTokenClient = new RefreshTokenClient(this.config, this.performanceClient);\n                refreshTokenClient\n                    .acquireTokenByRefreshToken(request)\n                    .catch(() => {\n                    // do nothing, this is running in the background and no action is to be taken upon success or failure\n                });\n            }\n            // return the cached token\n            return authResponse;\n        }\n        catch (e) {\n            if (e instanceof ClientAuthError &&\n                e.errorCode === tokenRefreshRequired) {\n                const refreshTokenClient = new RefreshTokenClient(this.config, this.performanceClient);\n                return refreshTokenClient.acquireTokenByRefreshToken(request);\n            }\n            else {\n                throw e;\n            }\n        }\n    }\n    /**\n     * Retrieves token from cache or throws an error if it must be refreshed.\n     * @param request\n     */\n    async acquireCachedToken(request) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.SilentFlowClientAcquireCachedToken, request.correlationId);\n        let lastCacheOutcome = CacheOutcome.NOT_APPLICABLE;\n        if (request.forceRefresh ||\n            (!this.config.cacheOptions.claimsBasedCachingEnabled &&\n                !StringUtils.isEmptyObj(request.claims))) {\n            // Must refresh due to present force_refresh flag.\n            this.setCacheOutcome(CacheOutcome.FORCE_REFRESH_OR_CLAIMS, request.correlationId);\n            throw createClientAuthError(tokenRefreshRequired);\n        }\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n            throw createClientAuthError(noAccountInSilentRequest);\n        }\n        const environment = request.authority || this.authority.getPreferredCache();\n        const cacheRecord = this.cacheManager.readCacheRecord(request.account, request, environment);\n        if (!cacheRecord.accessToken) {\n            // must refresh due to non-existent access_token\n            this.setCacheOutcome(CacheOutcome.NO_CACHED_ACCESS_TOKEN, request.correlationId);\n            throw createClientAuthError(tokenRefreshRequired);\n        }\n        else if (TimeUtils.wasClockTurnedBack(cacheRecord.accessToken.cachedAt) ||\n            TimeUtils.isTokenExpired(cacheRecord.accessToken.expiresOn, this.config.systemOptions.tokenRenewalOffsetSeconds)) {\n            // must refresh due to the expires_in value\n            this.setCacheOutcome(CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED, request.correlationId);\n            throw createClientAuthError(tokenRefreshRequired);\n        }\n        else if (cacheRecord.accessToken.refreshOn &&\n            TimeUtils.isTokenExpired(cacheRecord.accessToken.refreshOn, 0)) {\n            // must refresh (in the background) due to the refresh_in value\n            lastCacheOutcome = CacheOutcome.PROACTIVELY_REFRESHED;\n            // don't throw ClientAuthError.createRefreshRequiredError(), return cached token instead\n        }\n        this.setCacheOutcome(lastCacheOutcome, request.correlationId);\n        if (this.config.serverTelemetryManager) {\n            this.config.serverTelemetryManager.incrementCacheHits();\n        }\n        return [\n            await invokeAsync(this.generateResultFromCacheRecord.bind(this), PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord, this.logger, this.performanceClient, request.correlationId)(cacheRecord, request),\n            lastCacheOutcome,\n        ];\n    }\n    setCacheOutcome(cacheOutcome, correlationId) {\n        this.serverTelemetryManager?.setCacheOutcome(cacheOutcome);\n        this.performanceClient?.addFields({\n            cacheOutcome: cacheOutcome,\n        }, correlationId);\n        this.logger.info(`Token refresh is required due to cache outcome: ${cacheOutcome}`);\n    }\n    /**\n     * Helper function to build response object from the CacheRecord\n     * @param cacheRecord\n     */\n    async generateResultFromCacheRecord(cacheRecord, request) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord, request.correlationId);\n        let idTokenClaims;\n        if (cacheRecord.idToken) {\n            idTokenClaims = extractTokenClaims(cacheRecord.idToken.secret, this.config.cryptoInterface.base64Decode);\n        }\n        // token max_age check\n        if (request.maxAge || request.maxAge === 0) {\n            const authTime = idTokenClaims?.auth_time;\n            if (!authTime) {\n                throw createClientAuthError(authTimeNotFound);\n            }\n            checkMaxAge(authTime, request.maxAge);\n        }\n        return await ResponseHandler.generateAuthenticationResult(this.cryptoUtils, this.authority, cacheRecord, true, request, idTokenClaims);\n    }\n}\n\nexport { SilentFlowClient };\n//# sourceMappingURL=SilentFlowClient.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { StandardInteractionClient } from './StandardInteractionClient.mjs';\nimport { PerformanceEvents, invokeAsync, SilentFlowClient } from '@azure/msal-common';\nimport { ApiId } from '../utils/BrowserConstants.mjs';\nimport { BrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { cryptoKeyNotFound } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SilentCacheClient extends StandardInteractionClient {\n    /**\n     * Returns unexpired tokens from the cache, if available\n     * @param silentRequest\n     */\n    async acquireToken(silentRequest) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentCacheClientAcquireToken, silentRequest.correlationId);\n        // Telemetry manager only used to increment cacheHits here\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_silentFlow);\n        const silentAuthClient = await this.createSilentFlowClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions);\n        this.logger.verbose(\"Silent auth client created\");\n        try {\n            const response = await invokeAsync(silentAuthClient.acquireCachedToken.bind(silentAuthClient), PerformanceEvents.SilentFlowClientAcquireCachedToken, this.logger, this.performanceClient, silentRequest.correlationId)(silentRequest);\n            const authResponse = response[0];\n            this.performanceClient.addFields({\n                fromCache: true,\n            }, silentRequest.correlationId);\n            return authResponse;\n        }\n        catch (error) {\n            if (error instanceof BrowserAuthError &&\n                error.errorCode === cryptoKeyNotFound) {\n                this.logger.verbose(\"Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair.\");\n            }\n            throw error;\n        }\n    }\n    /**\n     * API to silenty clear the browser cache.\n     * @param logoutRequest\n     */\n    logout(logoutRequest) {\n        this.logger.verbose(\"logoutRedirect called\");\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n        return this.clearCacheOnLogout(validLogoutRequest?.account);\n    }\n    /**\n     * Creates an Silent Flow Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    async createSilentFlowClient(serverTelemetryManager, authorityUrl, azureCloudOptions) {\n        // Create auth module.\n        const clientConfig = await invokeAsync(this.getClientConfiguration.bind(this), PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.logger, this.performanceClient, this.correlationId)(serverTelemetryManager, authorityUrl, azureCloudOptions);\n        return new SilentFlowClient(clientConfig, this.performanceClient);\n    }\n    async initializeSilentRequest(request, account) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.InitializeSilentRequest, this.correlationId);\n        const baseRequest = await invokeAsync(this.initializeBaseRequest.bind(this), PerformanceEvents.InitializeBaseRequest, this.logger, this.performanceClient, this.correlationId)(request, account);\n        return {\n            ...request,\n            ...baseRequest,\n            account: account,\n            forceRefresh: request.forceRefresh || false,\n        };\n    }\n}\n\nexport { SilentCacheClient };\n//# sourceMappingURL=SilentCacheClient.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { PerformanceEvents, TimeUtils, ScopeSet, createClientAuthError, ClientAuthErrorCodes, AuthToken, AccountEntity, Constants, AuthorityType, AuthenticationScheme, PopTokenGenerator, IdTokenEntity, AccessTokenEntity, CacheRecord, createAuthError, AuthErrorCodes, UrlString, OIDC_DEFAULT_SCOPES, invokeAsync, AADServerParamKeys, PromptValue } from '@azure/msal-common';\nimport { BaseInteractionClient } from './BaseInteractionClient.mjs';\nimport { TemporaryCacheKeys, NativeConstants, NativeExtensionMethod, ApiId } from '../utils/BrowserConstants.mjs';\nimport { NativeAuthError, isFatalNativeAuthError, createNativeAuthError } from '../error/NativeAuthError.mjs';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { SilentCacheClient } from './SilentCacheClient.mjs';\nimport { base64Decode } from '../encode/Base64Decode.mjs';\nimport { userSwitch } from '../error/NativeAuthErrorCodes.mjs';\nimport { nativePromptNotSupported } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst BrokerServerParamKeys = {\n    BROKER_CLIENT_ID: \"brk_client_id\",\n    BROKER_REDIRECT_URI: \"brk_redirect_uri\",\n};\nclass NativeInteractionClient extends BaseInteractionClient {\n    constructor(config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, provider, accountId, nativeStorageImpl, correlationId) {\n        super(config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId);\n        this.apiId = apiId;\n        this.accountId = accountId;\n        this.nativeMessageHandler = provider;\n        this.nativeStorageManager = nativeStorageImpl;\n        this.silentCacheClient = new SilentCacheClient(config, this.nativeStorageManager, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId);\n    }\n    /**\n     * Acquire token from native platform via browser extension\n     * @param request\n     */\n    async acquireToken(request) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.NativeInteractionClientAcquireToken, request.correlationId);\n        this.logger.trace(\"NativeInteractionClient - acquireToken called.\");\n        // start the perf measurement\n        const nativeATMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.NativeInteractionClientAcquireToken, request.correlationId);\n        const reqTimestamp = TimeUtils.nowSeconds();\n        // initialize native request\n        const nativeRequest = await this.initializeNativeRequest(request);\n        // check if the tokens can be retrieved from internal cache\n        try {\n            const result = await this.acquireTokensFromCache(this.accountId, nativeRequest);\n            nativeATMeasurement.end({\n                success: true,\n                isNativeBroker: false,\n                fromCache: true,\n            });\n            return result;\n        }\n        catch (e) {\n            // continue with a native call for any and all errors\n            this.logger.info(\"MSAL internal Cache does not contain tokens, proceed to make a native call\");\n        }\n        // fall back to native calls\n        const messageBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: nativeRequest,\n        };\n        const response = await this.nativeMessageHandler.sendMessage(messageBody);\n        const validatedResponse = this.validateNativeResponse(response);\n        return this.handleNativeResponse(validatedResponse, nativeRequest, reqTimestamp)\n            .then((result) => {\n            nativeATMeasurement.end({\n                success: true,\n                isNativeBroker: true,\n                requestId: result.requestId,\n            });\n            return result;\n        })\n            .catch((error) => {\n            nativeATMeasurement.end({\n                success: false,\n                errorCode: error.errorCode,\n                subErrorCode: error.subError,\n                isNativeBroker: true,\n            });\n            throw error;\n        });\n    }\n    /**\n     * Creates silent flow request\n     * @param request\n     * @param cachedAccount\n     * @returns CommonSilentFlowRequest\n     */\n    createSilentCacheRequest(request, cachedAccount) {\n        return {\n            authority: request.authority,\n            correlationId: this.correlationId,\n            scopes: ScopeSet.fromString(request.scope).asArray(),\n            account: cachedAccount,\n            forceRefresh: false,\n        };\n    }\n    /**\n     * Fetches the tokens from the cache if un-expired\n     * @param nativeAccountId\n     * @param request\n     * @returns authenticationResult\n     */\n    async acquireTokensFromCache(nativeAccountId, request) {\n        if (!nativeAccountId) {\n            this.logger.warning(\"NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided\");\n            throw createClientAuthError(ClientAuthErrorCodes.noAccountFound);\n        }\n        // fetch the account from browser cache\n        const account = this.browserStorage.getBaseAccountInfo({\n            nativeAccountId,\n        });\n        if (!account) {\n            throw createClientAuthError(ClientAuthErrorCodes.noAccountFound);\n        }\n        // leverage silent flow for cached tokens retrieval\n        try {\n            const silentRequest = this.createSilentCacheRequest(request, account);\n            const result = await this.silentCacheClient.acquireToken(silentRequest);\n            const fullAccount = {\n                ...account,\n                idTokenClaims: result?.idTokenClaims,\n            };\n            return {\n                ...result,\n                account: fullAccount,\n            };\n        }\n        catch (e) {\n            throw e;\n        }\n    }\n    /**\n     * Acquires a token from native platform then redirects to the redirectUri instead of returning the response\n     * @param request\n     */\n    async acquireTokenRedirect(request) {\n        this.logger.trace(\"NativeInteractionClient - acquireTokenRedirect called.\");\n        const nativeRequest = await this.initializeNativeRequest(request);\n        const messageBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: nativeRequest,\n        };\n        try {\n            const response = await this.nativeMessageHandler.sendMessage(messageBody);\n            this.validateNativeResponse(response);\n        }\n        catch (e) {\n            // Only throw fatal errors here to allow application to fallback to regular redirect. Otherwise proceed and the error will be thrown in handleRedirectPromise\n            if (e instanceof NativeAuthError && isFatalNativeAuthError(e)) {\n                throw e;\n            }\n        }\n        this.browserStorage.setTemporaryCache(TemporaryCacheKeys.NATIVE_REQUEST, JSON.stringify(nativeRequest), true);\n        const navigationOptions = {\n            apiId: ApiId.acquireTokenRedirect,\n            timeout: this.config.system.redirectNavigationTimeout,\n            noHistory: false,\n        };\n        const redirectUri = this.config.auth.navigateToLoginRequestUrl\n            ? window.location.href\n            : this.getRedirectUri(request.redirectUri);\n        await this.navigationClient.navigateExternal(redirectUri, navigationOptions); // Need to treat this as external to ensure handleRedirectPromise is run again\n    }\n    /**\n     * If the previous page called native platform for a token using redirect APIs, send the same request again and return the response\n     */\n    async handleRedirectPromise() {\n        this.logger.trace(\"NativeInteractionClient - handleRedirectPromise called.\");\n        if (!this.browserStorage.isInteractionInProgress(true)) {\n            this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\n            return null;\n        }\n        // remove prompt from the request to prevent WAM from prompting twice\n        const cachedRequest = this.browserStorage.getCachedNativeRequest();\n        if (!cachedRequest) {\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null.\");\n            return null;\n        }\n        const { prompt, ...request } = cachedRequest;\n        if (prompt) {\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window.\");\n        }\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.NATIVE_REQUEST));\n        const messageBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: request,\n        };\n        const reqTimestamp = TimeUtils.nowSeconds();\n        try {\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise sending message to native broker.\");\n            const response = await this.nativeMessageHandler.sendMessage(messageBody);\n            this.validateNativeResponse(response);\n            const result = this.handleNativeResponse(response, request, reqTimestamp);\n            this.browserStorage.setInteractionInProgress(false);\n            return result;\n        }\n        catch (e) {\n            this.browserStorage.setInteractionInProgress(false);\n            throw e;\n        }\n    }\n    /**\n     * Logout from native platform via browser extension\n     * @param request\n     */\n    logout() {\n        this.logger.trace(\"NativeInteractionClient - logout called.\");\n        return Promise.reject(\"Logout not implemented yet\");\n    }\n    /**\n     * Transform response from native platform into AuthenticationResult object which will be returned to the end user\n     * @param response\n     * @param request\n     * @param reqTimestamp\n     */\n    async handleNativeResponse(response, request, reqTimestamp) {\n        this.logger.trace(\"NativeInteractionClient - handleNativeResponse called.\");\n        if (response.account.id !== request.accountId) {\n            // User switch in native broker prompt is not supported. All users must first sign in through web flow to ensure server state is in sync\n            throw createNativeAuthError(userSwitch);\n        }\n        // Get the preferred_cache domain for the given authority\n        const authority = await this.getDiscoveredAuthority(request.authority);\n        // generate identifiers\n        const idTokenClaims = AuthToken.extractTokenClaims(response.id_token, base64Decode);\n        const homeAccountIdentifier = this.createHomeAccountIdentifier(response, idTokenClaims);\n        const accountEntity = AccountEntity.createAccount({\n            homeAccountId: homeAccountIdentifier,\n            idTokenClaims: idTokenClaims,\n            clientInfo: response.client_info,\n            nativeAccountId: response.account.id,\n        }, authority);\n        // generate authenticationResult\n        const result = await this.generateAuthenticationResult(response, request, idTokenClaims, accountEntity, authority.canonicalAuthority, reqTimestamp);\n        // cache accounts and tokens in the appropriate storage\n        this.cacheAccount(accountEntity);\n        this.cacheNativeTokens(response, request, homeAccountIdentifier, idTokenClaims, result.accessToken, result.tenantId, reqTimestamp);\n        return result;\n    }\n    /**\n     * creates an homeAccountIdentifier for the account\n     * @param response\n     * @param idTokenObj\n     * @returns\n     */\n    createHomeAccountIdentifier(response, idTokenClaims) {\n        // Save account in browser storage\n        const homeAccountIdentifier = AccountEntity.generateHomeAccountId(response.client_info || Constants.EMPTY_STRING, AuthorityType.Default, this.logger, this.browserCrypto, idTokenClaims);\n        return homeAccountIdentifier;\n    }\n    /**\n     * Helper to generate scopes\n     * @param response\n     * @param request\n     * @returns\n     */\n    generateScopes(response, request) {\n        return response.scope\n            ? ScopeSet.fromString(response.scope)\n            : ScopeSet.fromString(request.scope);\n    }\n    /**\n     * If PoP token is requesred, records the PoP token if returned from the WAM, else generates one in the browser\n     * @param request\n     * @param response\n     */\n    async generatePopAccessToken(response, request) {\n        if (request.tokenType === AuthenticationScheme.POP) {\n            /**\n             * This code prioritizes SHR returned from the native layer. In case of error/SHR not calculated from WAM and the AT\n             * is still received, SHR is calculated locally\n             */\n            // Check if native layer returned an SHR token\n            if (response.shr) {\n                this.logger.trace(\"handleNativeServerResponse: SHR is enabled in native layer\");\n                return response.shr;\n            }\n            // Generate SHR in msal js if WAM does not compute it when POP is enabled\n            const popTokenGenerator = new PopTokenGenerator(this.browserCrypto);\n            const shrParameters = {\n                resourceRequestMethod: request.resourceRequestMethod,\n                resourceRequestUri: request.resourceRequestUri,\n                shrClaims: request.shrClaims,\n                shrNonce: request.shrNonce,\n            };\n            /**\n             * KeyID must be present in the native request from when the PoP key was generated in order for\n             * PopTokenGenerator to query the full key for signing\n             */\n            if (!request.keyId) {\n                throw createClientAuthError(ClientAuthErrorCodes.keyIdMissing);\n            }\n            return await popTokenGenerator.signPopToken(response.access_token, request.keyId, shrParameters);\n        }\n        else {\n            return response.access_token;\n        }\n    }\n    /**\n     * Generates authentication result\n     * @param response\n     * @param request\n     * @param idTokenObj\n     * @param accountEntity\n     * @param authority\n     * @param reqTimestamp\n     * @returns\n     */\n    async generateAuthenticationResult(response, request, idTokenClaims, accountEntity, authority, reqTimestamp) {\n        // Add Native Broker fields to Telemetry\n        const mats = this.addTelemetryFromNativeResponse(response);\n        // If scopes not returned in server response, use request scopes\n        const responseScopes = response.scope\n            ? ScopeSet.fromString(response.scope)\n            : ScopeSet.fromString(request.scope);\n        const accountProperties = response.account.properties || {};\n        const uid = accountProperties[\"UID\"] ||\n            idTokenClaims.oid ||\n            idTokenClaims.sub ||\n            Constants.EMPTY_STRING;\n        const tid = accountProperties[\"TenantId\"] ||\n            idTokenClaims.tid ||\n            Constants.EMPTY_STRING;\n        const fullAccountEntity = idTokenClaims\n            ? Object.assign(new AccountEntity(), {\n                ...accountEntity,\n                idTokenClaims: idTokenClaims,\n            })\n            : accountEntity;\n        const accountInfo = fullAccountEntity.getAccountInfo();\n        // generate PoP token as needed\n        const responseAccessToken = await this.generatePopAccessToken(response, request);\n        const tokenType = request.tokenType === AuthenticationScheme.POP\n            ? AuthenticationScheme.POP\n            : AuthenticationScheme.BEARER;\n        const result = {\n            authority: authority,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes.asArray(),\n            account: accountInfo,\n            idToken: response.id_token,\n            idTokenClaims: idTokenClaims,\n            accessToken: responseAccessToken,\n            fromCache: mats ? this.isResponseFromCache(mats) : false,\n            expiresOn: new Date(Number(reqTimestamp + response.expires_in) * 1000),\n            tokenType: tokenType,\n            correlationId: this.correlationId,\n            state: response.state,\n            fromNativeBroker: true,\n        };\n        return result;\n    }\n    /**\n     * cache the account entity in browser storage\n     * @param accountEntity\n     */\n    cacheAccount(accountEntity) {\n        // Store the account info and hence `nativeAccountId` in browser cache\n        this.browserStorage.setAccount(accountEntity);\n        // Remove any existing cached tokens for this account in browser storage\n        this.browserStorage.removeAccountContext(accountEntity).catch((e) => {\n            this.logger.error(`Error occurred while removing account context from browser storage. ${e}`);\n        });\n    }\n    /**\n     * Stores the access_token and id_token in inmemory storage\n     * @param response\n     * @param request\n     * @param homeAccountIdentifier\n     * @param idTokenObj\n     * @param responseAccessToken\n     * @param tenantId\n     * @param reqTimestamp\n     */\n    cacheNativeTokens(response, request, homeAccountIdentifier, idTokenClaims, responseAccessToken, tenantId, reqTimestamp) {\n        const cachedIdToken = IdTokenEntity.createIdTokenEntity(homeAccountIdentifier, request.authority, response.id_token || \"\", request.clientId, idTokenClaims.tid || \"\");\n        // cache accessToken in inmemory storage\n        const expiresIn = request.tokenType === AuthenticationScheme.POP\n            ? Constants.SHR_NONCE_VALIDITY\n            : (typeof response.expires_in === \"string\"\n                ? parseInt(response.expires_in, 10)\n                : response.expires_in) || 0;\n        const tokenExpirationSeconds = reqTimestamp + expiresIn;\n        const responseScopes = this.generateScopes(response, request);\n        const cachedAccessToken = AccessTokenEntity.createAccessTokenEntity(homeAccountIdentifier, request.authority, responseAccessToken, request.clientId, idTokenClaims.tid || tenantId, responseScopes.printScopes(), tokenExpirationSeconds, 0, this.browserCrypto);\n        const nativeCacheRecord = new CacheRecord(undefined, cachedIdToken, cachedAccessToken);\n        void this.nativeStorageManager.saveCacheRecord(nativeCacheRecord, request.storeInCache);\n    }\n    addTelemetryFromNativeResponse(response) {\n        const mats = this.getMATSFromResponse(response);\n        if (!mats) {\n            return null;\n        }\n        this.performanceClient.addFields({\n            extensionId: this.nativeMessageHandler.getExtensionId(),\n            extensionVersion: this.nativeMessageHandler.getExtensionVersion(),\n            matsBrokerVersion: mats.broker_version,\n            matsAccountJoinOnStart: mats.account_join_on_start,\n            matsAccountJoinOnEnd: mats.account_join_on_end,\n            matsDeviceJoin: mats.device_join,\n            matsPromptBehavior: mats.prompt_behavior,\n            matsApiErrorCode: mats.api_error_code,\n            matsUiVisible: mats.ui_visible,\n            matsSilentCode: mats.silent_code,\n            matsSilentBiSubCode: mats.silent_bi_sub_code,\n            matsSilentMessage: mats.silent_message,\n            matsSilentStatus: mats.silent_status,\n            matsHttpStatus: mats.http_status,\n            matsHttpEventCount: mats.http_event_count,\n        }, this.correlationId);\n        return mats;\n    }\n    /**\n     * Validates native platform response before processing\n     * @param response\n     */\n    validateNativeResponse(response) {\n        if (response.hasOwnProperty(\"access_token\") &&\n            response.hasOwnProperty(\"id_token\") &&\n            response.hasOwnProperty(\"client_info\") &&\n            response.hasOwnProperty(\"account\") &&\n            response.hasOwnProperty(\"scope\") &&\n            response.hasOwnProperty(\"expires_in\")) {\n            return response;\n        }\n        else {\n            throw createAuthError(AuthErrorCodes.unexpectedError, \"Response missing expected properties.\");\n        }\n    }\n    /**\n     * Gets MATS telemetry from native response\n     * @param response\n     * @returns\n     */\n    getMATSFromResponse(response) {\n        if (response.properties.MATS) {\n            try {\n                return JSON.parse(response.properties.MATS);\n            }\n            catch (e) {\n                this.logger.error(\"NativeInteractionClient - Error parsing MATS telemetry, returning null instead\");\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns whether or not response came from native cache\n     * @param response\n     * @returns\n     */\n    isResponseFromCache(mats) {\n        if (typeof mats.is_cached === \"undefined\") {\n            this.logger.verbose(\"NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false.\");\n            return false;\n        }\n        return !!mats.is_cached;\n    }\n    /**\n     * Translates developer provided request object into NativeRequest object\n     * @param request\n     */\n    async initializeNativeRequest(request) {\n        this.logger.trace(\"NativeInteractionClient - initializeNativeRequest called\");\n        const authority = request.authority || this.config.auth.authority;\n        if (request.account) {\n            await this.validateRequestAuthority(authority, request.account);\n        }\n        const canonicalAuthority = new UrlString(authority);\n        canonicalAuthority.validateAsUri();\n        // scopes are expected to be received by the native broker as \"scope\" and will be added to the request below. Other properties that should be dropped from the request to the native broker can be included in the object destructuring here.\n        const { scopes, ...remainingProperties } = request;\n        const scopeSet = new ScopeSet(scopes || []);\n        scopeSet.appendScopes(OIDC_DEFAULT_SCOPES);\n        const getPrompt = () => {\n            // If request is silent, prompt is always none\n            switch (this.apiId) {\n                case ApiId.ssoSilent:\n                case ApiId.acquireTokenSilent_silentFlow:\n                    this.logger.trace(\"initializeNativeRequest: silent request sets prompt to none\");\n                    return PromptValue.NONE;\n            }\n            // Prompt not provided, request may proceed and native broker decides if it needs to prompt\n            if (!request.prompt) {\n                this.logger.trace(\"initializeNativeRequest: prompt was not provided\");\n                return undefined;\n            }\n            // If request is interactive, check if prompt provided is allowed to go directly to native broker\n            switch (request.prompt) {\n                case PromptValue.NONE:\n                case PromptValue.CONSENT:\n                case PromptValue.LOGIN:\n                    this.logger.trace(\"initializeNativeRequest: prompt is compatible with native flow\");\n                    return request.prompt;\n                default:\n                    this.logger.trace(`initializeNativeRequest: prompt = ${request.prompt} is not compatible with native flow`);\n                    throw createBrowserAuthError(nativePromptNotSupported);\n            }\n        };\n        const validatedRequest = {\n            ...remainingProperties,\n            accountId: this.accountId,\n            clientId: this.config.auth.clientId,\n            authority: canonicalAuthority.urlString,\n            scope: scopeSet.printScopes(),\n            redirectUri: this.getRedirectUri(request.redirectUri),\n            prompt: getPrompt(),\n            correlationId: this.correlationId,\n            tokenType: request.authenticationScheme,\n            windowTitleSubstring: document.title,\n            extraParameters: {\n                ...request.extraQueryParameters,\n                ...request.tokenQueryParameters,\n            },\n            extendedExpiryToken: false, // Make this configurable?\n        };\n        this.handleExtraBrokerParams(validatedRequest);\n        validatedRequest.extraParameters =\n            validatedRequest.extraParameters || {};\n        validatedRequest.extraParameters.telemetry =\n            NativeConstants.MATS_TELEMETRY;\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            // add POP request type\n            const shrParameters = {\n                resourceRequestUri: request.resourceRequestUri,\n                resourceRequestMethod: request.resourceRequestMethod,\n                shrClaims: request.shrClaims,\n                shrNonce: request.shrNonce,\n            };\n            const popTokenGenerator = new PopTokenGenerator(this.browserCrypto);\n            const reqCnfData = await invokeAsync(popTokenGenerator.generateCnf.bind(popTokenGenerator), PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, this.correlationId)(shrParameters, this.logger);\n            // to reduce the URL length, it is recommended to send the hash of the req_cnf instead of the whole string\n            validatedRequest.reqCnf = reqCnfData.reqCnfHash;\n            validatedRequest.keyId = reqCnfData.kid;\n        }\n        return validatedRequest;\n    }\n    /**\n     * Handles extra broker request parameters\n     * @param request {NativeTokenRequest}\n     * @private\n     */\n    handleExtraBrokerParams(request) {\n        if (!request.extraParameters) {\n            return;\n        }\n        if (request.extraParameters.hasOwnProperty(BrokerServerParamKeys.BROKER_CLIENT_ID) &&\n            request.extraParameters.hasOwnProperty(BrokerServerParamKeys.BROKER_REDIRECT_URI) &&\n            request.extraParameters.hasOwnProperty(AADServerParamKeys.CLIENT_ID)) {\n            const child_client_id = request.extraParameters[AADServerParamKeys.CLIENT_ID];\n            const child_redirect_uri = request.redirectUri;\n            const brk_redirect_uri = request.extraParameters[BrokerServerParamKeys.BROKER_REDIRECT_URI];\n            request.extraParameters = {\n                child_client_id,\n                child_redirect_uri,\n            };\n            request.redirectUri = brk_redirect_uri;\n        }\n    }\n}\n\nexport { NativeInteractionClient };\n//# sourceMappingURL=NativeInteractionClient.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { NativeConstants, NativeExtensionMethod } from '../../utils/BrowserConstants.mjs';\nimport { PerformanceEvents, createAuthError, AuthErrorCodes, AuthenticationScheme } from '@azure/msal-common';\nimport { createNativeAuthError } from '../../error/NativeAuthError.mjs';\nimport { createBrowserAuthError } from '../../error/BrowserAuthError.mjs';\nimport { createNewGuid } from '../../crypto/BrowserCrypto.mjs';\nimport { nativeHandshakeTimeout, nativeExtensionNotInstalled } from '../../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass NativeMessageHandler {\n    constructor(logger, handshakeTimeoutMs, performanceClient, extensionId) {\n        this.logger = logger;\n        this.handshakeTimeoutMs = handshakeTimeoutMs;\n        this.extensionId = extensionId;\n        this.resolvers = new Map(); // Used for non-handshake messages\n        this.handshakeResolvers = new Map(); // Used for handshake messages\n        this.messageChannel = new MessageChannel();\n        this.windowListener = this.onWindowMessage.bind(this); // Window event callback doesn't have access to 'this' unless it's bound\n        this.performanceClient = performanceClient;\n        this.handshakeEvent = performanceClient.startMeasurement(PerformanceEvents.NativeMessageHandlerHandshake);\n    }\n    /**\n     * Sends a given message to the extension and resolves with the extension response\n     * @param body\n     */\n    async sendMessage(body) {\n        this.logger.trace(\"NativeMessageHandler - sendMessage called.\");\n        const req = {\n            channel: NativeConstants.CHANNEL_ID,\n            extensionId: this.extensionId,\n            responseId: createNewGuid(),\n            body: body,\n        };\n        this.logger.trace(\"NativeMessageHandler - Sending request to browser extension\");\n        this.logger.tracePii(`NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(req)}`);\n        this.messageChannel.port1.postMessage(req);\n        return new Promise((resolve, reject) => {\n            this.resolvers.set(req.responseId, { resolve, reject });\n        });\n    }\n    /**\n     * Returns an instance of the MessageHandler that has successfully established a connection with an extension\n     * @param {Logger} logger\n     * @param {number} handshakeTimeoutMs\n     * @param {IPerformanceClient} performanceClient\n     * @param {ICrypto} crypto\n     */\n    static async createProvider(logger, handshakeTimeoutMs, performanceClient) {\n        logger.trace(\"NativeMessageHandler - createProvider called.\");\n        try {\n            const preferredProvider = new NativeMessageHandler(logger, handshakeTimeoutMs, performanceClient, NativeConstants.PREFERRED_EXTENSION_ID);\n            await preferredProvider.sendHandshakeRequest();\n            return preferredProvider;\n        }\n        catch (e) {\n            // If preferred extension fails for whatever reason, fallback to using any installed extension\n            const backupProvider = new NativeMessageHandler(logger, handshakeTimeoutMs, performanceClient);\n            await backupProvider.sendHandshakeRequest();\n            return backupProvider;\n        }\n    }\n    /**\n     * Send handshake request helper.\n     */\n    async sendHandshakeRequest() {\n        this.logger.trace(\"NativeMessageHandler - sendHandshakeRequest called.\");\n        // Register this event listener before sending handshake\n        window.addEventListener(\"message\", this.windowListener, false); // false is important, because content script message processing should work first\n        const req = {\n            channel: NativeConstants.CHANNEL_ID,\n            extensionId: this.extensionId,\n            responseId: createNewGuid(),\n            body: {\n                method: NativeExtensionMethod.HandshakeRequest,\n            },\n        };\n        this.handshakeEvent.add({\n            extensionId: this.extensionId,\n            extensionHandshakeTimeoutMs: this.handshakeTimeoutMs,\n        });\n        this.messageChannel.port1.onmessage = (event) => {\n            this.onChannelMessage(event);\n        };\n        window.postMessage(req, window.origin, [this.messageChannel.port2]);\n        return new Promise((resolve, reject) => {\n            this.handshakeResolvers.set(req.responseId, { resolve, reject });\n            this.timeoutId = window.setTimeout(() => {\n                /*\n                 * Throw an error if neither HandshakeResponse nor original Handshake request are received in a reasonable timeframe.\n                 * This typically suggests an event handler stopped propagation of the Handshake request but did not respond to it on the MessageChannel port\n                 */\n                window.removeEventListener(\"message\", this.windowListener, false);\n                this.messageChannel.port1.close();\n                this.messageChannel.port2.close();\n                this.handshakeEvent.end({\n                    extensionHandshakeTimedOut: true,\n                    success: false,\n                });\n                reject(createBrowserAuthError(nativeHandshakeTimeout));\n                this.handshakeResolvers.delete(req.responseId);\n            }, this.handshakeTimeoutMs); // Use a reasonable timeout in milliseconds here\n        });\n    }\n    /**\n     * Invoked when a message is posted to the window. If a handshake request is received it means the extension is not installed.\n     * @param event\n     */\n    onWindowMessage(event) {\n        this.logger.trace(\"NativeMessageHandler - onWindowMessage called\");\n        // We only accept messages from ourselves\n        if (event.source !== window) {\n            return;\n        }\n        const request = event.data;\n        if (!request.channel ||\n            request.channel !== NativeConstants.CHANNEL_ID) {\n            return;\n        }\n        if (request.extensionId && request.extensionId !== this.extensionId) {\n            return;\n        }\n        if (request.body.method === NativeExtensionMethod.HandshakeRequest) {\n            const handshakeResolver = this.handshakeResolvers.get(request.responseId);\n            /*\n             * Filter out responses with no matched resolvers sooner to keep channel ports open while waiting for\n             * the proper response.\n             */\n            if (!handshakeResolver) {\n                this.logger.trace(`NativeMessageHandler.onWindowMessage - resolver can't be found for request ${request.responseId}`);\n                return;\n            }\n            // If we receive this message back it means no extension intercepted the request, meaning no extension supporting handshake protocol is installed\n            this.logger.verbose(request.extensionId\n                ? `Extension with id: ${request.extensionId} not installed`\n                : \"No extension installed\");\n            clearTimeout(this.timeoutId);\n            this.messageChannel.port1.close();\n            this.messageChannel.port2.close();\n            window.removeEventListener(\"message\", this.windowListener, false);\n            this.handshakeEvent.end({\n                success: false,\n                extensionInstalled: false,\n            });\n            handshakeResolver.reject(createBrowserAuthError(nativeExtensionNotInstalled));\n        }\n    }\n    /**\n     * Invoked when a message is received from the extension on the MessageChannel port\n     * @param event\n     */\n    onChannelMessage(event) {\n        this.logger.trace(\"NativeMessageHandler - onChannelMessage called.\");\n        const request = event.data;\n        const resolver = this.resolvers.get(request.responseId);\n        const handshakeResolver = this.handshakeResolvers.get(request.responseId);\n        try {\n            const method = request.body.method;\n            if (method === NativeExtensionMethod.Response) {\n                if (!resolver) {\n                    return;\n                }\n                const response = request.body.response;\n                this.logger.trace(\"NativeMessageHandler - Received response from browser extension\");\n                this.logger.tracePii(`NativeMessageHandler - Received response from browser extension: ${JSON.stringify(response)}`);\n                if (response.status !== \"Success\") {\n                    resolver.reject(createNativeAuthError(response.code, response.description, response.ext));\n                }\n                else if (response.result) {\n                    if (response.result[\"code\"] &&\n                        response.result[\"description\"]) {\n                        resolver.reject(createNativeAuthError(response.result[\"code\"], response.result[\"description\"], response.result[\"ext\"]));\n                    }\n                    else {\n                        resolver.resolve(response.result);\n                    }\n                }\n                else {\n                    throw createAuthError(AuthErrorCodes.unexpectedError, \"Event does not contain result.\");\n                }\n                this.resolvers.delete(request.responseId);\n            }\n            else if (method === NativeExtensionMethod.HandshakeResponse) {\n                if (!handshakeResolver) {\n                    this.logger.trace(`NativeMessageHandler.onChannelMessage - resolver can't be found for request ${request.responseId}`);\n                    return;\n                }\n                clearTimeout(this.timeoutId); // Clear setTimeout\n                window.removeEventListener(\"message\", this.windowListener, false); // Remove 'No extension' listener\n                this.extensionId = request.extensionId;\n                this.extensionVersion = request.body.version;\n                this.logger.verbose(`NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`);\n                this.handshakeEvent.end({\n                    extensionInstalled: true,\n                    success: true,\n                });\n                handshakeResolver.resolve();\n                this.handshakeResolvers.delete(request.responseId);\n            }\n            // Do nothing if method is not Response or HandshakeResponse\n        }\n        catch (err) {\n            this.logger.error(\"Error parsing response from WAM Extension\");\n            this.logger.errorPii(`Error parsing response from WAM Extension: ${err}`);\n            this.logger.errorPii(`Unable to parse ${event}`);\n            if (resolver) {\n                resolver.reject(err);\n            }\n            else if (handshakeResolver) {\n                handshakeResolver.reject(err);\n            }\n        }\n    }\n    /**\n     * Returns the Id for the browser extension this handler is communicating with\n     * @returns\n     */\n    getExtensionId() {\n        return this.extensionId;\n    }\n    /**\n     * Returns the version for the browser extension this handler is communicating with\n     * @returns\n     */\n    getExtensionVersion() {\n        return this.extensionVersion;\n    }\n    /**\n     * Returns boolean indicating whether or not the request should attempt to use native broker\n     * @param logger\n     * @param config\n     * @param nativeExtensionProvider\n     * @param authenticationScheme\n     */\n    static isNativeAvailable(config, logger, nativeExtensionProvider, authenticationScheme) {\n        logger.trace(\"isNativeAvailable called\");\n        if (!config.system.allowNativeBroker) {\n            logger.trace(\"isNativeAvailable: allowNativeBroker is not enabled, returning false\");\n            // Developer disabled WAM\n            return false;\n        }\n        if (!nativeExtensionProvider) {\n            logger.trace(\"isNativeAvailable: WAM extension provider is not initialized, returning false\");\n            // Extension is not available\n            return false;\n        }\n        if (authenticationScheme) {\n            switch (authenticationScheme) {\n                case AuthenticationScheme.BEARER:\n                case AuthenticationScheme.POP:\n                    logger.trace(\"isNativeAvailable: authenticationScheme is supported, returning true\");\n                    return true;\n                default:\n                    logger.trace(\"isNativeAvailable: authenticationScheme is not supported, returning false\");\n                    return false;\n            }\n        }\n        return true;\n    }\n}\n\nexport { NativeMessageHandler };\n//# sourceMappingURL=NativeMessageHandler.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { PerformanceEvents, createClientAuthError, ClientAuthErrorCodes, ServerError, invokeAsync, AuthorityFactory } from '@azure/msal-common';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { TemporaryCacheKeys } from '../utils/BrowserConstants.mjs';\nimport { hashEmptyError, userCancelled } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Abstract class which defines operations for a browser interaction handling class.\n */\nclass InteractionHandler {\n    constructor(authCodeModule, storageImpl, authCodeRequest, logger, performanceClient) {\n        this.authModule = authCodeModule;\n        this.browserStorage = storageImpl;\n        this.authCodeRequest = authCodeRequest;\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n    }\n    /**\n     * Function to handle response parameters from hash.\n     * @param locationHash\n     */\n    async handleCodeResponseFromHash(locationHash, state, authority, networkModule) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.HandleCodeResponseFromHash, this.authCodeRequest.correlationId);\n        // Check that location hash isn't empty.\n        if (!locationHash) {\n            throw createBrowserAuthError(hashEmptyError);\n        }\n        // Handle code response.\n        const stateKey = this.browserStorage.generateStateKey(state);\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\n        if (!requestState) {\n            throw createClientAuthError(ClientAuthErrorCodes.stateNotFound, \"Cached State\");\n        }\n        let authCodeResponse;\n        try {\n            authCodeResponse = this.authModule.handleFragmentResponse(locationHash, requestState);\n        }\n        catch (e) {\n            if (e instanceof ServerError &&\n                e.subError === userCancelled) {\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\n                throw createBrowserAuthError(userCancelled);\n            }\n            else {\n                throw e;\n            }\n        }\n        return invokeAsync(this.handleCodeResponseFromServer.bind(this), PerformanceEvents.HandleCodeResponseFromServer, this.logger, this.performanceClient, this.authCodeRequest.correlationId)(authCodeResponse, state, authority, networkModule);\n    }\n    /**\n     * Process auth code response from AAD\n     * @param authCodeResponse\n     * @param state\n     * @param authority\n     * @param networkModule\n     * @returns\n     */\n    async handleCodeResponseFromServer(authCodeResponse, state, authority, networkModule, validateNonce = true) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.HandleCodeResponseFromServer, this.authCodeRequest.correlationId);\n        this.logger.trace(\"InteractionHandler.handleCodeResponseFromServer called\");\n        // Handle code response.\n        const stateKey = this.browserStorage.generateStateKey(state);\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\n        if (!requestState) {\n            throw createClientAuthError(ClientAuthErrorCodes.stateNotFound, \"Cached State\");\n        }\n        // Get cached items\n        const nonceKey = this.browserStorage.generateNonceKey(requestState);\n        const cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\n        // Assign code to request\n        this.authCodeRequest.code = authCodeResponse.code;\n        // Check for new cloud instance\n        if (authCodeResponse.cloud_instance_host_name) {\n            await invokeAsync(this.updateTokenEndpointAuthority.bind(this), PerformanceEvents.UpdateTokenEndpointAuthority, this.logger, this.performanceClient, this.authCodeRequest.correlationId)(authCodeResponse.cloud_instance_host_name, authority, networkModule);\n        }\n        // Nonce validation not needed when redirect not involved (e.g. hybrid spa, renewing token via rt)\n        if (validateNonce) {\n            authCodeResponse.nonce = cachedNonce || undefined;\n        }\n        authCodeResponse.state = requestState;\n        // Add CCS parameters if available\n        if (authCodeResponse.client_info) {\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\n        }\n        else {\n            const cachedCcsCred = this.checkCcsCredentials();\n            if (cachedCcsCred) {\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\n            }\n        }\n        // Acquire token with retrieved code.\n        const tokenResponse = (await invokeAsync(this.authModule.acquireToken.bind(this.authModule), PerformanceEvents.AuthClientAcquireToken, this.logger, this.performanceClient, this.authCodeRequest.correlationId)(this.authCodeRequest, authCodeResponse));\n        this.browserStorage.cleanRequestByState(state);\n        return tokenResponse;\n    }\n    /**\n     * Updates authority based on cloudInstanceHostname\n     * @param cloudInstanceHostname\n     * @param authority\n     * @param networkModule\n     */\n    async updateTokenEndpointAuthority(cloudInstanceHostname, authority, networkModule) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.UpdateTokenEndpointAuthority, this.authCodeRequest.correlationId);\n        const cloudInstanceAuthorityUri = `https://${cloudInstanceHostname}/${authority.tenant}/`;\n        const cloudInstanceAuthority = await AuthorityFactory.createDiscoveredInstance(cloudInstanceAuthorityUri, networkModule, this.browserStorage, authority.options, this.logger, this.performanceClient, this.authCodeRequest.correlationId);\n        this.authModule.updateAuthority(cloudInstanceAuthority);\n    }\n    /**\n     * Looks up ccs creds in the cache\n     */\n    checkCcsCredentials() {\n        // Look up ccs credential in temp cache\n        const cachedCcsCred = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.CCS_CREDENTIAL, true);\n        if (cachedCcsCred) {\n            try {\n                return JSON.parse(cachedCcsCred);\n            }\n            catch (e) {\n                this.authModule.logger.error(\"Cache credential could not be parsed\");\n                this.authModule.logger.errorPii(`Cache credential could not be parsed: ${cachedCcsCred}`);\n            }\n        }\n        return null;\n    }\n}\n\nexport { InteractionHandler };\n//# sourceMappingURL=InteractionHandler.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { OIDC_DEFAULT_SCOPES, PerformanceEvents, Constants, UrlString, ThrottlingUtils, ProtocolUtils, AuthError, ProtocolMode, ServerResponseType } from '@azure/msal-common';\nimport { StandardInteractionClient } from './StandardInteractionClient.mjs';\nimport { EventType } from '../event/EventType.mjs';\nimport { ApiId, InteractionType, BrowserConstants } from '../utils/BrowserConstants.mjs';\nimport { preconnect, getCurrentUri } from '../utils/BrowserUtils.mjs';\nimport { NativeInteractionClient } from './NativeInteractionClient.mjs';\nimport { NativeMessageHandler } from '../broker/nativeBroker/NativeMessageHandler.mjs';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { InteractionHandler } from '../interaction_handler/InteractionHandler.mjs';\nimport { nativeConnectionNotEstablished, emptyNavigateUri, userCancelled, hashDoesNotContainKnownProperties, monitorPopupTimeout, emptyWindowError, popupWindowError } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass PopupClient extends StandardInteractionClient {\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n        // Properly sets this reference for the unload event.\n        this.unloadWindow = this.unloadWindow.bind(this);\n        this.nativeStorage = nativeStorageImpl;\n    }\n    /**\n     * Acquires tokens by opening a popup window to the /authorize endpoint of the authority\n     * @param request\n     */\n    acquireToken(request) {\n        try {\n            const popupName = this.generatePopupName(request.scopes || OIDC_DEFAULT_SCOPES, request.authority || this.config.auth.authority);\n            const popupWindowAttributes = request.popupWindowAttributes || {};\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n            if (this.config.system.asyncPopups) {\n                this.logger.verbose(\"asyncPopups set to true, acquiring token\");\n                // Passes on popup position and dimensions if in request\n                return this.acquireTokenPopupAsync(request, popupName, popupWindowAttributes);\n            }\n            else {\n                // asyncPopups flag is set to false. Opens popup before acquiring token.\n                this.logger.verbose(\"asyncPopup set to false, opening popup before acquiring token\");\n                const popup = this.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes);\n                return this.acquireTokenPopupAsync(request, popupName, popupWindowAttributes, popup);\n            }\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logout(logoutRequest) {\n        try {\n            this.logger.verbose(\"logoutPopup called\");\n            const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n            const popupName = this.generateLogoutPopupName(validLogoutRequest);\n            const authority = logoutRequest && logoutRequest.authority;\n            const mainWindowRedirectUri = logoutRequest && logoutRequest.mainWindowRedirectUri;\n            const popupWindowAttributes = logoutRequest?.popupWindowAttributes || {};\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n            if (this.config.system.asyncPopups) {\n                this.logger.verbose(\"asyncPopups set to true\");\n                // Passes on popup position and dimensions if in request\n                return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, undefined, mainWindowRedirectUri);\n            }\n            else {\n                // asyncPopups flag is set to false. Opens popup before logging out.\n                this.logger.verbose(\"asyncPopup set to false, opening popup\");\n                const popup = this.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes);\n                return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, popup, mainWindowRedirectUri);\n            }\n        }\n        catch (e) {\n            // Since this function is synchronous we need to reject\n            return Promise.reject(e);\n        }\n    }\n    /**\n     * Helper which obtains an access_token for your API via opening a popup window in the user's browser\n     * @param validRequest\n     * @param popupName\n     * @param popup\n     * @param popupWindowAttributes\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async acquireTokenPopupAsync(request, popupName, popupWindowAttributes, popup) {\n        this.logger.verbose(\"acquireTokenPopupAsync called\");\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenPopup);\n        this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, request.correlationId);\n        const validRequest = await this.initializeAuthorizationRequest(request, InteractionType.Popup);\n        preconnect(validRequest.authority);\n        this.browserStorage.updateCacheEntries(validRequest.state, validRequest.nonce, validRequest.authority, validRequest.loginHint || Constants.EMPTY_STRING, validRequest.account || null);\n        try {\n            // Create auth code request and generate PKCE params\n            this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, request.correlationId);\n            const authCodeRequest = await this.initializeAuthorizationCodeRequest(validRequest);\n            // Initialize the client\n            this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, request.correlationId);\n            const authClient = await this.createAuthCodeClient(serverTelemetryManager, validRequest.authority, validRequest.azureCloudOptions);\n            this.logger.verbose(\"Auth code client created\");\n            const isNativeBroker = NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, request.authenticationScheme);\n            // Start measurement for server calls with native brokering enabled\n            let fetchNativeAccountIdMeasurement;\n            if (isNativeBroker) {\n                fetchNativeAccountIdMeasurement =\n                    this.performanceClient.startMeasurement(PerformanceEvents.FetchAccountIdWithNativeBroker, request.correlationId);\n            }\n            // Create acquire token url.\n            const navigateUrl = await authClient.getAuthCodeUrl({\n                ...validRequest,\n                nativeBroker: isNativeBroker,\n            });\n            // Create popup interaction handler.\n            const interactionHandler = new InteractionHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\n            // Show the UI once the url has been created. Get the window handle for the popup.\n            const popupParameters = {\n                popup,\n                popupName,\n                popupWindowAttributes,\n            };\n            const popupWindow = this.initiateAuthRequest(navigateUrl, popupParameters);\n            this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, { popupWindow }, null);\n            // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n            const hash = await this.monitorPopupForHash(popupWindow);\n            // Deserialize hash fragment response parameters.\n            const serverParams = UrlString.getDeserializedHash(hash);\n            const state = this.validateAndExtractStateFromHash(serverParams, InteractionType.Popup, validRequest.correlationId);\n            // Remove throttle if it exists\n            ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, authCodeRequest);\n            if (serverParams.accountId) {\n                this.logger.verbose(\"Account id found in hash, calling WAM for token\");\n                // end measurement for server call with native brokering enabled\n                if (fetchNativeAccountIdMeasurement) {\n                    fetchNativeAccountIdMeasurement.end({\n                        success: true,\n                        isNativeBroker: true,\n                    });\n                }\n                if (!this.nativeMessageHandler) {\n                    throw createBrowserAuthError(nativeConnectionNotEstablished);\n                }\n                const nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenPopup, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.nativeStorage, validRequest.correlationId);\n                const { userRequestState } = ProtocolUtils.parseRequestState(this.browserCrypto, state);\n                return nativeInteractionClient\n                    .acquireToken({\n                    ...validRequest,\n                    state: userRequestState,\n                    prompt: undefined, // Server should handle the prompt, ideally native broker can do this part silently\n                })\n                    .finally(() => {\n                    this.browserStorage.cleanRequestByState(state);\n                });\n            }\n            // Handle response from hash string.\n            const result = await interactionHandler.handleCodeResponseFromHash(hash, state, authClient.authority, this.networkClient);\n            return result;\n        }\n        catch (e) {\n            if (popup) {\n                // Close the synchronous popup if an error is thrown before the window unload event is registered\n                popup.close();\n            }\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.browserStorage.cleanRequestByState(validRequest.state);\n            throw e;\n        }\n    }\n    /**\n     *\n     * @param validRequest\n     * @param popupName\n     * @param requestAuthority\n     * @param popup\n     * @param mainWindowRedirectUri\n     * @param popupWindowAttributes\n     */\n    async logoutPopupAsync(validRequest, popupName, popupWindowAttributes, requestAuthority, popup, mainWindowRedirectUri) {\n        this.logger.verbose(\"logoutPopupAsync called\");\n        this.eventHandler.emitEvent(EventType.LOGOUT_START, InteractionType.Popup, validRequest);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.logoutPopup);\n        try {\n            // Clear cache on logout\n            await this.clearCacheOnLogout(validRequest.account);\n            // Initialize the client\n            this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, validRequest.correlationId);\n            const authClient = await this.createAuthCodeClient(serverTelemetryManager, requestAuthority);\n            this.logger.verbose(\"Auth code client created\");\n            try {\n                authClient.authority.endSessionEndpoint;\n            }\n            catch {\n                if (validRequest.account?.homeAccountId &&\n                    validRequest.postLogoutRedirectUri &&\n                    authClient.authority.protocolMode === ProtocolMode.OIDC) {\n                    void this.browserStorage.removeAccount(validRequest.account?.homeAccountId);\n                    this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Popup, validRequest);\n                    if (mainWindowRedirectUri) {\n                        const navigationOptions = {\n                            apiId: ApiId.logoutPopup,\n                            timeout: this.config.system.redirectNavigationTimeout,\n                            noHistory: false,\n                        };\n                        const absoluteUrl = UrlString.getAbsoluteUrl(mainWindowRedirectUri, getCurrentUri());\n                        await this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\n                    }\n                    if (popup) {\n                        popup.close();\n                    }\n                    return;\n                }\n            }\n            // Create logout string and navigate user window to logout.\n            const logoutUri = authClient.getLogoutUri(validRequest);\n            this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Popup, validRequest);\n            // Open the popup window to requestUrl.\n            const popupWindow = this.openPopup(logoutUri, {\n                popupName,\n                popupWindowAttributes,\n                popup,\n            });\n            this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, { popupWindow }, null);\n            await this.waitForLogoutPopup(popupWindow);\n            if (mainWindowRedirectUri) {\n                const navigationOptions = {\n                    apiId: ApiId.logoutPopup,\n                    timeout: this.config.system.redirectNavigationTimeout,\n                    noHistory: false,\n                };\n                const absoluteUrl = UrlString.getAbsoluteUrl(mainWindowRedirectUri, getCurrentUri());\n                this.logger.verbose(\"Redirecting main window to url specified in the request\");\n                this.logger.verbosePii(`Redirecting main window to: ${absoluteUrl}`);\n                await this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\n            }\n            else {\n                this.logger.verbose(\"No main window navigation requested\");\n            }\n        }\n        catch (e) {\n            if (popup) {\n                // Close the synchronous popup if an error is thrown before the window unload event is registered\n                popup.close();\n            }\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.browserStorage.setInteractionInProgress(false);\n            this.eventHandler.emitEvent(EventType.LOGOUT_FAILURE, InteractionType.Popup, null, e);\n            this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\n            throw e;\n        }\n        this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\n    }\n    /**\n     * Opens a popup window with given request Url.\n     * @param requestUrl\n     */\n    initiateAuthRequest(requestUrl, params) {\n        // Check that request url is not empty.\n        if (requestUrl) {\n            this.logger.infoPii(`Navigate to: ${requestUrl}`);\n            // Open the popup window to requestUrl.\n            return this.openPopup(requestUrl, params);\n        }\n        else {\n            // Throw error if request URL is empty.\n            this.logger.error(\"Navigate url is empty\");\n            throw createBrowserAuthError(emptyNavigateUri);\n        }\n    }\n    /**\n     * Monitors a window until it loads a url with the same origin.\n     * @param popupWindow - window that is being monitored\n     * @param timeout - timeout for processing hash once popup is redirected back to application\n     */\n    monitorPopupForHash(popupWindow) {\n        return new Promise((resolve, reject) => {\n            /*\n             * Polling for popups needs to be tick-based,\n             * since a non-trivial amount of time can be spent on interaction (which should not count against the timeout).\n             */\n            const maxTicks = this.config.system.windowHashTimeout /\n                this.config.system.pollIntervalMilliseconds;\n            let ticks = 0;\n            this.logger.verbose(\"PopupHandler.monitorPopupForHash - polling started\");\n            const intervalId = setInterval(() => {\n                // Window is closed\n                if (popupWindow.closed) {\n                    this.logger.error(\"PopupHandler.monitorPopupForHash - window closed\");\n                    this.cleanPopup();\n                    clearInterval(intervalId);\n                    reject(createBrowserAuthError(userCancelled));\n                    return;\n                }\n                let href = Constants.EMPTY_STRING;\n                let serverResponseString = Constants.EMPTY_STRING;\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = popupWindow.location.href;\n                    serverResponseString =\n                        this.extractServerResponseStringFromPopup(popupWindow, href);\n                }\n                catch (e) { }\n                // Don't process blank pages or cross domain\n                if (!href || href === \"about:blank\") {\n                    return;\n                }\n                this.logger.verbose(\"PopupHandler.monitorPopupForHash - popup window is on same origin as caller\");\n                /*\n                 * Only run clock when we are on same domain for popups\n                 * as popup operations can take a long time.\n                 */\n                ticks++;\n                if (serverResponseString) {\n                    this.logger.verbose(\"PopupHandler.monitorPopupForHash - found hash in url\");\n                    clearInterval(intervalId);\n                    this.cleanPopup(popupWindow);\n                    if (UrlString.hashContainsKnownProperties(serverResponseString)) {\n                        this.logger.verbose(\"PopupHandler.monitorPopupForHash - hash contains known properties, returning.\");\n                        resolve(serverResponseString);\n                    }\n                    else {\n                        this.logger.error(\"PopupHandler.monitorPopupForHash - found hash in url but it does not contain known properties. Check that your router is not changing the hash prematurely.\");\n                        this.logger.errorPii(`PopupHandler.monitorPopupForHash - hash found: ${serverResponseString}`);\n                        reject(createBrowserAuthError(hashDoesNotContainKnownProperties));\n                    }\n                }\n                else if (ticks > maxTicks) {\n                    this.logger.error(\"PopupHandler.monitorPopupForHash - unable to find hash in url, timing out\");\n                    clearInterval(intervalId);\n                    reject(createBrowserAuthError(monitorPopupTimeout));\n                }\n            }, this.config.system.pollIntervalMilliseconds);\n        });\n    }\n    /**\n     * Waits for user interaction in logout popup window\n     * @param popupWindow\n     * @returns\n     */\n    waitForLogoutPopup(popupWindow) {\n        return new Promise((resolve) => {\n            this.logger.verbose(\"PopupHandler.waitForLogoutPopup - polling started\");\n            const intervalId = setInterval(() => {\n                // Window is closed\n                if (popupWindow.closed) {\n                    this.logger.error(\"PopupHandler.waitForLogoutPopup - window closed\");\n                    this.cleanPopup();\n                    clearInterval(intervalId);\n                    resolve();\n                }\n                let href = Constants.EMPTY_STRING;\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = popupWindow.location.href;\n                }\n                catch (e) { }\n                // Don't process blank pages or cross domain\n                if (!href || href === \"about:blank\") {\n                    return;\n                }\n                this.logger.verbose(\"PopupHandler.waitForLogoutPopup - popup window is on same origin as caller, closing.\");\n                clearInterval(intervalId);\n                this.cleanPopup(popupWindow);\n                resolve();\n            }, this.config.system.pollIntervalMilliseconds);\n        });\n    }\n    /**\n     * @hidden\n     *\n     * Configures popup window for login.\n     *\n     * @param urlNavigate\n     * @param title\n     * @param popUpWidth\n     * @param popUpHeight\n     * @param popupWindowAttributes\n     * @ignore\n     * @hidden\n     */\n    openPopup(urlNavigate, popupParams) {\n        try {\n            let popupWindow;\n            // Popup window passed in, setting url to navigate to\n            if (popupParams.popup) {\n                popupWindow = popupParams.popup;\n                this.logger.verbosePii(`Navigating popup window to: ${urlNavigate}`);\n                popupWindow.location.assign(urlNavigate);\n            }\n            else if (typeof popupParams.popup === \"undefined\") {\n                // Popup will be undefined if it was not passed in\n                this.logger.verbosePii(`Opening popup window to: ${urlNavigate}`);\n                popupWindow = this.openSizedPopup(urlNavigate, popupParams.popupName, popupParams.popupWindowAttributes);\n            }\n            // Popup will be null if popups are blocked\n            if (!popupWindow) {\n                throw createBrowserAuthError(emptyWindowError);\n            }\n            if (popupWindow.focus) {\n                popupWindow.focus();\n            }\n            this.currentWindow = popupWindow;\n            window.addEventListener(\"beforeunload\", this.unloadWindow);\n            return popupWindow;\n        }\n        catch (e) {\n            this.logger.error(\"error opening popup \" + e.message);\n            this.browserStorage.setInteractionInProgress(false);\n            throw createBrowserAuthError(popupWindowError);\n        }\n    }\n    /**\n     * Helper function to set popup window dimensions and position\n     * @param urlNavigate\n     * @param popupName\n     * @param popupWindowAttributes\n     * @returns\n     */\n    openSizedPopup(urlNavigate, popupName, popupWindowAttributes) {\n        /**\n         * adding winLeft and winTop to account for dual monitor\n         * using screenLeft and screenTop for IE8 and earlier\n         */\n        const winLeft = window.screenLeft ? window.screenLeft : window.screenX;\n        const winTop = window.screenTop ? window.screenTop : window.screenY;\n        /**\n         * window.innerWidth displays browser window\"s height and width excluding toolbars\n         * using document.documentElement.clientWidth for IE8 and earlier\n         */\n        const winWidth = window.innerWidth ||\n            document.documentElement.clientWidth ||\n            document.body.clientWidth;\n        const winHeight = window.innerHeight ||\n            document.documentElement.clientHeight ||\n            document.body.clientHeight;\n        let width = popupWindowAttributes.popupSize?.width;\n        let height = popupWindowAttributes.popupSize?.height;\n        let top = popupWindowAttributes.popupPosition?.top;\n        let left = popupWindowAttributes.popupPosition?.left;\n        if (!width || width < 0 || width > winWidth) {\n            this.logger.verbose(\"Default popup window width used. Window width not configured or invalid.\");\n            width = BrowserConstants.POPUP_WIDTH;\n        }\n        if (!height || height < 0 || height > winHeight) {\n            this.logger.verbose(\"Default popup window height used. Window height not configured or invalid.\");\n            height = BrowserConstants.POPUP_HEIGHT;\n        }\n        if (!top || top < 0 || top > winHeight) {\n            this.logger.verbose(\"Default popup window top position used. Window top not configured or invalid.\");\n            top = Math.max(0, winHeight / 2 - BrowserConstants.POPUP_HEIGHT / 2 + winTop);\n        }\n        if (!left || left < 0 || left > winWidth) {\n            this.logger.verbose(\"Default popup window left position used. Window left not configured or invalid.\");\n            left = Math.max(0, winWidth / 2 - BrowserConstants.POPUP_WIDTH / 2 + winLeft);\n        }\n        return window.open(urlNavigate, popupName, `width=${width}, height=${height}, top=${top}, left=${left}, scrollbars=yes`);\n    }\n    /**\n     * Event callback to unload main window.\n     */\n    unloadWindow(e) {\n        this.browserStorage.cleanRequestByInteractionType(InteractionType.Popup);\n        if (this.currentWindow) {\n            this.currentWindow.close();\n        }\n        // Guarantees browser unload will happen, so no other errors will be thrown.\n        e.preventDefault();\n    }\n    /**\n     * Closes popup, removes any state vars created during popup calls.\n     * @param popupWindow\n     */\n    cleanPopup(popupWindow) {\n        if (popupWindow) {\n            // Close window.\n            popupWindow.close();\n        }\n        // Remove window unload function\n        window.removeEventListener(\"beforeunload\", this.unloadWindow);\n        // Interaction is completed - remove interaction status.\n        this.browserStorage.setInteractionInProgress(false);\n    }\n    /**\n     * Generates the name for the popup based on the client id and request\n     * @param clientId\n     * @param request\n     */\n    generatePopupName(scopes, authority) {\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${scopes.join(\"-\")}.${authority}.${this.correlationId}`;\n    }\n    /**\n     * Generates the name for the popup based on the client id and request for logouts\n     * @param clientId\n     * @param request\n     */\n    generateLogoutPopupName(request) {\n        const homeAccountId = request.account && request.account.homeAccountId;\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${homeAccountId}.${this.correlationId}`;\n    }\n    /**\n     * Extracts the server response from the popup window\n     */\n    extractServerResponseStringFromPopup(popupWindow, href) {\n        let serverResponseString;\n        if (this.config.auth.OIDCOptions?.serverResponseType ===\n            ServerResponseType.QUERY) {\n            serverResponseString = UrlString.parseQueryServerResponse(href);\n        }\n        else {\n            serverResponseString = popupWindow.location.hash;\n        }\n        return serverResponseString;\n    }\n}\n\nexport { PopupClient };\n//# sourceMappingURL=PopupClient.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { createClientAuthError, ClientAuthErrorCodes, ServerError } from '@azure/msal-common';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { TemporaryCacheKeys, ApiId } from '../utils/BrowserConstants.mjs';\nimport { InteractionHandler } from './InteractionHandler.mjs';\nimport { emptyNavigateUri, hashEmptyError, userCancelled } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass RedirectHandler extends InteractionHandler {\n    constructor(authCodeModule, storageImpl, authCodeRequest, logger, browserCrypto, performanceClient) {\n        super(authCodeModule, storageImpl, authCodeRequest, logger, performanceClient);\n        this.browserCrypto = browserCrypto;\n    }\n    /**\n     * Redirects window to given URL.\n     * @param urlNavigate\n     */\n    async initiateAuthRequest(requestUrl, params) {\n        this.logger.verbose(\"RedirectHandler.initiateAuthRequest called\");\n        // Navigate if valid URL\n        if (requestUrl) {\n            // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\n            if (params.redirectStartPage) {\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page\");\n                this.browserStorage.setTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, params.redirectStartPage, true);\n            }\n            // Set interaction status in the library.\n            this.browserStorage.setTemporaryCache(TemporaryCacheKeys.CORRELATION_ID, this.authCodeRequest.correlationId, true);\n            this.browserStorage.cacheCodeRequest(this.authCodeRequest);\n            this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${requestUrl}`);\n            const navigationOptions = {\n                apiId: ApiId.acquireTokenRedirect,\n                timeout: params.redirectTimeout,\n                noHistory: false,\n            };\n            // If onRedirectNavigate is implemented, invoke it and provide requestUrl\n            if (typeof params.onRedirectNavigate === \"function\") {\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback\");\n                const navigate = params.onRedirectNavigate(requestUrl);\n                // Returning false from onRedirectNavigate will stop navigation\n                if (navigate !== false) {\n                    this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating\");\n                    await params.navigationClient.navigateExternal(requestUrl, navigationOptions);\n                    return;\n                }\n                else {\n                    this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation\");\n                    return;\n                }\n            }\n            else {\n                // Navigate window to request URL\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Navigating window to navigate url\");\n                await params.navigationClient.navigateExternal(requestUrl, navigationOptions);\n                return;\n            }\n        }\n        else {\n            // Throw error if request URL is empty.\n            this.logger.info(\"RedirectHandler.initiateAuthRequest: Navigate url is empty\");\n            throw createBrowserAuthError(emptyNavigateUri);\n        }\n    }\n    /**\n     * Handle authorization code response in the window.\n     * @param hash\n     */\n    async handleCodeResponseFromHash(locationHash, state, authority, networkModule) {\n        this.logger.verbose(\"RedirectHandler.handleCodeResponse called\");\n        // Check that location hash isn't empty.\n        if (!locationHash) {\n            throw createBrowserAuthError(hashEmptyError);\n        }\n        // Interaction is completed - remove interaction status.\n        this.browserStorage.setInteractionInProgress(false);\n        // Handle code response.\n        const stateKey = this.browserStorage.generateStateKey(state);\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\n        if (!requestState) {\n            throw createClientAuthError(ClientAuthErrorCodes.stateNotFound, \"Cached State\");\n        }\n        let authCodeResponse;\n        try {\n            authCodeResponse = this.authModule.handleFragmentResponse(locationHash, requestState);\n        }\n        catch (e) {\n            if (e instanceof ServerError &&\n                e.subError === userCancelled) {\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\n                throw createBrowserAuthError(userCancelled);\n            }\n            else {\n                throw e;\n            }\n        }\n        // Get cached items\n        const nonceKey = this.browserStorage.generateNonceKey(requestState);\n        const cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\n        // Assign code to request\n        this.authCodeRequest.code = authCodeResponse.code;\n        // Check for new cloud instance\n        if (authCodeResponse.cloud_instance_host_name) {\n            await this.updateTokenEndpointAuthority(authCodeResponse.cloud_instance_host_name, authority, networkModule);\n        }\n        authCodeResponse.nonce = cachedNonce || undefined;\n        authCodeResponse.state = requestState;\n        // Add CCS parameters if available\n        if (authCodeResponse.client_info) {\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\n        }\n        else {\n            const cachedCcsCred = this.checkCcsCredentials();\n            if (cachedCcsCred) {\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\n            }\n        }\n        // Acquire token with retrieved code.\n        const tokenResponse = (await this.authModule.acquireToken(this.authCodeRequest, authCodeResponse));\n        this.browserStorage.cleanRequestByState(state);\n        return tokenResponse;\n    }\n}\n\nexport { RedirectHandler };\n//# sourceMappingURL=RedirectHandler.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { PerformanceEvents, Constants, AuthError, UrlString, ProtocolUtils, ThrottlingUtils, ProtocolMode } from '@azure/msal-common';\nimport { StandardInteractionClient } from './StandardInteractionClient.mjs';\nimport { InteractionType, ApiId, TemporaryCacheKeys } from '../utils/BrowserConstants.mjs';\nimport { RedirectHandler } from '../interaction_handler/RedirectHandler.mjs';\nimport { replaceHash, isInIframe, getHomepage, clearHash, getCurrentUri } from '../utils/BrowserUtils.mjs';\nimport { EventType } from '../event/EventType.mjs';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { NativeInteractionClient } from './NativeInteractionClient.mjs';\nimport { NativeMessageHandler } from '../broker/nativeBroker/NativeMessageHandler.mjs';\nimport { nativeConnectionNotEstablished, noCachedAuthorityError } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass RedirectClient extends StandardInteractionClient {\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n        this.nativeStorage = nativeStorageImpl;\n    }\n    /**\n     * Redirects the page to the /authorize endpoint of the IDP\n     * @param request\n     */\n    async acquireToken(request) {\n        this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, request.correlationId);\n        const validRequest = await this.initializeAuthorizationRequest(request, InteractionType.Redirect);\n        this.browserStorage.updateCacheEntries(validRequest.state, validRequest.nonce, validRequest.authority, validRequest.loginHint || Constants.EMPTY_STRING, validRequest.account || null);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenRedirect);\n        const handleBackButton = (event) => {\n            // Clear temporary cache if the back button is clicked during the redirect flow.\n            if (event.persisted) {\n                this.logger.verbose(\"Page was restored from back/forward cache. Clearing temporary cache.\");\n                this.browserStorage.cleanRequestByState(validRequest.state);\n                this.eventHandler.emitEvent(EventType.RESTORE_FROM_BFCACHE, InteractionType.Redirect);\n            }\n        };\n        try {\n            // Create auth code request and generate PKCE params\n            this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, request.correlationId);\n            const authCodeRequest = await this.initializeAuthorizationCodeRequest(validRequest);\n            // Initialize the client\n            this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, request.correlationId);\n            const authClient = await this.createAuthCodeClient(serverTelemetryManager, validRequest.authority, validRequest.azureCloudOptions);\n            this.logger.verbose(\"Auth code client created\");\n            // Create redirect interaction handler.\n            const interactionHandler = new RedirectHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.browserCrypto, this.performanceClient);\n            // Create acquire token url.\n            const navigateUrl = await authClient.getAuthCodeUrl({\n                ...validRequest,\n                nativeBroker: NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, request.authenticationScheme),\n            });\n            const redirectStartPage = this.getRedirectStartPage(request.redirectStartPage);\n            this.logger.verbosePii(`Redirect start page: ${redirectStartPage}`);\n            // Clear temporary cache if the back button is clicked during the redirect flow.\n            window.addEventListener(\"pageshow\", handleBackButton);\n            // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\n            return await interactionHandler.initiateAuthRequest(navigateUrl, {\n                navigationClient: this.navigationClient,\n                redirectTimeout: this.config.system.redirectNavigationTimeout,\n                redirectStartPage: redirectStartPage,\n                onRedirectNavigate: request.onRedirectNavigate,\n            });\n        }\n        catch (e) {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            window.removeEventListener(\"pageshow\", handleBackButton);\n            this.browserStorage.cleanRequestByState(validRequest.state);\n            throw e;\n        }\n    }\n    /**\n     * Checks if navigateToLoginRequestUrl is set, and:\n     * - if true, performs logic to cache and navigate\n     * - if false, handles hash string and parses response\n     * @param hash\n     */\n    async handleRedirectPromise(hash) {\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.handleRedirectPromise);\n        try {\n            if (!this.browserStorage.isInteractionInProgress(true)) {\n                this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\n                return null;\n            }\n            const responseHash = this.getRedirectResponseHash(hash || window.location.hash);\n            if (!responseHash) {\n                // Not a recognized server response hash or hash not associated with a redirect request\n                this.logger.info(\"handleRedirectPromise did not detect a response hash as a result of a redirect. Cleaning temporary cache.\");\n                this.browserStorage.cleanRequestByInteractionType(InteractionType.Redirect);\n                return null;\n            }\n            let state;\n            try {\n                // Deserialize hash fragment response parameters.\n                const serverParams = UrlString.getDeserializedHash(responseHash);\n                state = this.validateAndExtractStateFromHash(serverParams, InteractionType.Redirect);\n                this.logger.verbose(\"State extracted from hash\");\n            }\n            catch (e) {\n                this.logger.info(`handleRedirectPromise was unable to extract state due to: ${e}`);\n                this.browserStorage.cleanRequestByInteractionType(InteractionType.Redirect);\n                return null;\n            }\n            // If navigateToLoginRequestUrl is true, get the url where the redirect request was initiated\n            const loginRequestUrl = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, true) || Constants.EMPTY_STRING;\n            const loginRequestUrlNormalized = UrlString.removeHashFromUrl(loginRequestUrl);\n            const currentUrlNormalized = UrlString.removeHashFromUrl(window.location.href);\n            if (loginRequestUrlNormalized === currentUrlNormalized &&\n                this.config.auth.navigateToLoginRequestUrl) {\n                // We are on the page we need to navigate to - handle hash\n                this.logger.verbose(\"Current page is loginRequestUrl, handling hash\");\n                const handleHashResult = await this.handleHash(responseHash, state, serverTelemetryManager);\n                if (loginRequestUrl.indexOf(\"#\") > -1) {\n                    // Replace current hash with non-msal hash, if present\n                    replaceHash(loginRequestUrl);\n                }\n                return handleHashResult;\n            }\n            else if (!this.config.auth.navigateToLoginRequestUrl) {\n                this.logger.verbose(\"NavigateToLoginRequestUrl set to false, handling hash\");\n                return this.handleHash(responseHash, state, serverTelemetryManager);\n            }\n            else if (!isInIframe() ||\n                this.config.system.allowRedirectInIframe) {\n                /*\n                 * Returned from authority using redirect - need to perform navigation before processing response\n                 * Cache the hash to be retrieved after the next redirect\n                 */\n                this.browserStorage.setTemporaryCache(TemporaryCacheKeys.URL_HASH, responseHash, true);\n                const navigationOptions = {\n                    apiId: ApiId.handleRedirectPromise,\n                    timeout: this.config.system.redirectNavigationTimeout,\n                    noHistory: true,\n                };\n                /**\n                 * Default behavior is to redirect to the start page and not process the hash now.\n                 * The start page is expected to also call handleRedirectPromise which will process the hash in one of the checks above.\n                 */\n                let processHashOnRedirect = true;\n                if (!loginRequestUrl || loginRequestUrl === \"null\") {\n                    // Redirect to home page if login request url is null (real null or the string null)\n                    const homepage = getHomepage();\n                    // Cache the homepage under ORIGIN_URI to ensure cached hash is processed on homepage\n                    this.browserStorage.setTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, homepage, true);\n                    this.logger.warning(\"Unable to get valid login request url from cache, redirecting to home page\");\n                    processHashOnRedirect =\n                        await this.navigationClient.navigateInternal(homepage, navigationOptions);\n                }\n                else {\n                    // Navigate to page that initiated the redirect request\n                    this.logger.verbose(`Navigating to loginRequestUrl: ${loginRequestUrl}`);\n                    processHashOnRedirect =\n                        await this.navigationClient.navigateInternal(loginRequestUrl, navigationOptions);\n                }\n                // If navigateInternal implementation returns false, handle the hash now\n                if (!processHashOnRedirect) {\n                    return this.handleHash(responseHash, state, serverTelemetryManager);\n                }\n            }\n            return null;\n        }\n        catch (e) {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.browserStorage.cleanRequestByInteractionType(InteractionType.Redirect);\n            throw e;\n        }\n    }\n    /**\n     * Gets the response hash for a redirect request\n     * Returns null if interactionType in the state value is not \"redirect\" or the hash does not contain known properties\n     * @param hash\n     */\n    getRedirectResponseHash(hash) {\n        this.logger.verbose(\"getRedirectResponseHash called\");\n        // Get current location hash from window or cache.\n        const isResponseHash = UrlString.hashContainsKnownProperties(hash);\n        if (isResponseHash) {\n            clearHash(window);\n            this.logger.verbose(\"Hash contains known properties, returning response hash\");\n            return hash;\n        }\n        const cachedHash = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.URL_HASH, true);\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH));\n        this.logger.verbose(\"Hash does not contain known properties, returning cached hash\");\n        return cachedHash;\n    }\n    /**\n     * Checks if hash exists and handles in window.\n     * @param hash\n     * @param state\n     */\n    async handleHash(hash, state, serverTelemetryManager) {\n        const cachedRequest = this.browserStorage.getCachedRequest(state);\n        this.logger.verbose(\"handleHash called, retrieved cached request\");\n        const serverParams = UrlString.getDeserializedHash(hash);\n        if (serverParams.accountId) {\n            this.logger.verbose(\"Account id found in hash, calling WAM for token\");\n            if (!this.nativeMessageHandler) {\n                throw createBrowserAuthError(nativeConnectionNotEstablished);\n            }\n            const nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenPopup, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.nativeStorage, cachedRequest.correlationId);\n            const { userRequestState } = ProtocolUtils.parseRequestState(this.browserCrypto, state);\n            return nativeInteractionClient\n                .acquireToken({\n                ...cachedRequest,\n                state: userRequestState,\n                prompt: undefined, // Server should handle the prompt, ideally native broker can do this part silently\n            })\n                .finally(() => {\n                this.browserStorage.cleanRequestByState(state);\n            });\n        }\n        // Hash contains known properties - handle and return in callback\n        const currentAuthority = this.browserStorage.getCachedAuthority(state);\n        if (!currentAuthority) {\n            throw createBrowserAuthError(noCachedAuthorityError);\n        }\n        this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, cachedRequest.correlationId);\n        const authClient = await this.createAuthCodeClient(serverTelemetryManager, currentAuthority);\n        this.logger.verbose(\"Auth code client created\");\n        ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, cachedRequest);\n        const interactionHandler = new RedirectHandler(authClient, this.browserStorage, cachedRequest, this.logger, this.browserCrypto, this.performanceClient);\n        return await interactionHandler.handleCodeResponseFromHash(hash, state, authClient.authority, this.networkClient);\n    }\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    async logout(logoutRequest) {\n        this.logger.verbose(\"logoutRedirect called\");\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.logout);\n        try {\n            this.eventHandler.emitEvent(EventType.LOGOUT_START, InteractionType.Redirect, logoutRequest);\n            // Clear cache on logout\n            await this.clearCacheOnLogout(validLogoutRequest.account);\n            const navigationOptions = {\n                apiId: ApiId.logout,\n                timeout: this.config.system.redirectNavigationTimeout,\n                noHistory: false,\n            };\n            this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, validLogoutRequest.correlationId);\n            const authClient = await this.createAuthCodeClient(serverTelemetryManager, logoutRequest && logoutRequest.authority);\n            this.logger.verbose(\"Auth code client created\");\n            if (authClient.authority.protocolMode === ProtocolMode.OIDC) {\n                try {\n                    authClient.authority.endSessionEndpoint;\n                }\n                catch {\n                    if (validLogoutRequest.account?.homeAccountId) {\n                        void this.browserStorage.removeAccount(validLogoutRequest.account?.homeAccountId);\n                        this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Redirect, validLogoutRequest);\n                        return;\n                    }\n                }\n            }\n            // Create logout string and navigate user window to logout.\n            const logoutUri = authClient.getLogoutUri(validLogoutRequest);\n            this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Redirect, validLogoutRequest);\n            // Check if onRedirectNavigate is implemented, and invoke it if so\n            if (logoutRequest &&\n                typeof logoutRequest.onRedirectNavigate === \"function\") {\n                const navigate = logoutRequest.onRedirectNavigate(logoutUri);\n                if (navigate !== false) {\n                    this.logger.verbose(\"Logout onRedirectNavigate did not return false, navigating\");\n                    // Ensure interaction is in progress\n                    if (!this.browserStorage.getInteractionInProgress()) {\n                        this.browserStorage.setInteractionInProgress(true);\n                    }\n                    await this.navigationClient.navigateExternal(logoutUri, navigationOptions);\n                    return;\n                }\n                else {\n                    // Ensure interaction is not in progress\n                    this.browserStorage.setInteractionInProgress(false);\n                    this.logger.verbose(\"Logout onRedirectNavigate returned false, stopping navigation\");\n                }\n            }\n            else {\n                // Ensure interaction is in progress\n                if (!this.browserStorage.getInteractionInProgress()) {\n                    this.browserStorage.setInteractionInProgress(true);\n                }\n                await this.navigationClient.navigateExternal(logoutUri, navigationOptions);\n                return;\n            }\n        }\n        catch (e) {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.eventHandler.emitEvent(EventType.LOGOUT_FAILURE, InteractionType.Redirect, null, e);\n            this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Redirect);\n            throw e;\n        }\n        this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Redirect);\n    }\n    /**\n     * Use to get the redirectStartPage either from request or use current window\n     * @param requestStartPage\n     */\n    getRedirectStartPage(requestStartPage) {\n        const redirectStartPage = requestStartPage || window.location.href;\n        return UrlString.getAbsoluteUrl(redirectStartPage, getCurrentUri());\n    }\n}\n\nexport { RedirectClient };\n//# sourceMappingURL=RedirectClient.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { PerformanceEvents, invokeAsync, invoke } from '@azure/msal-common';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { DEFAULT_IFRAME_TIMEOUT_MS } from '../config/Configuration.mjs';\nimport { emptyNavigateUri, monitorWindowTimeout } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Creates a hidden iframe to given URL using user-requested scopes as an id.\n * @param urlNavigate\n * @param userRequestScopes\n */\nasync function initiateAuthRequest(requestUrl, performanceClient, logger, correlationId, navigateFrameWait) {\n    performanceClient.addQueueMeasurement(PerformanceEvents.SilentHandlerInitiateAuthRequest, correlationId);\n    if (!requestUrl) {\n        // Throw error if request URL is empty.\n        logger.info(\"Navigate url is empty\");\n        throw createBrowserAuthError(emptyNavigateUri);\n    }\n    if (navigateFrameWait) {\n        return await invokeAsync(loadFrame, PerformanceEvents.SilentHandlerLoadFrame, logger, performanceClient, correlationId)(requestUrl, navigateFrameWait, performanceClient, correlationId);\n    }\n    return invoke(loadFrameSync, PerformanceEvents.SilentHandlerLoadFrameSync, logger, performanceClient, correlationId)(requestUrl);\n}\n/**\n * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\n * @param iframe\n * @param timeout\n */\nasync function monitorIframeForHash(iframe, timeout, pollIntervalMilliseconds, performanceClient, logger, correlationId) {\n    performanceClient.addQueueMeasurement(PerformanceEvents.SilentHandlerMonitorIframeForHash, correlationId);\n    return new Promise((resolve, reject) => {\n        if (timeout < DEFAULT_IFRAME_TIMEOUT_MS) {\n            logger.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${timeout}ms) than the default (${DEFAULT_IFRAME_TIMEOUT_MS}ms). This may result in timeouts.`);\n        }\n        /*\n         * Polling for iframes can be purely timing based,\n         * since we don't need to account for interaction.\n         */\n        const timeoutId = window.setTimeout(() => {\n            window.clearInterval(intervalId);\n            reject(createBrowserAuthError(monitorWindowTimeout));\n        }, timeout);\n        const intervalId = window.setInterval(() => {\n            let href = \"\";\n            const contentWindow = iframe.contentWindow;\n            try {\n                /*\n                 * Will throw if cross origin,\n                 * which should be caught and ignored\n                 * since we need the interval to keep running while on STS UI.\n                 */\n                href = contentWindow ? contentWindow.location.href : \"\";\n            }\n            catch (e) { }\n            if (!href || href === \"about:blank\") {\n                return;\n            }\n            const contentHash = contentWindow\n                ? contentWindow.location.hash\n                : \"\";\n            window.clearTimeout(timeoutId);\n            window.clearInterval(intervalId);\n            resolve(contentHash);\n        }, pollIntervalMilliseconds);\n    }).finally(() => {\n        invoke(removeHiddenIframe, PerformanceEvents.RemoveHiddenIframe, logger, performanceClient, correlationId)(iframe);\n    });\n}\n/**\n * @hidden\n * Loads iframe with authorization endpoint URL\n * @ignore\n * @deprecated\n */\nfunction loadFrame(urlNavigate, navigateFrameWait, performanceClient, correlationId) {\n    performanceClient.addQueueMeasurement(PerformanceEvents.SilentHandlerLoadFrame, correlationId);\n    /*\n     * This trick overcomes iframe navigation in IE\n     * IE does not load the page consistently in iframe\n     */\n    return new Promise((resolve, reject) => {\n        const frameHandle = createHiddenIframe();\n        window.setTimeout(() => {\n            if (!frameHandle) {\n                reject(\"Unable to load iframe\");\n                return;\n            }\n            frameHandle.src = urlNavigate;\n            resolve(frameHandle);\n        }, navigateFrameWait);\n    });\n}\n/**\n * @hidden\n * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\n * @param urlNavigate\n * @param frameName\n * @param logger\n */\nfunction loadFrameSync(urlNavigate) {\n    const frameHandle = createHiddenIframe();\n    frameHandle.src = urlNavigate;\n    return frameHandle;\n}\n/**\n * @hidden\n * Creates a new hidden iframe or gets an existing one for silent token renewal.\n * @ignore\n */\nfunction createHiddenIframe() {\n    const authFrame = document.createElement(\"iframe\");\n    authFrame.style.visibility = \"hidden\";\n    authFrame.style.position = \"absolute\";\n    authFrame.style.width = authFrame.style.height = \"0\";\n    authFrame.style.border = \"0\";\n    authFrame.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\n    document.getElementsByTagName(\"body\")[0].appendChild(authFrame);\n    return authFrame;\n}\n/**\n * @hidden\n * Removes a hidden iframe from the page.\n * @ignore\n */\nfunction removeHiddenIframe(iframe) {\n    if (document.body === iframe.parentNode) {\n        document.body.removeChild(iframe);\n    }\n}\n\nexport { initiateAuthRequest, monitorIframeForHash };\n//# sourceMappingURL=SilentHandler.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { PerformanceEvents, PromptValue, invokeAsync, Constants, AuthError, UrlString, ProtocolUtils } from '@azure/msal-common';\nimport { StandardInteractionClient } from './StandardInteractionClient.mjs';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { InteractionType } from '../utils/BrowserConstants.mjs';\nimport { initiateAuthRequest, monitorIframeForHash } from '../interaction_handler/SilentHandler.mjs';\nimport { NativeMessageHandler } from '../broker/nativeBroker/NativeMessageHandler.mjs';\nimport { NativeInteractionClient } from './NativeInteractionClient.mjs';\nimport { InteractionHandler } from '../interaction_handler/InteractionHandler.mjs';\nimport { preconnect } from '../utils/BrowserUtils.mjs';\nimport { silentPromptValueError, silentLogoutUnsupported, hashEmptyError, hashDoesNotContainKnownProperties, nativeConnectionNotEstablished } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SilentIframeClient extends StandardInteractionClient {\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n        this.apiId = apiId;\n        this.nativeStorage = nativeStorageImpl;\n    }\n    /**\n     * Acquires a token silently by opening a hidden iframe to the /authorize endpoint with prompt=none or prompt=no_session\n     * @param request\n     */\n    async acquireToken(request) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentIframeClientAcquireToken, request.correlationId);\n        // Check that we have some SSO data\n        if (!request.loginHint &&\n            !request.sid &&\n            (!request.account || !request.account.username)) {\n            this.logger.warning(\"No user hint provided. The authorization server may need more information to complete this request.\");\n        }\n        // Check that prompt is set to none or no_session, throw error if it is set to anything else.\n        if (request.prompt &&\n            request.prompt !== PromptValue.NONE &&\n            request.prompt !== PromptValue.NO_SESSION) {\n            throw createBrowserAuthError(silentPromptValueError);\n        }\n        // Create silent request\n        const silentRequest = await invokeAsync(this.initializeAuthorizationRequest.bind(this), PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.logger, this.performanceClient, request.correlationId)({\n            ...request,\n            prompt: request.prompt || PromptValue.NONE,\n        }, InteractionType.Silent);\n        preconnect(silentRequest.authority);\n        this.browserStorage.updateCacheEntries(silentRequest.state, silentRequest.nonce, silentRequest.authority, silentRequest.loginHint || Constants.EMPTY_STRING, silentRequest.account || null);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\n        try {\n            // Initialize the client\n            const authClient = await invokeAsync(this.createAuthCodeClient.bind(this), PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, request.correlationId)(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions);\n            return await invokeAsync(this.silentTokenHelper.bind(this), PerformanceEvents.SilentIframeClientTokenHelper, this.logger, this.performanceClient, request.correlationId)(authClient, silentRequest);\n        }\n        catch (e) {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.browserStorage.cleanRequestByState(silentRequest.state);\n            throw e;\n        }\n    }\n    /**\n     * Currently Unsupported\n     */\n    logout() {\n        // Synchronous so we must reject\n        return Promise.reject(createBrowserAuthError(silentLogoutUnsupported));\n    }\n    /**\n     * Helper which acquires an authorization code silently using a hidden iframe from given url\n     * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\n     * @param navigateUrl\n     * @param userRequestScopes\n     */\n    async silentTokenHelper(authClient, silentRequest) {\n        const correlationId = silentRequest.correlationId;\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentIframeClientTokenHelper, correlationId);\n        // Create auth code request and generate PKCE params\n        const authCodeRequest = await invokeAsync(this.initializeAuthorizationCodeRequest.bind(this), PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, this.logger, this.performanceClient, correlationId)(silentRequest);\n        // Create authorize request url\n        const navigateUrl = await invokeAsync(authClient.getAuthCodeUrl.bind(authClient), PerformanceEvents.GetAuthCodeUrl, this.logger, this.performanceClient, correlationId)({\n            ...silentRequest,\n            nativeBroker: NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, silentRequest.authenticationScheme),\n        });\n        // Create silent handler\n        const interactionHandler = new InteractionHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\n        // Get the frame handle for the silent request\n        const msalFrame = await invokeAsync(initiateAuthRequest, PerformanceEvents.SilentHandlerInitiateAuthRequest, this.logger, this.performanceClient, correlationId)(navigateUrl, this.performanceClient, this.logger, correlationId, this.config.system.navigateFrameWait);\n        // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n        const hash = await invokeAsync(monitorIframeForHash, PerformanceEvents.SilentHandlerMonitorIframeForHash, this.logger, this.performanceClient, correlationId)(msalFrame, this.config.system.iframeHashTimeout, this.config.system.pollIntervalMilliseconds, this.performanceClient, this.logger, correlationId);\n        if (!hash) {\n            // No hash is present\n            this.logger.error(\"The request has returned to the redirectUri but a hash is not present in the iframe. It's likely that the hash has been removed or the page has been redirected by code running on the redirectUri page.\");\n            throw createBrowserAuthError(hashEmptyError);\n        }\n        else if (!UrlString.hashContainsKnownProperties(hash)) {\n            this.logger.error(\"A hash is present in the iframe but it does not contain known properties. It's likely that the hash has been replaced by code running on the redirectUri page.\");\n            this.logger.errorPii(`The hash detected in the iframe is: ${hash}`);\n            throw createBrowserAuthError(hashDoesNotContainKnownProperties);\n        }\n        // Deserialize hash fragment response parameters.\n        const serverParams = UrlString.getDeserializedHash(hash);\n        const state = this.validateAndExtractStateFromHash(serverParams, InteractionType.Silent, correlationId);\n        if (serverParams.accountId) {\n            this.logger.verbose(\"Account id found in hash, calling WAM for token\");\n            if (!this.nativeMessageHandler) {\n                throw createBrowserAuthError(nativeConnectionNotEstablished);\n            }\n            const nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.apiId, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.browserStorage, correlationId);\n            const { userRequestState } = ProtocolUtils.parseRequestState(this.browserCrypto, state);\n            return invokeAsync(nativeInteractionClient.acquireToken.bind(nativeInteractionClient), PerformanceEvents.NativeInteractionClientAcquireToken, this.logger, this.performanceClient, correlationId)({\n                ...silentRequest,\n                state: userRequestState,\n                prompt: silentRequest.prompt || PromptValue.NONE,\n            }).finally(() => {\n                this.browserStorage.cleanRequestByState(state);\n            });\n        }\n        // Handle response from hash string\n        return invokeAsync(interactionHandler.handleCodeResponseFromHash.bind(interactionHandler), PerformanceEvents.HandleCodeResponseFromHash, this.logger, this.performanceClient, correlationId)(hash, state, authClient.authority, this.networkClient);\n    }\n}\n\nexport { SilentIframeClient };\n//# sourceMappingURL=SilentIframeClient.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { StandardInteractionClient } from './StandardInteractionClient.mjs';\nimport { PerformanceEvents, invokeAsync, RefreshTokenClient } from '@azure/msal-common';\nimport { ApiId } from '../utils/BrowserConstants.mjs';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { silentLogoutUnsupported } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SilentRefreshClient extends StandardInteractionClient {\n    /**\n     * Exchanges the refresh token for new tokens\n     * @param request\n     */\n    async acquireToken(request) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentRefreshClientAcquireToken, request.correlationId);\n        const baseRequest = await invokeAsync(this.initializeBaseRequest.bind(this), PerformanceEvents.InitializeBaseRequest, this.logger, this.performanceClient, request.correlationId)(request, request.account);\n        const silentRequest = {\n            ...request,\n            ...baseRequest,\n        };\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_silentFlow);\n        const refreshTokenClient = await this.createRefreshTokenClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions);\n        this.logger.verbose(\"Refresh token client created\");\n        // Send request to renew token. Auth module will throw errors if token cannot be renewed.\n        return invokeAsync(refreshTokenClient.acquireTokenByRefreshToken.bind(refreshTokenClient), PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken, this.logger, this.performanceClient, request.correlationId)(silentRequest)\n            .then((result) => result)\n            .then((result) => {\n            this.performanceClient.addFields({\n                fromCache: result.fromCache,\n                requestId: result.requestId,\n            }, request.correlationId);\n            return result;\n        })\n            .catch((e) => {\n            e.setCorrelationId(this.correlationId);\n            serverTelemetryManager.cacheFailedRequest(e);\n            throw e;\n        });\n    }\n    /**\n     * Currently Unsupported\n     */\n    logout() {\n        // Synchronous so we must reject\n        return Promise.reject(createBrowserAuthError(silentLogoutUnsupported));\n    }\n    /**\n     * Creates a Refresh Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    async createRefreshTokenClient(serverTelemetryManager, authorityUrl, azureCloudOptions) {\n        // Create auth module.\n        const clientConfig = await invokeAsync(this.getClientConfiguration.bind(this), PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.logger, this.performanceClient, this.correlationId)(serverTelemetryManager, authorityUrl, azureCloudOptions);\n        return new RefreshTokenClient(clientConfig, this.performanceClient);\n    }\n}\n\nexport { SilentRefreshClient };\n//# sourceMappingURL=SilentRefreshClient.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { AuthToken, AccountEntity, CacheRecord, Authority, IdTokenEntity, ScopeSet, AccessTokenEntity, RefreshTokenEntity, Constants } from '@azure/msal-common';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { base64Decode } from '../encode/Base64Decode.mjs';\nimport { unableToLoadToken } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Token cache manager\n */\nclass TokenCache {\n    constructor(configuration, storage, logger, cryptoObj) {\n        this.isBrowserEnvironment = typeof window !== \"undefined\";\n        this.config = configuration;\n        this.storage = storage;\n        this.logger = logger;\n        this.cryptoObj = cryptoObj;\n    }\n    // Move getAllAccounts here and cache utility APIs\n    /**\n     * API to load tokens to msal-browser cache.\n     * @param request\n     * @param response\n     * @param options\n     * @returns `AuthenticationResult` for the response that was loaded.\n     */\n    loadExternalTokens(request, response, options) {\n        this.logger.info(\"TokenCache - loadExternalTokens called\");\n        if (!response.id_token) {\n            throw createBrowserAuthError(unableToLoadToken);\n        }\n        const idTokenClaims = AuthToken.extractTokenClaims(response.id_token, base64Decode);\n        let cacheRecord;\n        let authority;\n        let cacheRecordAccount;\n        if (request.account) {\n            cacheRecordAccount = AccountEntity.createFromAccountInfo(request.account);\n            cacheRecord = new CacheRecord(cacheRecordAccount, this.loadIdToken(response.id_token, cacheRecordAccount.homeAccountId, request.account.environment, request.account.tenantId), this.loadAccessToken(request, response, cacheRecordAccount.homeAccountId, request.account.environment, request.account.tenantId, options), this.loadRefreshToken(request, response, cacheRecordAccount.homeAccountId, request.account.environment));\n        }\n        else if (request.authority) {\n            const authorityUrl = Authority.generateAuthority(request.authority, request.azureCloudOptions);\n            const authorityOptions = {\n                protocolMode: this.config.auth.protocolMode,\n                knownAuthorities: this.config.auth.knownAuthorities,\n                cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n                authorityMetadata: this.config.auth.authorityMetadata,\n                skipAuthorityMetadataCache: this.config.auth.skipAuthorityMetadataCache,\n            };\n            authority = new Authority(authorityUrl, this.config.system.networkClient, this.storage, authorityOptions, this.logger);\n            // \"clientInfo\" from options takes precedence over \"clientInfo\" in response\n            if (options.clientInfo) {\n                this.logger.trace(\"TokenCache - homeAccountId from options\");\n                cacheRecordAccount = this.loadAccount(idTokenClaims, authority, options.clientInfo);\n                cacheRecord = new CacheRecord(cacheRecordAccount, this.loadIdToken(response.id_token, cacheRecordAccount.homeAccountId, authority.hostnameAndPort, authority.tenant), this.loadAccessToken(request, response, cacheRecordAccount.homeAccountId, authority.hostnameAndPort, authority.tenant, options), this.loadRefreshToken(request, response, cacheRecordAccount.homeAccountId, authority.hostnameAndPort));\n            }\n            else if (response.client_info) {\n                this.logger.trace(\"TokenCache - homeAccountId from response\");\n                cacheRecordAccount = this.loadAccount(idTokenClaims, authority, response.client_info);\n                cacheRecord = new CacheRecord(cacheRecordAccount, this.loadIdToken(response.id_token, cacheRecordAccount.homeAccountId, authority.hostnameAndPort, authority.tenant), this.loadAccessToken(request, response, cacheRecordAccount.homeAccountId, authority.hostnameAndPort, authority.tenant, options), this.loadRefreshToken(request, response, cacheRecordAccount.homeAccountId, authority.hostnameAndPort));\n            }\n            else {\n                throw createBrowserAuthError(unableToLoadToken);\n            }\n        }\n        else {\n            throw createBrowserAuthError(unableToLoadToken);\n        }\n        return this.generateAuthenticationResult(request, idTokenClaims, cacheRecord, cacheRecordAccount, authority);\n    }\n    /**\n     * Helper function to load account to msal-browser cache\n     * @param idToken\n     * @param environment\n     * @param clientInfo\n     * @param authorityType\n     * @param requestHomeAccountId\n     * @returns `AccountEntity`\n     */\n    loadAccount(idTokenClaims, authority, clientInfo, requestHomeAccountId) {\n        let homeAccountId;\n        if (requestHomeAccountId) {\n            homeAccountId = requestHomeAccountId;\n        }\n        else if (authority.authorityType !== undefined && clientInfo) {\n            homeAccountId = AccountEntity.generateHomeAccountId(clientInfo, authority.authorityType, this.logger, this.cryptoObj, idTokenClaims);\n        }\n        if (!homeAccountId) {\n            throw createBrowserAuthError(unableToLoadToken);\n        }\n        const accountEntity = AccountEntity.createAccount({\n            homeAccountId,\n            idTokenClaims: idTokenClaims,\n            clientInfo,\n            environment: authority.hostnameAndPort,\n        }, authority);\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading account\");\n            this.storage.setAccount(accountEntity);\n            return accountEntity;\n        }\n        else {\n            throw createBrowserAuthError(unableToLoadToken);\n        }\n    }\n    /**\n     * Helper function to load id tokens to msal-browser cache\n     * @param idToken\n     * @param homeAccountId\n     * @param environment\n     * @param tenantId\n     * @returns `IdTokenEntity`\n     */\n    loadIdToken(idToken, homeAccountId, environment, tenantId) {\n        const idTokenEntity = IdTokenEntity.createIdTokenEntity(homeAccountId, environment, idToken, this.config.auth.clientId, tenantId);\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading id token\");\n            this.storage.setIdTokenCredential(idTokenEntity);\n            return idTokenEntity;\n        }\n        else {\n            throw createBrowserAuthError(unableToLoadToken);\n        }\n    }\n    /**\n     * Helper function to load access tokens to msal-browser cache\n     * @param request\n     * @param response\n     * @param homeAccountId\n     * @param environment\n     * @param tenantId\n     * @returns `AccessTokenEntity`\n     */\n    loadAccessToken(request, response, homeAccountId, environment, tenantId, options) {\n        if (!response.access_token) {\n            this.logger.verbose(\"TokenCache - No access token provided for caching\");\n            return null;\n        }\n        if (!response.expires_in) {\n            throw createBrowserAuthError(unableToLoadToken);\n        }\n        if (!options.extendedExpiresOn) {\n            throw createBrowserAuthError(unableToLoadToken);\n        }\n        const scopes = new ScopeSet(request.scopes).printScopes();\n        const expiresOn = options.expiresOn ||\n            response.expires_in + new Date().getTime() / 1000;\n        const extendedExpiresOn = options.extendedExpiresOn;\n        const accessTokenEntity = AccessTokenEntity.createAccessTokenEntity(homeAccountId, environment, response.access_token, this.config.auth.clientId, tenantId, scopes, expiresOn, extendedExpiresOn, this.cryptoObj);\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading access token\");\n            this.storage.setAccessTokenCredential(accessTokenEntity);\n            return accessTokenEntity;\n        }\n        else {\n            throw createBrowserAuthError(unableToLoadToken);\n        }\n    }\n    /**\n     * Helper function to load refresh tokens to msal-browser cache\n     * @param request\n     * @param response\n     * @param homeAccountId\n     * @param environment\n     * @returns `RefreshTokenEntity`\n     */\n    loadRefreshToken(request, response, homeAccountId, environment) {\n        if (!response.refresh_token) {\n            this.logger.verbose(\"TokenCache - No refresh token provided for caching\");\n            return null;\n        }\n        const refreshTokenEntity = RefreshTokenEntity.createRefreshTokenEntity(homeAccountId, environment, response.refresh_token, this.config.auth.clientId);\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading refresh token\");\n            this.storage.setRefreshTokenCredential(refreshTokenEntity);\n            return refreshTokenEntity;\n        }\n        else {\n            throw createBrowserAuthError(unableToLoadToken);\n        }\n    }\n    /**\n     * Helper function to generate an `AuthenticationResult` for the result.\n     * @param request\n     * @param idTokenObj\n     * @param cacheRecord\n     * @param authority\n     * @returns `AuthenticationResult`\n     */\n    generateAuthenticationResult(request, idTokenClaims, cacheRecord, accountEntity, authority) {\n        let accessToken = Constants.EMPTY_STRING;\n        let responseScopes = [];\n        let expiresOn = null;\n        let extExpiresOn;\n        if (cacheRecord?.accessToken) {\n            accessToken = cacheRecord.accessToken.secret;\n            responseScopes = ScopeSet.fromString(cacheRecord.accessToken.target).asArray();\n            expiresOn = new Date(Number(cacheRecord.accessToken.expiresOn) * 1000);\n            extExpiresOn = new Date(Number(cacheRecord.accessToken.extendedExpiresOn) * 1000);\n        }\n        const uid = idTokenClaims.oid || idTokenClaims.sub || Constants.EMPTY_STRING;\n        const tid = idTokenClaims.tid || Constants.EMPTY_STRING;\n        return {\n            authority: authority\n                ? authority.canonicalAuthority\n                : Constants.EMPTY_STRING,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes,\n            account: accountEntity.getAccountInfo(),\n            idToken: cacheRecord.idToken?.secret || \"\",\n            idTokenClaims: idTokenClaims || {},\n            accessToken: accessToken,\n            fromCache: true,\n            expiresOn: expiresOn,\n            correlationId: request.correlationId || Constants.EMPTY_STRING,\n            requestId: Constants.EMPTY_STRING,\n            extExpiresOn: extExpiresOn,\n            familyId: Constants.EMPTY_STRING,\n            tokenType: cacheRecord?.accessToken?.tokenType || Constants.EMPTY_STRING,\n            state: Constants.EMPTY_STRING,\n            cloudGraphHostName: accountEntity.cloudGraphHostName || Constants.EMPTY_STRING,\n            msGraphHost: accountEntity.msGraphHost || Constants.EMPTY_STRING,\n            code: undefined,\n            fromNativeBroker: false,\n        };\n    }\n}\n\nexport { TokenCache };\n//# sourceMappingURL=TokenCache.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { AuthorizationCodeClient } from '@azure/msal-common';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass HybridSpaAuthorizationCodeClient extends AuthorizationCodeClient {\n    constructor(config) {\n        super(config);\n        this.includeRedirectUri = false;\n    }\n}\n\nexport { HybridSpaAuthorizationCodeClient };\n//# sourceMappingURL=HybridSpaAuthorizationCodeClient.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { invokeAsync, PerformanceEvents, Constants, AuthError } from '@azure/msal-common';\nimport { StandardInteractionClient } from './StandardInteractionClient.mjs';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { InteractionType } from '../utils/BrowserConstants.mjs';\nimport { HybridSpaAuthorizationCodeClient } from './HybridSpaAuthorizationCodeClient.mjs';\nimport { InteractionHandler } from '../interaction_handler/InteractionHandler.mjs';\nimport { authCodeRequired, silentLogoutUnsupported } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SilentAuthCodeClient extends StandardInteractionClient {\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, nativeMessageHandler, correlationId) {\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n        this.apiId = apiId;\n    }\n    /**\n     * Acquires a token silently by redeeming an authorization code against the /token endpoint\n     * @param request\n     */\n    async acquireToken(request) {\n        // Auth code payload is required\n        if (!request.code) {\n            throw createBrowserAuthError(authCodeRequired);\n        }\n        // Create silent request\n        const silentRequest = await invokeAsync(this.initializeAuthorizationRequest.bind(this), PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.logger, this.performanceClient, request.correlationId)(request, InteractionType.Silent);\n        this.browserStorage.updateCacheEntries(silentRequest.state, silentRequest.nonce, silentRequest.authority, silentRequest.loginHint || Constants.EMPTY_STRING, silentRequest.account || null);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\n        try {\n            // Create auth code request (PKCE not needed)\n            const authCodeRequest = {\n                ...silentRequest,\n                code: request.code,\n            };\n            // Initialize the client\n            const clientConfig = await invokeAsync(this.getClientConfiguration.bind(this), PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.logger, this.performanceClient, request.correlationId)(serverTelemetryManager, silentRequest.authority);\n            const authClient = new HybridSpaAuthorizationCodeClient(clientConfig);\n            this.logger.verbose(\"Auth code client created\");\n            // Create silent handler\n            const interactionHandler = new InteractionHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\n            // Handle auth code parameters from request\n            return invokeAsync(interactionHandler.handleCodeResponseFromServer.bind(interactionHandler), PerformanceEvents.HandleCodeResponseFromServer, this.logger, this.performanceClient, request.correlationId)({\n                code: request.code,\n                msgraph_host: request.msGraphHost,\n                cloud_graph_host_name: request.cloudGraphHostName,\n                cloud_instance_host_name: request.cloudInstanceHostName,\n            }, silentRequest.state, authClient.authority, this.networkClient, false);\n        }\n        catch (e) {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.browserStorage.cleanRequestByState(silentRequest.state);\n            throw e;\n        }\n    }\n    /**\n     * Currently Unsupported\n     */\n    logout() {\n        // Synchronous so we must reject\n        return Promise.reject(createBrowserAuthError(silentLogoutUnsupported));\n    }\n}\n\nexport { SilentAuthCodeClient };\n//# sourceMappingURL=SilentAuthCodeClient.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { CryptoOps } from '../crypto/CryptoOps.mjs';\nimport { DEFAULT_CRYPTO_IMPLEMENTATION, buildStaticAuthorityOptions, PerformanceEvents, invokeAsync, ServerResponseType, UrlString, Constants, InteractionRequiredAuthError, AuthError, createClientAuthError, ClientAuthErrorCodes, AccountEntity, PromptValue, ServerError } from '@azure/msal-common';\nimport { BrowserCacheManager, DEFAULT_BROWSER_CACHE_MANAGER } from '../cache/BrowserCacheManager.mjs';\nimport { InteractionType, ApiId, TemporaryCacheKeys, CacheLookupPolicy, BrowserCacheLocation, DEFAULT_REQUEST, BrowserConstants } from '../utils/BrowserConstants.mjs';\nimport { blockAPICallsBeforeInitialize, blockNonBrowserEnvironment, blockRedirectInIframe, blockReloadInHiddenIframes, blockAcquireTokenInPopups } from '../utils/BrowserUtils.mjs';\nimport { EventType } from '../event/EventType.mjs';\nimport { createBrowserConfigurationAuthError } from '../error/BrowserConfigurationAuthError.mjs';\nimport { EventHandler } from '../event/EventHandler.mjs';\nimport { PopupClient } from '../interaction_client/PopupClient.mjs';\nimport { RedirectClient } from '../interaction_client/RedirectClient.mjs';\nimport { SilentIframeClient } from '../interaction_client/SilentIframeClient.mjs';\nimport { SilentRefreshClient } from '../interaction_client/SilentRefreshClient.mjs';\nimport { TokenCache } from '../cache/TokenCache.mjs';\nimport { NativeInteractionClient } from '../interaction_client/NativeInteractionClient.mjs';\nimport { NativeMessageHandler } from '../broker/nativeBroker/NativeMessageHandler.mjs';\nimport { NativeAuthError, isFatalNativeAuthError } from '../error/NativeAuthError.mjs';\nimport { SilentCacheClient } from '../interaction_client/SilentCacheClient.mjs';\nimport { SilentAuthCodeClient } from '../interaction_client/SilentAuthCodeClient.mjs';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { createNewGuid } from '../crypto/BrowserCrypto.mjs';\nimport { spaCodeAndNativeAccountIdPresent, unableToAcquireTokenFromNativePlatform, authCodeOrNativeAccountIdRequired, nativeConnectionNotEstablished, noAccountError } from '../error/BrowserAuthErrorCodes.mjs';\nimport { inMemRedirectUnavailable } from '../error/BrowserConfigurationAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass StandardController {\n    /**\n     * @constructor\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     * - redirect_uri: the uri of your application registered in the portal.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param configuration Object for the MSAL PublicClientApplication instance\n     */\n    constructor(operatingContext) {\n        this.atsAsyncMeasurement = undefined;\n        this.operatingContext = operatingContext;\n        this.isBrowserEnvironment =\n            this.operatingContext.isBrowserEnvironment();\n        // Set the configuration.\n        this.config = operatingContext.getConfig();\n        this.initialized = false;\n        // Initialize logger\n        this.logger = this.operatingContext.getLogger();\n        // Initialize the network module class.\n        this.networkClient = this.config.system.networkClient;\n        // Initialize the navigation client class.\n        this.navigationClient = this.config.system.navigationClient;\n        // Initialize redirectResponse Map\n        this.redirectResponse = new Map();\n        // Initial hybrid spa map\n        this.hybridAuthCodeResponses = new Map();\n        // Initialize performance client\n        this.performanceClient = this.config.telemetry.client;\n        // Initialize the crypto class.\n        this.browserCrypto = this.isBrowserEnvironment\n            ? new CryptoOps(this.logger, this.performanceClient)\n            : DEFAULT_CRYPTO_IMPLEMENTATION;\n        this.eventHandler = new EventHandler(this.logger, this.browserCrypto);\n        // Initialize the browser storage class.\n        this.browserStorage = this.isBrowserEnvironment\n            ? new BrowserCacheManager(this.config.auth.clientId, this.config.cache, this.browserCrypto, this.logger, buildStaticAuthorityOptions(this.config.auth))\n            : DEFAULT_BROWSER_CACHE_MANAGER(this.config.auth.clientId, this.logger);\n        // initialize in memory storage for native flows\n        const nativeCacheOptions = {\n            cacheLocation: BrowserCacheLocation.MemoryStorage,\n            temporaryCacheLocation: BrowserCacheLocation.MemoryStorage,\n            storeAuthStateInCookie: false,\n            secureCookies: false,\n            cacheMigrationEnabled: false,\n            claimsBasedCachingEnabled: false,\n        };\n        this.nativeInternalStorage = new BrowserCacheManager(this.config.auth.clientId, nativeCacheOptions, this.browserCrypto, this.logger);\n        // Initialize the token cache\n        this.tokenCache = new TokenCache(this.config, this.browserStorage, this.logger, this.browserCrypto);\n        this.activeSilentTokenRequests = new Map();\n        // Register listener functions\n        this.trackPageVisibility = this.trackPageVisibility.bind(this);\n        // Register listener functions\n        this.trackPageVisibilityWithMeasurement =\n            this.trackPageVisibilityWithMeasurement.bind(this);\n    }\n    static async createController(operatingContext) {\n        const controller = new StandardController(operatingContext);\n        await controller.initialize();\n        return controller;\n    }\n    trackPageVisibility() {\n        if (!this.atsAsyncMeasurement) {\n            return;\n        }\n        this.logger.info(\"Perf: Visibility change detected\");\n        this.atsAsyncMeasurement.increment({\n            visibilityChangeCount: 1,\n        });\n    }\n    /**\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\n     */\n    async initialize() {\n        this.logger.trace(\"initialize called\");\n        if (this.initialized) {\n            this.logger.info(\"initialize has already been called, exiting early.\");\n            return;\n        }\n        const allowNativeBroker = this.config.system.allowNativeBroker;\n        const initMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.InitializeClientApplication);\n        this.eventHandler.emitEvent(EventType.INITIALIZE_START);\n        if (allowNativeBroker) {\n            try {\n                this.nativeExtensionProvider =\n                    await NativeMessageHandler.createProvider(this.logger, this.config.system.nativeBrokerHandshakeTimeout, this.performanceClient);\n            }\n            catch (e) {\n                this.logger.verbose(e);\n            }\n        }\n        if (!this.config.cache.claimsBasedCachingEnabled) {\n            this.logger.verbose(\"Claims-based caching is disabled. Clearing the previous cache with claims\");\n            await invokeAsync(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage), PerformanceEvents.ClearTokensAndKeysWithClaims, this.logger, this.performanceClient)(this.performanceClient);\n        }\n        this.initialized = true;\n        this.eventHandler.emitEvent(EventType.INITIALIZE_END);\n        initMeasurement.end({ allowNativeBroker, success: true });\n    }\n    // #region Redirect Flow\n    /**\n     * Event handler function which allows users to fire events after the PublicClientApplication object\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\n     * auth flows.\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\n     */\n    async handleRedirectPromise(hash) {\n        this.logger.verbose(\"handleRedirectPromise called\");\n        // Block token acquisition before initialize has been called\n        blockAPICallsBeforeInitialize(this.initialized);\n        let foundServerResponse = hash;\n        if (this.config.auth.OIDCOptions?.serverResponseType ===\n            ServerResponseType.QUERY) {\n            const url = window.location.href;\n            foundServerResponse = UrlString.parseQueryServerResponse(url);\n        }\n        const loggedInAccounts = this.getAllAccounts();\n        if (this.isBrowserEnvironment) {\n            /**\n             * Store the promise on the PublicClientApplication instance if this is the first invocation of handleRedirectPromise,\n             * otherwise return the promise from the first invocation. Prevents race conditions when handleRedirectPromise is called\n             * several times concurrently.\n             */\n            const redirectResponseKey = foundServerResponse || Constants.EMPTY_STRING;\n            let response = this.redirectResponse.get(redirectResponseKey);\n            if (typeof response === \"undefined\") {\n                this.eventHandler.emitEvent(EventType.HANDLE_REDIRECT_START, InteractionType.Redirect);\n                this.logger.verbose(\"handleRedirectPromise has been called for the first time, storing the promise\");\n                const request = this.browserStorage.getCachedNativeRequest();\n                let redirectResponse;\n                if (request &&\n                    NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeExtensionProvider) &&\n                    this.nativeExtensionProvider &&\n                    !foundServerResponse) {\n                    this.logger.trace(\"handleRedirectPromise - acquiring token from native platform\");\n                    const nativeClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.handleRedirectPromise, this.performanceClient, this.nativeExtensionProvider, request.accountId, this.nativeInternalStorage, request.correlationId);\n                    redirectResponse = nativeClient.handleRedirectPromise();\n                }\n                else {\n                    this.logger.trace(\"handleRedirectPromise - acquiring token from web flow\");\n                    const correlationId = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.CORRELATION_ID, true) || Constants.EMPTY_STRING;\n                    const redirectClient = this.createRedirectClient(correlationId);\n                    redirectResponse =\n                        redirectClient.handleRedirectPromise(foundServerResponse);\n                }\n                response = redirectResponse\n                    .then((result) => {\n                    if (result) {\n                        // Emit login event if number of accounts change\n                        const isLoggingIn = loggedInAccounts.length <\n                            this.getAllAccounts().length;\n                        if (isLoggingIn) {\n                            this.eventHandler.emitEvent(EventType.LOGIN_SUCCESS, InteractionType.Redirect, result);\n                            this.logger.verbose(\"handleRedirectResponse returned result, login success\");\n                        }\n                        else {\n                            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Redirect, result);\n                            this.logger.verbose(\"handleRedirectResponse returned result, acquire token success\");\n                        }\n                    }\n                    this.eventHandler.emitEvent(EventType.HANDLE_REDIRECT_END, InteractionType.Redirect);\n                    return result;\n                })\n                    .catch((e) => {\n                    // Emit login event if there is an account\n                    if (loggedInAccounts.length > 0) {\n                        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Redirect, null, e);\n                    }\n                    else {\n                        this.eventHandler.emitEvent(EventType.LOGIN_FAILURE, InteractionType.Redirect, null, e);\n                    }\n                    this.eventHandler.emitEvent(EventType.HANDLE_REDIRECT_END, InteractionType.Redirect);\n                    throw e;\n                });\n                this.redirectResponse.set(redirectResponseKey, response);\n            }\n            else {\n                this.logger.verbose(\"handleRedirectPromise has been called previously, returning the result from the first call\");\n            }\n            return response;\n        }\n        this.logger.verbose(\"handleRedirectPromise returns null, not browser environment\");\n        return null;\n    }\n    /**\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\n     * the page, so any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    async acquireTokenRedirect(request) {\n        // Preflight request\n        const correlationId = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"acquireTokenRedirect called\", correlationId);\n        this.preflightBrowserEnvironmentCheck(InteractionType.Redirect);\n        // If logged in, emit acquire token events\n        const isLoggedIn = this.getAllAccounts().length > 0;\n        if (isLoggedIn) {\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Redirect, request);\n        }\n        else {\n            this.eventHandler.emitEvent(EventType.LOGIN_START, InteractionType.Redirect, request);\n        }\n        let result;\n        if (this.nativeExtensionProvider && this.canUseNative(request)) {\n            const nativeClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenRedirect, this.performanceClient, this.nativeExtensionProvider, this.getNativeAccountId(request), this.nativeInternalStorage, request.correlationId);\n            result = nativeClient\n                .acquireTokenRedirect(request)\n                .catch((e) => {\n                if (e instanceof NativeAuthError &&\n                    isFatalNativeAuthError(e)) {\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                    const redirectClient = this.createRedirectClient(request.correlationId);\n                    return redirectClient.acquireToken(request);\n                }\n                else if (e instanceof InteractionRequiredAuthError) {\n                    this.logger.verbose(\"acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow\");\n                    const redirectClient = this.createRedirectClient(request.correlationId);\n                    return redirectClient.acquireToken(request);\n                }\n                this.getBrowserStorage().setInteractionInProgress(false);\n                throw e;\n            });\n        }\n        else {\n            const redirectClient = this.createRedirectClient(request.correlationId);\n            result = redirectClient.acquireToken(request);\n        }\n        return result.catch((e) => {\n            // If logged in, emit acquire token events\n            if (isLoggedIn) {\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Redirect, null, e);\n            }\n            else {\n                this.eventHandler.emitEvent(EventType.LOGIN_FAILURE, InteractionType.Redirect, null, e);\n            }\n            throw e;\n        });\n    }\n    // #endregion\n    // #region Popup Flow\n    /**\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    acquireTokenPopup(request) {\n        const correlationId = this.getRequestCorrelationId(request);\n        const atPopupMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenPopup, correlationId);\n        try {\n            this.logger.verbose(\"acquireTokenPopup called\", correlationId);\n            this.preflightBrowserEnvironmentCheck(InteractionType.Popup);\n        }\n        catch (e) {\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        }\n        // If logged in, emit acquire token events\n        const loggedInAccounts = this.getAllAccounts();\n        if (loggedInAccounts.length > 0) {\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Popup, request);\n        }\n        else {\n            this.eventHandler.emitEvent(EventType.LOGIN_START, InteractionType.Popup, request);\n        }\n        let result;\n        if (this.canUseNative(request)) {\n            result = this.acquireTokenNative(request, ApiId.acquireTokenPopup)\n                .then((response) => {\n                this.getBrowserStorage().setInteractionInProgress(false);\n                atPopupMeasurement.end({\n                    success: true,\n                    isNativeBroker: true,\n                    requestId: response.requestId,\n                });\n                return response;\n            })\n                .catch((e) => {\n                if (e instanceof NativeAuthError &&\n                    isFatalNativeAuthError(e)) {\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                    const popupClient = this.createPopupClient(request.correlationId);\n                    return popupClient.acquireToken(request);\n                }\n                else if (e instanceof InteractionRequiredAuthError) {\n                    this.logger.verbose(\"acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow\");\n                    const popupClient = this.createPopupClient(request.correlationId);\n                    return popupClient.acquireToken(request);\n                }\n                this.getBrowserStorage().setInteractionInProgress(false);\n                throw e;\n            });\n        }\n        else {\n            const popupClient = this.createPopupClient(request.correlationId);\n            result = popupClient.acquireToken(request);\n        }\n        return result\n            .then((result) => {\n            /*\n             *  If logged in, emit acquire token events\n             */\n            const isLoggingIn = loggedInAccounts.length < this.getAllAccounts().length;\n            if (isLoggingIn) {\n                this.eventHandler.emitEvent(EventType.LOGIN_SUCCESS, InteractionType.Popup, result);\n            }\n            else {\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Popup, result);\n            }\n            atPopupMeasurement.add({\n                accessTokenSize: result.accessToken.length,\n                idTokenSize: result.idToken.length,\n            });\n            atPopupMeasurement.end({\n                success: true,\n                requestId: result.requestId,\n            });\n            return result;\n        })\n            .catch((e) => {\n            if (loggedInAccounts.length > 0) {\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Popup, null, e);\n            }\n            else {\n                this.eventHandler.emitEvent(EventType.LOGIN_FAILURE, InteractionType.Popup, null, e);\n            }\n            atPopupMeasurement.end({\n                errorCode: e.errorCode,\n                subErrorCode: e.subError,\n                success: false,\n            });\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        });\n    }\n    trackPageVisibilityWithMeasurement() {\n        const measurement = this.ssoSilentMeasurement ||\n            this.acquireTokenByCodeAsyncMeasurement;\n        if (!measurement) {\n            return;\n        }\n        this.logger.info(\"Perf: Visibility change detected in \", measurement.event.name);\n        measurement.increment({\n            visibilityChangeCount: 1,\n        });\n    }\n    // #endregion\n    // #region Silent Flow\n    /**\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\n     * - Any browser using a form of Intelligent Tracking Prevention\n     * - If there is not an established session with the service\n     *\n     * In these cases, the request must be done inside a popup or full frame redirect.\n     *\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\n     *\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\n     * you session on the server still exists.\n     * @param request {@link SsoSilentRequest}\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async ssoSilent(request) {\n        const correlationId = this.getRequestCorrelationId(request);\n        const validRequest = {\n            ...request,\n            // will be PromptValue.NONE or PromptValue.NO_SESSION\n            prompt: request.prompt,\n            correlationId: correlationId,\n        };\n        this.preflightBrowserEnvironmentCheck(InteractionType.Silent);\n        this.ssoSilentMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SsoSilent, correlationId);\n        this.ssoSilentMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n        document.addEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\n        this.logger.verbose(\"ssoSilent called\", correlationId);\n        this.eventHandler.emitEvent(EventType.SSO_SILENT_START, InteractionType.Silent, validRequest);\n        let result;\n        if (this.canUseNative(validRequest)) {\n            result = this.acquireTokenNative(validRequest, ApiId.ssoSilent).catch((e) => {\n                // If native token acquisition fails for availability reasons fallback to standard flow\n                if (e instanceof NativeAuthError && isFatalNativeAuthError(e)) {\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                    const silentIframeClient = this.createSilentIframeClient(validRequest.correlationId);\n                    return silentIframeClient.acquireToken(validRequest);\n                }\n                throw e;\n            });\n        }\n        else {\n            const silentIframeClient = this.createSilentIframeClient(validRequest.correlationId);\n            result = silentIframeClient.acquireToken(validRequest);\n        }\n        return result\n            .then((response) => {\n            this.eventHandler.emitEvent(EventType.SSO_SILENT_SUCCESS, InteractionType.Silent, response);\n            this.ssoSilentMeasurement?.add({\n                accessTokenSize: response.accessToken.length,\n                idTokenSize: response.idToken.length,\n            });\n            this.ssoSilentMeasurement?.end({\n                success: true,\n                isNativeBroker: response.fromNativeBroker,\n                requestId: response.requestId,\n            });\n            return response;\n        })\n            .catch((e) => {\n            this.eventHandler.emitEvent(EventType.SSO_SILENT_FAILURE, InteractionType.Silent, null, e);\n            this.ssoSilentMeasurement?.end({\n                errorCode: e.errorCode,\n                subErrorCode: e.subError,\n                success: false,\n            });\n            throw e;\n        })\n            .finally(() => {\n            document.removeEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\n        });\n    }\n    /**\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\n     * This API is not indended for normal authorization code acquisition and redemption.\n     *\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\n     *\n     * @param request {@link AuthorizationCodeRequest}\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async acquireTokenByCode(request) {\n        const correlationId = this.getRequestCorrelationId(request);\n        this.preflightBrowserEnvironmentCheck(InteractionType.Silent);\n        this.logger.trace(\"acquireTokenByCode called\", correlationId);\n        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_BY_CODE_START, InteractionType.Silent, request);\n        const atbcMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenByCode, request.correlationId);\n        try {\n            if (request.code && request.nativeAccountId) {\n                // Throw error in case server returns both spa_code and spa_accountid in exchange for auth code.\n                throw createBrowserAuthError(spaCodeAndNativeAccountIdPresent);\n            }\n            else if (request.code) {\n                const hybridAuthCode = request.code;\n                let response = this.hybridAuthCodeResponses.get(hybridAuthCode);\n                if (!response) {\n                    this.logger.verbose(\"Initiating new acquireTokenByCode request\", correlationId);\n                    response = this.acquireTokenByCodeAsync({\n                        ...request,\n                        correlationId,\n                    })\n                        .then((result) => {\n                        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_BY_CODE_SUCCESS, InteractionType.Silent, result);\n                        this.hybridAuthCodeResponses.delete(hybridAuthCode);\n                        atbcMeasurement.add({\n                            accessTokenSize: result.accessToken.length,\n                            idTokenSize: result.idToken.length,\n                        });\n                        atbcMeasurement.end({\n                            success: true,\n                            isNativeBroker: result.fromNativeBroker,\n                            requestId: result.requestId,\n                        });\n                        return result;\n                    })\n                        .catch((error) => {\n                        this.hybridAuthCodeResponses.delete(hybridAuthCode);\n                        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE, InteractionType.Silent, null, error);\n                        atbcMeasurement.end({\n                            errorCode: error.errorCode,\n                            subErrorCode: error.subError,\n                            success: false,\n                        });\n                        throw error;\n                    });\n                    this.hybridAuthCodeResponses.set(hybridAuthCode, response);\n                }\n                else {\n                    this.logger.verbose(\"Existing acquireTokenByCode request found\", request.correlationId);\n                    atbcMeasurement.discard();\n                }\n                return response;\n            }\n            else if (request.nativeAccountId) {\n                if (this.canUseNative(request, request.nativeAccountId)) {\n                    return this.acquireTokenNative(request, ApiId.acquireTokenByCode, request.nativeAccountId).catch((e) => {\n                        // If native token acquisition fails for availability reasons fallback to standard flow\n                        if (e instanceof NativeAuthError &&\n                            isFatalNativeAuthError(e)) {\n                            this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                        }\n                        throw e;\n                    });\n                }\n                else {\n                    throw createBrowserAuthError(unableToAcquireTokenFromNativePlatform);\n                }\n            }\n            else {\n                throw createBrowserAuthError(authCodeOrNativeAccountIdRequired);\n            }\n        }\n        catch (e) {\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE, InteractionType.Silent, null, e);\n            atbcMeasurement.end({\n                errorCode: (e instanceof AuthError && e.errorCode) || undefined,\n                subErrorCode: (e instanceof AuthError && e.subError) || undefined,\n                success: false,\n            });\n            throw e;\n        }\n    }\n    /**\n     * Creates a SilentAuthCodeClient to redeem an authorization code.\n     * @param request\n     * @returns Result of the operation to redeem the authorization code\n     */\n    async acquireTokenByCodeAsync(request) {\n        this.logger.trace(\"acquireTokenByCodeAsync called\", request.correlationId);\n        this.acquireTokenByCodeAsyncMeasurement =\n            this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenByCodeAsync, request.correlationId);\n        this.acquireTokenByCodeAsyncMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n        document.addEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\n        const silentAuthCodeClient = this.createSilentAuthCodeClient(request.correlationId);\n        const silentTokenResult = await silentAuthCodeClient\n            .acquireToken(request)\n            .then((response) => {\n            this.acquireTokenByCodeAsyncMeasurement?.end({\n                success: true,\n                fromCache: response.fromCache,\n                isNativeBroker: response.fromNativeBroker,\n                requestId: response.requestId,\n            });\n            return response;\n        })\n            .catch((tokenRenewalError) => {\n            this.acquireTokenByCodeAsyncMeasurement?.end({\n                errorCode: tokenRenewalError.errorCode,\n                subErrorCode: tokenRenewalError.subError,\n                success: false,\n            });\n            throw tokenRenewalError;\n        })\n            .finally(() => {\n            document.removeEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\n        });\n        return silentTokenResult;\n    }\n    /**\n     * Attempt to acquire an access token from the cache\n     * @param silentCacheClient SilentCacheClient\n     * @param commonRequest CommonSilentFlowRequest\n     * @param silentRequest SilentRequest\n     * @returns A promise that, when resolved, returns the access token\n     */\n    async acquireTokenFromCache(silentCacheClient, commonRequest, silentRequest) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.AcquireTokenFromCache, commonRequest.correlationId);\n        switch (silentRequest.cacheLookupPolicy) {\n            case CacheLookupPolicy.Default:\n            case CacheLookupPolicy.AccessToken:\n            case CacheLookupPolicy.AccessTokenAndRefreshToken:\n                return invokeAsync(silentCacheClient.acquireToken.bind(silentCacheClient), PerformanceEvents.SilentCacheClientAcquireToken, this.logger, this.performanceClient, commonRequest.correlationId)(commonRequest);\n            default:\n                throw createClientAuthError(ClientAuthErrorCodes.tokenRefreshRequired);\n        }\n    }\n    /**\n     * Attempt to acquire an access token via a refresh token\n     * @param commonRequest CommonSilentFlowRequest\n     * @param silentRequest SilentRequest\n     * @returns A promise that, when resolved, returns the access token\n     */\n    async acquireTokenByRefreshToken(commonRequest, silentRequest) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.AcquireTokenByRefreshToken, commonRequest.correlationId);\n        switch (silentRequest.cacheLookupPolicy) {\n            case CacheLookupPolicy.Default:\n            case CacheLookupPolicy.AccessTokenAndRefreshToken:\n            case CacheLookupPolicy.RefreshToken:\n            case CacheLookupPolicy.RefreshTokenAndNetwork:\n                const silentRefreshClient = this.createSilentRefreshClient(commonRequest.correlationId);\n                return invokeAsync(silentRefreshClient.acquireToken.bind(silentRefreshClient), PerformanceEvents.SilentRefreshClientAcquireToken, this.logger, this.performanceClient, commonRequest.correlationId)(commonRequest);\n            default:\n                throw createClientAuthError(ClientAuthErrorCodes.tokenRefreshRequired);\n        }\n    }\n    /**\n     * Attempt to acquire an access token via an iframe\n     * @param request CommonSilentFlowRequest\n     * @returns A promise that, when resolved, returns the access token\n     */\n    async acquireTokenBySilentIframe(request) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.AcquireTokenBySilentIframe, request.correlationId);\n        const silentIframeClient = this.createSilentIframeClient(request.correlationId);\n        return invokeAsync(silentIframeClient.acquireToken.bind(silentIframeClient), PerformanceEvents.SilentIframeClientAcquireToken, this.logger, this.performanceClient, request.correlationId)(request);\n    }\n    // #endregion\n    // #region Logout\n    /**\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\n     * @param logoutRequest\n     * @deprecated\n     */\n    async logout(logoutRequest) {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        this.logger.warning(\"logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.\", correlationId);\n        return this.logoutRedirect({\n            correlationId,\n            ...logoutRequest,\n        });\n    }\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    async logoutRedirect(logoutRequest) {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        this.preflightBrowserEnvironmentCheck(InteractionType.Redirect);\n        const redirectClient = this.createRedirectClient(correlationId);\n        return redirectClient.logout(logoutRequest);\n    }\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logoutPopup(logoutRequest) {\n        try {\n            const correlationId = this.getRequestCorrelationId(logoutRequest);\n            this.preflightBrowserEnvironmentCheck(InteractionType.Popup);\n            const popupClient = this.createPopupClient(correlationId);\n            return popupClient.logout(logoutRequest);\n        }\n        catch (e) {\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        }\n    }\n    /**\n     * Creates a cache interaction client to clear broswer cache.\n     * @param logoutRequest\n     */\n    async clearCache(logoutRequest) {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        const cacheClient = this.createSilentCacheClient(correlationId);\n        return cacheClient.logout(logoutRequest);\n    }\n    // #endregion\n    // #region Account APIs\n    /**\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\n     * @returns Array of AccountInfo objects in cache\n     */\n    getAllAccounts(accountFilter) {\n        this.logger.verbose(\"getAllAccounts called\");\n        return this.isBrowserEnvironment\n            ? this.browserStorage.getAllAccounts(accountFilter)\n            : [];\n    }\n    /**\n     * Returns the first account found in the cache that matches the account filter passed in.\n     * @param accountFilter\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\n     */\n    getAccount(accountFilter) {\n        this.logger.trace(\"getAccount called\");\n        if (Object.keys(accountFilter).length === 0) {\n            this.logger.warning(\"getAccount: No accountFilter provided\");\n            return null;\n        }\n        const account = this.browserStorage.getAccountInfoFilteredBy(accountFilter);\n        if (account) {\n            this.logger.verbose(\"getAccount: Account matching provided filter found, returning\");\n            return account;\n        }\n        else {\n            this.logger.verbose(\"getAccount: No matching account found, returning null\");\n            return null;\n        }\n    }\n    /**\n     * Returns the signed in account matching username.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found.\n     * This API is provided for convenience but getAccountById should be used for best reliability\n     * @param username\n     * @returns The account object stored in MSAL\n     */\n    getAccountByUsername(username) {\n        this.logger.trace(\"getAccountByUsername called\");\n        if (!username) {\n            this.logger.warning(\"getAccountByUsername: No username provided\");\n            return null;\n        }\n        const account = this.browserStorage.getAccountInfoFilteredBy({\n            username,\n        });\n        if (account) {\n            this.logger.verbose(\"getAccountByUsername: Account matching username found, returning\");\n            this.logger.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${username}`);\n            return account;\n        }\n        else {\n            this.logger.verbose(\"getAccountByUsername: No matching account found, returning null\");\n            return null;\n        }\n    }\n    /**\n     * Returns the signed in account matching homeAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param homeAccountId\n     * @returns The account object stored in MSAL\n     */\n    getAccountByHomeId(homeAccountId) {\n        this.logger.trace(\"getAccountByHomeId called\");\n        if (!homeAccountId) {\n            this.logger.warning(\"getAccountByHomeId: No homeAccountId provided\");\n            return null;\n        }\n        const account = this.browserStorage.getAccountInfoFilteredBy({\n            homeAccountId,\n        });\n        if (account) {\n            this.logger.verbose(\"getAccountByHomeId: Account matching homeAccountId found, returning\");\n            this.logger.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${homeAccountId}`);\n            return account;\n        }\n        else {\n            this.logger.verbose(\"getAccountByHomeId: No matching account found, returning null\");\n            return null;\n        }\n    }\n    /**\n     * Returns the signed in account matching localAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param localAccountId\n     * @returns The account object stored in MSAL\n     */\n    getAccountByLocalId(localAccountId) {\n        this.logger.trace(\"getAccountByLocalId called\");\n        if (!localAccountId) {\n            this.logger.warning(\"getAccountByLocalId: No localAccountId provided\");\n            return null;\n        }\n        const account = this.browserStorage.getAccountInfoFilteredBy({\n            localAccountId,\n        });\n        if (account) {\n            this.logger.verbose(\"getAccountByLocalId: Account matching localAccountId found, returning\");\n            this.logger.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${localAccountId}`);\n            return account;\n        }\n        else {\n            this.logger.verbose(\"getAccountByLocalId: No matching account found, returning null\");\n            return null;\n        }\n    }\n    /**\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\n     * @param account\n     */\n    setActiveAccount(account) {\n        this.browserStorage.setActiveAccount(account);\n    }\n    /**\n     * Gets the currently active account\n     */\n    getActiveAccount() {\n        return this.browserStorage.getActiveAccount();\n    }\n    // #endregion\n    /**\n     * Hydrates the cache with the tokens from an AuthenticationResult\n     * @param result\n     * @param request\n     * @returns\n     */\n    async hydrateCache(result, request) {\n        this.logger.verbose(\"hydrateCache called\");\n        // Account gets saved to browser storage regardless of native or not\n        const accountEntity = AccountEntity.createFromAccountInfo(result.account, result.cloudGraphHostName, result.msGraphHost);\n        this.browserStorage.setAccount(accountEntity);\n        if (result.fromNativeBroker) {\n            this.logger.verbose(\"Response was from native broker, storing in-memory\");\n            // Tokens from native broker are stored in-memory\n            return this.nativeInternalStorage.hydrateCache(result, request);\n        }\n        else {\n            return this.browserStorage.hydrateCache(result, request);\n        }\n    }\n    // #region Helpers\n    /**\n     * Helper to validate app environment before making an auth request\n     *\n     * @protected\n     * @param {InteractionType} interactionType What kind of interaction is being used\n     * @param {boolean} [isAppEmbedded=false] Whether to set interaction in progress temp cache flag\n     */\n    preflightBrowserEnvironmentCheck(interactionType, isAppEmbedded = false) {\n        this.logger.verbose(\"preflightBrowserEnvironmentCheck started\");\n        // Block request if not in browser environment\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        // Block redirects if in an iframe\n        blockRedirectInIframe(interactionType, this.config.system.allowRedirectInIframe);\n        // Block auth requests inside a hidden iframe\n        blockReloadInHiddenIframes();\n        // Block redirectUri opened in a popup from calling MSAL APIs\n        blockAcquireTokenInPopups();\n        // Block token acquisition before initialize has been called\n        blockAPICallsBeforeInitialize(this.initialized);\n        // Block redirects if memory storage is enabled but storeAuthStateInCookie is not\n        if (interactionType === InteractionType.Redirect &&\n            this.config.cache.cacheLocation ===\n                BrowserCacheLocation.MemoryStorage &&\n            !this.config.cache.storeAuthStateInCookie) {\n            throw createBrowserConfigurationAuthError(inMemRedirectUnavailable);\n        }\n        if (interactionType === InteractionType.Redirect ||\n            interactionType === InteractionType.Popup) {\n            this.preflightInteractiveRequest(!isAppEmbedded);\n        }\n    }\n    /**\n     * Preflight check for interactive requests\n     *\n     * @protected\n     * @param {boolean} setInteractionInProgress Whether to set interaction in progress temp cache flag\n     */\n    preflightInteractiveRequest(setInteractionInProgress) {\n        this.logger.verbose(\"preflightInteractiveRequest called, validating app environment\");\n        // block the reload if it occurred inside a hidden iframe\n        blockReloadInHiddenIframes();\n        // Set interaction in progress temporary cache or throw if alread set.\n        if (setInteractionInProgress) {\n            this.getBrowserStorage().setInteractionInProgress(true);\n        }\n    }\n    /**\n     * Acquire a token from native device (e.g. WAM)\n     * @param request\n     */\n    async acquireTokenNative(request, apiId, accountId) {\n        this.logger.trace(\"acquireTokenNative called\");\n        if (!this.nativeExtensionProvider) {\n            throw createBrowserAuthError(nativeConnectionNotEstablished);\n        }\n        const nativeClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, apiId, this.performanceClient, this.nativeExtensionProvider, accountId || this.getNativeAccountId(request), this.nativeInternalStorage, request.correlationId);\n        return nativeClient.acquireToken(request);\n    }\n    /**\n     * Returns boolean indicating if this request can use the native broker\n     * @param request\n     */\n    canUseNative(request, accountId) {\n        this.logger.trace(\"canUseNative called\");\n        if (!NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeExtensionProvider, request.authenticationScheme)) {\n            this.logger.trace(\"canUseNative: isNativeAvailable returned false, returning false\");\n            return false;\n        }\n        if (request.prompt) {\n            switch (request.prompt) {\n                case PromptValue.NONE:\n                case PromptValue.CONSENT:\n                case PromptValue.LOGIN:\n                    this.logger.trace(\"canUseNative: prompt is compatible with native flow\");\n                    break;\n                default:\n                    this.logger.trace(`canUseNative: prompt = ${request.prompt} is not compatible with native flow, returning false`);\n                    return false;\n            }\n        }\n        if (!accountId && !this.getNativeAccountId(request)) {\n            this.logger.trace(\"canUseNative: nativeAccountId is not available, returning false\");\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Get the native accountId from the account\n     * @param request\n     * @returns\n     */\n    getNativeAccountId(request) {\n        const account = request.account ||\n            this.browserStorage.getAccountInfoFilteredBy({\n                loginHint: request.loginHint,\n                sid: request.sid,\n            }) ||\n            this.getActiveAccount();\n        return (account && account.nativeAccountId) || \"\";\n    }\n    /**\n     * Returns new instance of the Popup Interaction Client\n     * @param correlationId\n     */\n    createPopupClient(correlationId) {\n        return new PopupClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeInternalStorage, this.nativeExtensionProvider, correlationId);\n    }\n    /**\n     * Returns new instance of the Redirect Interaction Client\n     * @param correlationId\n     */\n    createRedirectClient(correlationId) {\n        return new RedirectClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeInternalStorage, this.nativeExtensionProvider, correlationId);\n    }\n    /**\n     * Returns new instance of the Silent Iframe Interaction Client\n     * @param correlationId\n     */\n    createSilentIframeClient(correlationId) {\n        return new SilentIframeClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.ssoSilent, this.performanceClient, this.nativeInternalStorage, this.nativeExtensionProvider, correlationId);\n    }\n    /**\n     * Returns new instance of the Silent Cache Interaction Client\n     */\n    createSilentCacheClient(correlationId) {\n        return new SilentCacheClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeExtensionProvider, correlationId);\n    }\n    /**\n     * Returns new instance of the Silent Refresh Interaction Client\n     */\n    createSilentRefreshClient(correlationId) {\n        return new SilentRefreshClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeExtensionProvider, correlationId);\n    }\n    /**\n     * Returns new instance of the Silent AuthCode Interaction Client\n     */\n    createSilentAuthCodeClient(correlationId) {\n        return new SilentAuthCodeClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenByCode, this.performanceClient, this.nativeExtensionProvider, correlationId);\n    }\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback) {\n        return this.eventHandler.addEventCallback(callback);\n    }\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId) {\n        this.eventHandler.removeEventCallback(callbackId);\n    }\n    /**\n     * Registers a callback to receive performance events.\n     *\n     * @param {PerformanceCallbackFunction} callback\n     * @returns {string}\n     */\n    addPerformanceCallback(callback) {\n        return this.performanceClient.addPerformanceCallback(callback);\n    }\n    /**\n     * Removes a callback registered with addPerformanceCallback.\n     *\n     * @param {string} callbackId\n     * @returns {boolean}\n     */\n    removePerformanceCallback(callbackId) {\n        return this.performanceClient.removePerformanceCallback(callbackId);\n    }\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents() {\n        this.eventHandler.enableAccountStorageEvents();\n    }\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents() {\n        this.eventHandler.disableAccountStorageEvents();\n    }\n    /**\n     * Gets the token cache for the application.\n     */\n    getTokenCache() {\n        return this.tokenCache;\n    }\n    /**\n     * Returns the logger instance\n     */\n    getLogger() {\n        return this.logger;\n    }\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger Logger instance\n     */\n    setLogger(logger) {\n        this.logger = logger;\n    }\n    /**\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\n     * @param sku\n     * @param version\n     */\n    initializeWrapperLibrary(sku, version) {\n        // Validate the SKU passed in is one we expect\n        this.browserStorage.setWrapperMetadata(sku, version);\n    }\n    /**\n     * Sets navigation client\n     * @param navigationClient\n     */\n    setNavigationClient(navigationClient) {\n        this.navigationClient = navigationClient;\n    }\n    /**\n     * Returns the configuration object\n     */\n    getConfiguration() {\n        return this.config;\n    }\n    /**\n     * Returns the performance client\n     */\n    getPerformanceClient() {\n        return this.performanceClient;\n    }\n    /**\n     * Returns the browser storage\n     */\n    getBrowserStorage() {\n        return this.browserStorage;\n    }\n    /**\n     * Returns the browser env indicator\n     */\n    isBrowserEnv() {\n        return this.isBrowserEnvironment;\n    }\n    /**\n     * Returns the event handler\n     */\n    getEventHandler() {\n        return this.eventHandler;\n    }\n    /**\n     * Generates a correlation id for a request if none is provided.\n     *\n     * @protected\n     * @param {?Partial<BaseAuthRequest>} [request]\n     * @returns {string}\n     */\n    getRequestCorrelationId(request) {\n        if (request?.correlationId) {\n            return request.correlationId;\n        }\n        if (this.isBrowserEnvironment) {\n            return createNewGuid();\n        }\n        /*\n         * Included for fallback for non-browser environments,\n         * and to ensure this method always returns a string.\n         */\n        return Constants.EMPTY_STRING;\n    }\n    // #endregion\n    /**\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\n     * any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    async loginRedirect(request) {\n        const correlationId = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"loginRedirect called\", correlationId);\n        return this.acquireTokenRedirect({\n            correlationId,\n            ...(request || DEFAULT_REQUEST),\n        });\n    }\n    /**\n     * Use when initiating the login process via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    loginPopup(request) {\n        const correlationId = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"loginPopup called\", correlationId);\n        return this.acquireTokenPopup({\n            correlationId,\n            ...(request || DEFAULT_REQUEST),\n        });\n    }\n    /**\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\n     *\n     * @param {@link (SilentRequest:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\n     */\n    async acquireTokenSilent(request) {\n        const correlationId = this.getRequestCorrelationId(request);\n        const atsMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenSilent, correlationId);\n        atsMeasurement.add({\n            cacheLookupPolicy: request.cacheLookupPolicy,\n        });\n        this.preflightBrowserEnvironmentCheck(InteractionType.Silent);\n        this.logger.verbose(\"acquireTokenSilent called\", correlationId);\n        const account = request.account || this.getActiveAccount();\n        if (!account) {\n            throw createBrowserAuthError(noAccountError);\n        }\n        const thumbprint = {\n            clientId: this.config.auth.clientId,\n            authority: request.authority || Constants.EMPTY_STRING,\n            scopes: request.scopes,\n            homeAccountIdentifier: account.homeAccountId,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n        const silentRequestKey = JSON.stringify(thumbprint);\n        const cachedResponse = this.activeSilentTokenRequests.get(silentRequestKey);\n        if (typeof cachedResponse === \"undefined\") {\n            this.logger.verbose(\"acquireTokenSilent called for the first time, storing active request\", correlationId);\n            const response = invokeAsync(this.acquireTokenSilentAsync.bind(this), PerformanceEvents.AcquireTokenSilentAsync, this.logger, this.performanceClient, correlationId)({\n                ...request,\n                correlationId,\n            }, account)\n                .then((result) => {\n                this.activeSilentTokenRequests.delete(silentRequestKey);\n                atsMeasurement.add({\n                    accessTokenSize: result.accessToken.length,\n                    idTokenSize: result.idToken.length,\n                });\n                atsMeasurement.end({\n                    success: true,\n                    fromCache: result.fromCache,\n                    isNativeBroker: result.fromNativeBroker,\n                    cacheLookupPolicy: request.cacheLookupPolicy,\n                    requestId: result.requestId,\n                });\n                return result;\n            })\n                .catch((error) => {\n                this.activeSilentTokenRequests.delete(silentRequestKey);\n                atsMeasurement.end({\n                    errorCode: error.errorCode,\n                    subErrorCode: error.subError,\n                    success: false,\n                });\n                throw error;\n            });\n            this.activeSilentTokenRequests.set(silentRequestKey, response);\n            return response;\n        }\n        else {\n            this.logger.verbose(\"acquireTokenSilent has been called previously, returning the result from the first call\", correlationId);\n            // Discard measurements for memoized calls, as they are usually only a couple of ms and will artificially deflate metrics\n            atsMeasurement.discard();\n            return cachedResponse;\n        }\n    }\n    /**\n     * Silently acquire an access token for a given set of scopes. Will use cached token if available, otherwise will attempt to acquire a new token from the network via refresh token.\n     * @param {@link (SilentRequest:type)}\n     * @param {@link (AccountInfo:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse}\n     */\n    async acquireTokenSilentAsync(request, account) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.AcquireTokenSilentAsync, request.correlationId);\n        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Silent, request);\n        this.atsAsyncMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenSilentAsync, request.correlationId);\n        this.atsAsyncMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n        document.addEventListener(\"visibilitychange\", this.trackPageVisibility);\n        let result;\n        if (NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeExtensionProvider, request.authenticationScheme) &&\n            account.nativeAccountId) {\n            this.logger.verbose(\"acquireTokenSilent - attempting to acquire token from native platform\");\n            const silentRequest = {\n                ...request,\n                account,\n            };\n            result = this.acquireTokenNative(silentRequest, ApiId.acquireTokenSilent_silentFlow).catch(async (e) => {\n                // If native token acquisition fails for availability reasons fallback to web flow\n                if (e instanceof NativeAuthError && isFatalNativeAuthError(e)) {\n                    this.logger.verbose(\"acquireTokenSilent - native platform unavailable, falling back to web flow\");\n                    this.nativeExtensionProvider = undefined; // Prevent future requests from continuing to attempt\n                    // Cache will not contain tokens, given that previous WAM requests succeeded. Skip cache and RT renewal and go straight to iframe renewal\n                    const silentIframeClient = this.createSilentIframeClient(request.correlationId);\n                    return silentIframeClient.acquireToken(request);\n                }\n                throw e;\n            });\n        }\n        else {\n            this.logger.verbose(\"acquireTokenSilent - attempting to acquire token from web flow\");\n            const silentCacheClient = this.createSilentCacheClient(request.correlationId);\n            const silentRequest = await invokeAsync(silentCacheClient.initializeSilentRequest.bind(silentCacheClient), PerformanceEvents.InitializeSilentRequest, this.logger, this.performanceClient, request.correlationId)(request, account);\n            const requestWithCLP = {\n                ...request,\n                // set the request's CacheLookupPolicy to Default if it was not optionally passed in\n                cacheLookupPolicy: request.cacheLookupPolicy || CacheLookupPolicy.Default,\n            };\n            result = invokeAsync(this.acquireTokenFromCache.bind(this), PerformanceEvents.AcquireTokenFromCache, this.logger, this.performanceClient, silentRequest.correlationId)(silentCacheClient, silentRequest, requestWithCLP).catch((cacheError) => {\n                if (requestWithCLP.cacheLookupPolicy ===\n                    CacheLookupPolicy.AccessToken) {\n                    throw cacheError;\n                }\n                // block the reload if it occurred inside a hidden iframe\n                blockReloadInHiddenIframes();\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_NETWORK_START, InteractionType.Silent, silentRequest);\n                return invokeAsync(this.acquireTokenByRefreshToken.bind(this), PerformanceEvents.AcquireTokenByRefreshToken, this.logger, this.performanceClient, silentRequest.correlationId)(silentRequest, requestWithCLP).catch((refreshTokenError) => {\n                    const isServerError = refreshTokenError instanceof ServerError;\n                    const isInteractionRequiredError = refreshTokenError instanceof\n                        InteractionRequiredAuthError;\n                    const isInvalidGrantError = refreshTokenError.errorCode ===\n                        BrowserConstants.INVALID_GRANT_ERROR;\n                    if ((!isServerError ||\n                        !isInvalidGrantError ||\n                        isInteractionRequiredError ||\n                        requestWithCLP.cacheLookupPolicy ===\n                            CacheLookupPolicy.AccessTokenAndRefreshToken ||\n                        requestWithCLP.cacheLookupPolicy ===\n                            CacheLookupPolicy.RefreshToken) &&\n                        requestWithCLP.cacheLookupPolicy !==\n                            CacheLookupPolicy.Skip) {\n                        throw refreshTokenError;\n                    }\n                    this.logger.verbose(\"Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.\", request.correlationId);\n                    return invokeAsync(this.acquireTokenBySilentIframe.bind(this), PerformanceEvents.AcquireTokenBySilentIframe, this.logger, this.performanceClient, silentRequest.correlationId)(silentRequest);\n                });\n            });\n        }\n        return result\n            .then((response) => {\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Silent, response);\n            this.atsAsyncMeasurement?.end({\n                success: true,\n                fromCache: response.fromCache,\n                isNativeBroker: response.fromNativeBroker,\n                requestId: response.requestId,\n            });\n            return response;\n        })\n            .catch((tokenRenewalError) => {\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Silent, null, tokenRenewalError);\n            this.atsAsyncMeasurement?.end({\n                errorCode: tokenRenewalError.errorCode,\n                subErrorCode: tokenRenewalError.subError,\n                success: false,\n            });\n            throw tokenRenewalError;\n        })\n            .finally(() => {\n            document.removeEventListener(\"visibilitychange\", this.trackPageVisibility);\n        });\n    }\n}\n\nexport { StandardController };\n//# sourceMappingURL=StandardController.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { PerformanceEvents } from '@azure/msal-common';\nimport { KEY_FORMAT_JWK } from '../utils/BrowserConstants.mjs';\nimport { cryptoNonExistent } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This file defines functions used by the browser library to perform cryptography operations such as\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\n */\n/**\n * See here for more info on RsaHashedKeyGenParams: https://developer.mozilla.org/en-US/docs/Web/API/RsaHashedKeyGenParams\n */\n// RSA KeyGen Algorithm\nconst PKCS1_V15_KEYGEN_ALG = \"RSASSA-PKCS1-v1_5\";\n// SHA-256 hashing algorithm\nconst S256_HASH_ALG = \"SHA-256\";\n// MOD length for PoP tokens\nconst MODULUS_LENGTH = 2048;\n// Public Exponent\nconst PUBLIC_EXPONENT = new Uint8Array([0x01, 0x00, 0x01]);\nconst keygenAlgorithmOptions = {\n    name: PKCS1_V15_KEYGEN_ALG,\n    hash: S256_HASH_ALG,\n    modulusLength: MODULUS_LENGTH,\n    publicExponent: PUBLIC_EXPONENT,\n};\n/**\n * Check whether browser crypto is available.\n */\nfunction validateCryptoAvailable(logger) {\n    if (\"crypto\" in window) {\n        logger.verbose(\"BrowserCrypto: modern crypto interface available\");\n    }\n    else {\n        logger.error(\"BrowserCrypto: crypto interface is unavailable\");\n        throw createBrowserAuthError(cryptoNonExistent);\n    }\n}\n/**\n * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\n * @param dataString\n */\nasync function sha256Digest(dataString, performanceClient, correlationId) {\n    performanceClient?.addQueueMeasurement(PerformanceEvents.Sha256Digest, correlationId);\n    const encoder = new TextEncoder();\n    const data = encoder.encode(dataString);\n    return window.crypto.subtle.digest(S256_HASH_ALG, data);\n}\n/**\n * Populates buffer with cryptographically random values.\n * @param dataBuffer\n */\nfunction getRandomValues(dataBuffer) {\n    return window.crypto.getRandomValues(dataBuffer);\n}\n/**\n * Creates a new random GUID\n * @returns\n */\nfunction createNewGuid() {\n    return window.crypto.randomUUID();\n}\n/**\n * Generates a keypair based on current keygen algorithm config.\n * @param extractable\n * @param usages\n */\nasync function generateKeyPair(extractable, usages) {\n    return window.crypto.subtle.generateKey(keygenAlgorithmOptions, extractable, usages);\n}\n/**\n * Export key as Json Web Key (JWK)\n * @param key\n */\nasync function exportJwk(key) {\n    return window.crypto.subtle.exportKey(KEY_FORMAT_JWK, key);\n}\n/**\n * Imports key as Json Web Key (JWK), can set extractable and usages.\n * @param key\n * @param extractable\n * @param usages\n */\nasync function importJwk(key, extractable, usages) {\n    return window.crypto.subtle.importKey(KEY_FORMAT_JWK, key, keygenAlgorithmOptions, extractable, usages);\n}\n/**\n * Signs given data with given key\n * @param key\n * @param data\n */\nasync function sign(key, data) {\n    return window.crypto.subtle.sign(keygenAlgorithmOptions, key, data);\n}\n\nexport { createNewGuid, exportJwk, generateKeyPair, getRandomValues, importJwk, sha256Digest, sign, validateCryptoAvailable };\n//# sourceMappingURL=BrowserCrypto.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst missingKidError = \"missing_kid_error\";\nconst missingAlgError = \"missing_alg_error\";\n\nexport { missingAlgError, missingKidError };\n//# sourceMappingURL=JoseHeaderErrorCodes.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { AuthError } from './AuthError.mjs';\nimport { missingKidError, missingAlgError } from './JoseHeaderErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst JoseHeaderErrorMessages = {\n    [missingKidError]: \"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.\",\n    [missingAlgError]: \"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided.\",\n};\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nclass JoseHeaderError extends AuthError {\n    constructor(errorCode, errorMessage) {\n        super(errorCode, errorMessage);\n        this.name = \"JoseHeaderError\";\n        Object.setPrototypeOf(this, JoseHeaderError.prototype);\n    }\n}\n/** Returns JoseHeaderError object */\nfunction createJoseHeaderError(code) {\n    return new JoseHeaderError(code, JoseHeaderErrorMessages[code]);\n}\n\nexport { JoseHeaderError, JoseHeaderErrorMessages, createJoseHeaderError };\n//# sourceMappingURL=JoseHeaderError.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { createJoseHeaderError } from '../error/JoseHeaderError.mjs';\nimport { JsonTypes } from '../utils/Constants.mjs';\nimport { missingKidError, missingAlgError } from '../error/JoseHeaderErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass JoseHeader {\n    constructor(options) {\n        this.typ = options.typ;\n        this.alg = options.alg;\n        this.kid = options.kid;\n    }\n    /**\n     * Builds SignedHttpRequest formatted JOSE Header from the\n     * JOSE Header options provided or previously set on the object and returns\n     * the stringified header object.\n     * Throws if keyId or algorithm aren't provided since they are required for Access Token Binding.\n     * @param shrHeaderOptions\n     * @returns\n     */\n    static getShrHeaderString(shrHeaderOptions) {\n        // KeyID is required on the SHR header\n        if (!shrHeaderOptions.kid) {\n            throw createJoseHeaderError(missingKidError);\n        }\n        // Alg is required on the SHR header\n        if (!shrHeaderOptions.alg) {\n            throw createJoseHeaderError(missingAlgError);\n        }\n        const shrHeader = new JoseHeader({\n            // Access Token PoP headers must have type pop, but the type header can be overriden for special cases\n            typ: shrHeaderOptions.typ || JsonTypes.Pop,\n            kid: shrHeaderOptions.kid,\n            alg: shrHeaderOptions.alg,\n        });\n        return JSON.stringify(shrHeader);\n    }\n}\n\nexport { JoseHeader };\n//# sourceMappingURL=JoseHeader.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { DB_NAME, DB_VERSION, DB_TABLE_NAME } from '../utils/BrowserConstants.mjs';\nimport { databaseUnavailable, databaseNotOpen } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Storage wrapper for IndexedDB storage in browsers: https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\n */\nclass DatabaseStorage {\n    constructor() {\n        this.dbName = DB_NAME;\n        this.version = DB_VERSION;\n        this.tableName = DB_TABLE_NAME;\n        this.dbOpen = false;\n    }\n    /**\n     * Opens IndexedDB instance.\n     */\n    async open() {\n        return new Promise((resolve, reject) => {\n            const openDB = window.indexedDB.open(this.dbName, this.version);\n            openDB.addEventListener(\"upgradeneeded\", (e) => {\n                const event = e;\n                event.target.result.createObjectStore(this.tableName);\n            });\n            openDB.addEventListener(\"success\", (e) => {\n                const event = e;\n                this.db = event.target.result;\n                this.dbOpen = true;\n                resolve();\n            });\n            openDB.addEventListener(\"error\", () => reject(createBrowserAuthError(databaseUnavailable)));\n        });\n    }\n    /**\n     * Closes the connection to IndexedDB database when all pending transactions\n     * complete.\n     */\n    closeConnection() {\n        const db = this.db;\n        if (db && this.dbOpen) {\n            db.close();\n            this.dbOpen = false;\n        }\n    }\n    /**\n     * Opens database if it's not already open\n     */\n    async validateDbIsOpen() {\n        if (!this.dbOpen) {\n            return await this.open();\n        }\n    }\n    /**\n     * Retrieves item from IndexedDB instance.\n     * @param key\n     */\n    async getItem(key) {\n        await this.validateDbIsOpen();\n        return new Promise((resolve, reject) => {\n            // TODO: Add timeouts?\n            if (!this.db) {\n                return reject(createBrowserAuthError(databaseNotOpen));\n            }\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbGet = objectStore.get(key);\n            dbGet.addEventListener(\"success\", (e) => {\n                const event = e;\n                this.closeConnection();\n                resolve(event.target.result);\n            });\n            dbGet.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n    /**\n     * Adds item to IndexedDB under given key\n     * @param key\n     * @param payload\n     */\n    async setItem(key, payload) {\n        await this.validateDbIsOpen();\n        return new Promise((resolve, reject) => {\n            // TODO: Add timeouts?\n            if (!this.db) {\n                return reject(createBrowserAuthError(databaseNotOpen));\n            }\n            const transaction = this.db.transaction([this.tableName], \"readwrite\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbPut = objectStore.put(payload, key);\n            dbPut.addEventListener(\"success\", () => {\n                this.closeConnection();\n                resolve();\n            });\n            dbPut.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n    /**\n     * Removes item from IndexedDB under given key\n     * @param key\n     */\n    async removeItem(key) {\n        await this.validateDbIsOpen();\n        return new Promise((resolve, reject) => {\n            if (!this.db) {\n                return reject(createBrowserAuthError(databaseNotOpen));\n            }\n            const transaction = this.db.transaction([this.tableName], \"readwrite\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbDelete = objectStore.delete(key);\n            dbDelete.addEventListener(\"success\", () => {\n                this.closeConnection();\n                resolve();\n            });\n            dbDelete.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n    /**\n     * Get all the keys from the storage object as an iterable array of strings.\n     */\n    async getKeys() {\n        await this.validateDbIsOpen();\n        return new Promise((resolve, reject) => {\n            if (!this.db) {\n                return reject(createBrowserAuthError(databaseNotOpen));\n            }\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbGetKeys = objectStore.getAllKeys();\n            dbGetKeys.addEventListener(\"success\", (e) => {\n                const event = e;\n                this.closeConnection();\n                resolve(event.target.result);\n            });\n            dbGetKeys.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n    /**\n     *\n     * Checks whether there is an object under the search key in the object store\n     */\n    async containsKey(key) {\n        await this.validateDbIsOpen();\n        return new Promise((resolve, reject) => {\n            if (!this.db) {\n                return reject(createBrowserAuthError(databaseNotOpen));\n            }\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbContainsKey = objectStore.count(key);\n            dbContainsKey.addEventListener(\"success\", (e) => {\n                const event = e;\n                this.closeConnection();\n                resolve(event.target.result === 1);\n            });\n            dbContainsKey.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n    /**\n     * Deletes the MSAL database. The database is deleted rather than cleared to make it possible\n     * for client applications to downgrade to a previous MSAL version without worrying about forward compatibility issues\n     * with IndexedDB database versions.\n     */\n    async deleteDatabase() {\n        // Check if database being deleted exists\n        if (this.db && this.dbOpen) {\n            this.closeConnection();\n        }\n        return new Promise((resolve, reject) => {\n            const deleteDbRequest = window.indexedDB.deleteDatabase(DB_NAME);\n            deleteDbRequest.addEventListener(\"success\", () => resolve(true));\n            deleteDbRequest.addEventListener(\"blocked\", () => resolve(true));\n            deleteDbRequest.addEventListener(\"error\", () => reject(false));\n        });\n    }\n}\n\nexport { DatabaseStorage };\n//# sourceMappingURL=DatabaseStorage.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { BrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { DatabaseStorage } from './DatabaseStorage.mjs';\nimport { MemoryStorage } from './MemoryStorage.mjs';\nimport { databaseUnavailable } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This class allows MSAL to store artifacts asynchronously using the DatabaseStorage IndexedDB wrapper,\n * backed up with the more volatile MemoryStorage object for cases in which IndexedDB may be unavailable.\n */\nclass AsyncMemoryStorage {\n    constructor(logger, storeName) {\n        this.inMemoryCache = new MemoryStorage();\n        this.indexedDBCache = new DatabaseStorage();\n        this.logger = logger;\n        this.storeName = storeName;\n    }\n    handleDatabaseAccessError(error) {\n        if (error instanceof BrowserAuthError &&\n            error.errorCode === databaseUnavailable) {\n            this.logger.error(\"Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.\");\n        }\n        else {\n            throw error;\n        }\n    }\n    /**\n     * Get the item matching the given key. Tries in-memory cache first, then in the asynchronous\n     * storage object if item isn't found in-memory.\n     * @param key\n     */\n    async getItem(key) {\n        const item = this.inMemoryCache.getItem(key);\n        if (!item) {\n            try {\n                this.logger.verbose(\"Queried item not found in in-memory cache, now querying persistent storage.\");\n                return await this.indexedDBCache.getItem(key);\n            }\n            catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return item;\n    }\n    /**\n     * Sets the item in the in-memory cache and then tries to set it in the asynchronous\n     * storage object with the given key.\n     * @param key\n     * @param value\n     */\n    async setItem(key, value) {\n        this.inMemoryCache.setItem(key, value);\n        try {\n            await this.indexedDBCache.setItem(key, value);\n        }\n        catch (e) {\n            this.handleDatabaseAccessError(e);\n        }\n    }\n    /**\n     * Removes the item matching the key from the in-memory cache, then tries to remove it from the asynchronous storage object.\n     * @param key\n     */\n    async removeItem(key) {\n        this.inMemoryCache.removeItem(key);\n        try {\n            await this.indexedDBCache.removeItem(key);\n        }\n        catch (e) {\n            this.handleDatabaseAccessError(e);\n        }\n    }\n    /**\n     * Get all the keys from the in-memory cache as an iterable array of strings. If no keys are found, query the keys in the\n     * asynchronous storage object.\n     */\n    async getKeys() {\n        const cacheKeys = this.inMemoryCache.getKeys();\n        if (cacheKeys.length === 0) {\n            try {\n                this.logger.verbose(\"In-memory cache is empty, now querying persistent storage.\");\n                return await this.indexedDBCache.getKeys();\n            }\n            catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return cacheKeys;\n    }\n    /**\n     * Returns true or false if the given key is present in the cache.\n     * @param key\n     */\n    async containsKey(key) {\n        const containsKey = this.inMemoryCache.containsKey(key);\n        if (!containsKey) {\n            try {\n                this.logger.verbose(\"Key not found in in-memory cache, now querying persistent storage.\");\n                return await this.indexedDBCache.containsKey(key);\n            }\n            catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return containsKey;\n    }\n    /**\n     * Clears in-memory Map\n     */\n    clearInMemory() {\n        // InMemory cache is a Map instance, clear is straightforward\n        this.logger.verbose(`Deleting in-memory keystore ${this.storeName}`);\n        this.inMemoryCache.clear();\n        this.logger.verbose(`In-memory keystore ${this.storeName} deleted`);\n    }\n    /**\n     * Tries to delete the IndexedDB database\n     * @returns\n     */\n    async clearPersistent() {\n        try {\n            this.logger.verbose(\"Deleting persistent keystore\");\n            const dbDeleted = await this.indexedDBCache.deleteDatabase();\n            if (dbDeleted) {\n                this.logger.verbose(\"Persistent keystore deleted\");\n            }\n            return dbDeleted;\n        }\n        catch (e) {\n            this.handleDatabaseAccessError(e);\n            return false;\n        }\n    }\n}\n\nexport { AsyncMemoryStorage };\n//# sourceMappingURL=AsyncMemoryStorage.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { AsyncMemoryStorage } from './AsyncMemoryStorage.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst CryptoKeyStoreNames = {\n    asymmetricKeys: \"asymmetricKeys\",\n    symmetricKeys: \"symmetricKeys\",\n};\n/**\n * MSAL CryptoKeyStore DB Version 2\n */\nclass CryptoKeyStore {\n    constructor(logger) {\n        this.logger = logger;\n        this.asymmetricKeys = new AsyncMemoryStorage(this.logger, CryptoKeyStoreNames.asymmetricKeys);\n        this.symmetricKeys = new AsyncMemoryStorage(this.logger, CryptoKeyStoreNames.symmetricKeys);\n    }\n    async clear() {\n        // Delete in-memory keystores\n        this.asymmetricKeys.clearInMemory();\n        this.symmetricKeys.clearInMemory();\n        /**\n         * There is only one database, so calling clearPersistent on asymmetric keystore takes care of\n         * every persistent keystore\n         */\n        try {\n            await this.asymmetricKeys.clearPersistent();\n            return true;\n        }\n        catch (e) {\n            if (e instanceof Error) {\n                this.logger.error(`Clearing keystore failed with error: ${e.message}`);\n            }\n            else {\n                this.logger.error(\"Clearing keystore failed with unknown error\");\n            }\n            return false;\n        }\n    }\n}\n\nexport { CryptoKeyStore, CryptoKeyStoreNames };\n//# sourceMappingURL=CryptoKeyStore.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { PerformanceEvents, JoseHeader } from '@azure/msal-common';\nimport { base64Encode, urlEncode, urlEncodeArr } from '../encode/Base64Encode.mjs';\nimport { base64Decode } from '../encode/Base64Decode.mjs';\nimport { validateCryptoAvailable, createNewGuid, generateKeyPair, exportJwk, importJwk, sign, sha256Digest } from './BrowserCrypto.mjs';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { CryptoKeyStore } from '../cache/CryptoKeyStore.mjs';\nimport { cryptoKeyNotFound } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and\n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\n */\nclass CryptoOps {\n    constructor(logger, performanceClient) {\n        this.logger = logger;\n        // Browser crypto needs to be validated first before any other classes can be set.\n        validateCryptoAvailable(logger);\n        this.cache = new CryptoKeyStore(this.logger);\n        this.performanceClient = performanceClient;\n    }\n    /**\n     * Creates a new random GUID - used to populate state and nonce.\n     * @returns string (GUID)\n     */\n    createNewGuid() {\n        return createNewGuid();\n    }\n    /**\n     * Encodes input string to base64.\n     * @param input\n     */\n    base64Encode(input) {\n        return base64Encode(input);\n    }\n    /**\n     * Decodes input string from base64.\n     * @param input\n     */\n    base64Decode(input) {\n        return base64Decode(input);\n    }\n    /**\n     * Generates a keypair, stores it and returns a thumbprint\n     * @param request\n     */\n    async getPublicKeyThumbprint(request) {\n        const publicKeyThumbMeasurement = this.performanceClient?.startMeasurement(PerformanceEvents.CryptoOptsGetPublicKeyThumbprint, request.correlationId);\n        // Generate Keypair\n        const keyPair = await generateKeyPair(CryptoOps.EXTRACTABLE, CryptoOps.POP_KEY_USAGES);\n        // Generate Thumbprint for Public Key\n        const publicKeyJwk = await exportJwk(keyPair.publicKey);\n        const pubKeyThumprintObj = {\n            e: publicKeyJwk.e,\n            kty: publicKeyJwk.kty,\n            n: publicKeyJwk.n,\n        };\n        const publicJwkString = getSortedObjectString(pubKeyThumprintObj);\n        const publicJwkHash = await this.hashString(publicJwkString);\n        // Generate Thumbprint for Private Key\n        const privateKeyJwk = await exportJwk(keyPair.privateKey);\n        // Re-import private key to make it unextractable\n        const unextractablePrivateKey = await importJwk(privateKeyJwk, false, [\"sign\"]);\n        // Store Keypair data in keystore\n        await this.cache.asymmetricKeys.setItem(publicJwkHash, {\n            privateKey: unextractablePrivateKey,\n            publicKey: keyPair.publicKey,\n            requestMethod: request.resourceRequestMethod,\n            requestUri: request.resourceRequestUri,\n        });\n        if (publicKeyThumbMeasurement) {\n            publicKeyThumbMeasurement.end({\n                success: true,\n            });\n        }\n        return publicJwkHash;\n    }\n    /**\n     * Removes cryptographic keypair from key store matching the keyId passed in\n     * @param kid\n     */\n    async removeTokenBindingKey(kid) {\n        await this.cache.asymmetricKeys.removeItem(kid);\n        const keyFound = await this.cache.asymmetricKeys.containsKey(kid);\n        return !keyFound;\n    }\n    /**\n     * Removes all cryptographic keys from IndexedDB storage\n     */\n    async clearKeystore() {\n        return await this.cache.clear();\n    }\n    /**\n     * Signs the given object as a jwt payload with private key retrieved by given kid.\n     * @param payload\n     * @param kid\n     */\n    async signJwt(payload, kid, correlationId) {\n        const signJwtMeasurement = this.performanceClient?.startMeasurement(PerformanceEvents.CryptoOptsSignJwt, correlationId);\n        const cachedKeyPair = await this.cache.asymmetricKeys.getItem(kid);\n        if (!cachedKeyPair) {\n            throw createBrowserAuthError(cryptoKeyNotFound);\n        }\n        // Get public key as JWK\n        const publicKeyJwk = await exportJwk(cachedKeyPair.publicKey);\n        const publicKeyJwkString = getSortedObjectString(publicKeyJwk);\n        // Base64URL encode public key thumbprint with keyId only: BASE64URL({ kid: \"FULL_PUBLIC_KEY_HASH\" })\n        const encodedKeyIdThumbprint = urlEncode(JSON.stringify({ kid: kid }));\n        // Generate header\n        const shrHeader = JoseHeader.getShrHeaderString({\n            kid: encodedKeyIdThumbprint,\n            alg: publicKeyJwk.alg,\n        });\n        const encodedShrHeader = urlEncode(shrHeader);\n        // Generate payload\n        payload.cnf = {\n            jwk: JSON.parse(publicKeyJwkString),\n        };\n        const encodedPayload = urlEncode(JSON.stringify(payload));\n        // Form token string\n        const tokenString = `${encodedShrHeader}.${encodedPayload}`;\n        // Sign token\n        const encoder = new TextEncoder();\n        const tokenBuffer = encoder.encode(tokenString);\n        const signatureBuffer = await sign(cachedKeyPair.privateKey, tokenBuffer);\n        const encodedSignature = urlEncodeArr(new Uint8Array(signatureBuffer));\n        const signedJwt = `${tokenString}.${encodedSignature}`;\n        if (signJwtMeasurement) {\n            signJwtMeasurement.end({\n                success: true,\n            });\n        }\n        return signedJwt;\n    }\n    /**\n     * Returns the SHA-256 hash of an input string\n     * @param plainText\n     */\n    async hashString(plainText) {\n        const hashBuffer = await sha256Digest(plainText);\n        const hashBytes = new Uint8Array(hashBuffer);\n        return urlEncodeArr(hashBytes);\n    }\n}\nCryptoOps.POP_KEY_USAGES = [\"sign\", \"verify\"];\nCryptoOps.EXTRACTABLE = true;\nfunction getSortedObjectString(obj) {\n    return JSON.stringify(obj, Object.keys(obj).sort());\n}\n\nexport { CryptoOps };\n//# sourceMappingURL=CryptoOps.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { invalidBase64String } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\n */\n/**\n * Returns a URL-safe plaintext decoded string from b64 encoded input.\n * @param input\n */\nfunction base64Decode(input) {\n    return new TextDecoder().decode(base64DecToArr(input));\n}\n/**\n * Decodes base64 into Uint8Array\n * @param base64String\n */\nfunction base64DecToArr(base64String) {\n    let encodedString = base64String.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (encodedString.length % 4) {\n        case 0:\n            break;\n        case 2:\n            encodedString += \"==\";\n            break;\n        case 3:\n            encodedString += \"=\";\n            break;\n        default:\n            throw createBrowserAuthError(invalidBase64String);\n    }\n    const binString = atob(encodedString);\n    return Uint8Array.from(binString, (m) => m.codePointAt(0) || 0);\n}\n\nexport { base64Decode };\n//# sourceMappingURL=Base64Decode.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\n/**\n * Returns URL Safe b64 encoded string from a plaintext string.\n * @param input\n */\nfunction urlEncode(input) {\n    return encodeURIComponent(base64Encode(input)\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\"));\n}\n/**\n * Returns URL Safe b64 encoded string from an int8Array.\n * @param inputArr\n */\nfunction urlEncodeArr(inputArr) {\n    return base64EncArr(inputArr)\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\n/**\n * Returns b64 encoded string from plaintext string.\n * @param input\n */\nfunction base64Encode(input) {\n    return base64EncArr(new TextEncoder().encode(input));\n}\n/**\n * Base64 encode byte array\n * @param aBytes\n */\nfunction base64EncArr(aBytes) {\n    const binString = Array.from(aBytes, (x) => String.fromCodePoint(x)).join(\"\");\n    return btoa(binString);\n}\n\nexport { base64Encode, urlEncode, urlEncodeArr };\n//# sourceMappingURL=Base64Encode.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { AuthError } from '@azure/msal-common';\nimport { pkceNotCreated, cryptoNonExistent, emptyNavigateUri, hashEmptyError, noStateInHash, hashDoesNotContainKnownProperties, unableToParseState, stateInteractionTypeMismatch, interactionInProgress, popupWindowError, emptyWindowError, userCancelled, monitorPopupTimeout, monitorWindowTimeout, redirectInIframe, blockIframeReload, blockNestedPopups, iframeClosedPrematurely, silentLogoutUnsupported, noAccountError, silentPromptValueError, noTokenRequestCacheError, unableToParseTokenRequestCacheError, noCachedAuthorityError, authRequestNotSetError, invalidCacheType, nonBrowserEnvironment, databaseNotOpen, noNetworkConnectivity, postRequestFailed, getRequestFailed, failedToParseResponse, unableToLoadToken, cryptoKeyNotFound, authCodeRequired, authCodeOrNativeAccountIdRequired, spaCodeAndNativeAccountIdPresent, databaseUnavailable, unableToAcquireTokenFromNativePlatform, nativeHandshakeTimeout, nativeExtensionNotInstalled, nativeConnectionNotEstablished, uninitializedPublicClientApplication, nativePromptNotSupported, invalidBase64String } from './BrowserAuthErrorCodes.mjs';\nimport * as BrowserAuthErrorCodes from './BrowserAuthErrorCodes.mjs';\nexport { BrowserAuthErrorCodes };\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst ErrorLink = \"For more visit: aka.ms/msaljs/browser-errors\";\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst BrowserAuthErrorMessages = {\n    [pkceNotCreated]: \"The PKCE code challenge and verifier could not be generated.\",\n    [cryptoNonExistent]: \"The crypto object or function is not available.\",\n    [emptyNavigateUri]: \"Navigation URI is empty. Please check stack trace for more info.\",\n    [hashEmptyError]: `Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${ErrorLink}`,\n    [noStateInHash]: \"Hash does not contain state. Please verify that the request originated from msal.\",\n    [hashDoesNotContainKnownProperties]: `Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${ErrorLink}`,\n    [unableToParseState]: \"Unable to parse state. Please verify that the request originated from msal.\",\n    [stateInteractionTypeMismatch]: \"Hash contains state but the interaction type does not match the caller.\",\n    [interactionInProgress]: `Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${ErrorLink}`,\n    [popupWindowError]: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\",\n    [emptyWindowError]: \"window.open returned null or undefined window object.\",\n    [userCancelled]: \"User cancelled the flow.\",\n    [monitorPopupTimeout]: `Token acquisition in popup failed due to timeout.  ${ErrorLink}`,\n    [monitorWindowTimeout]: `Token acquisition in iframe failed due to timeout.  ${ErrorLink}`,\n    [redirectInIframe]: \"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\",\n    [blockIframeReload]: `Request was blocked inside an iframe because MSAL detected an authentication response.  ${ErrorLink}`,\n    [blockNestedPopups]: \"Request was blocked inside a popup because MSAL detected it was running in a popup.\",\n    [iframeClosedPrematurely]: \"The iframe being monitored was closed prematurely.\",\n    [silentLogoutUnsupported]: \"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.\",\n    [noAccountError]: \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\",\n    [silentPromptValueError]: \"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.\",\n    [noTokenRequestCacheError]: \"No token request found in cache.\",\n    [unableToParseTokenRequestCacheError]: \"The cached token request could not be parsed.\",\n    [noCachedAuthorityError]: \"No cached authority found.\",\n    [authRequestNotSetError]: \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\",\n    [invalidCacheType]: \"Invalid cache type\",\n    [nonBrowserEnvironment]: \"Login and token requests are not supported in non-browser environments.\",\n    [databaseNotOpen]: \"Database is not open!\",\n    [noNetworkConnectivity]: \"No network connectivity. Check your internet connection.\",\n    [postRequestFailed]: \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\",\n    [getRequestFailed]: \"Network request failed. Please check the network trace to determine root cause.\",\n    [failedToParseResponse]: \"Failed to parse network response. Check network trace.\",\n    [unableToLoadToken]: \"Error loading token to cache.\",\n    [cryptoKeyNotFound]: \"Cryptographic Key or Keypair not found in browser storage.\",\n    [authCodeRequired]: \"An authorization code must be provided (as the `code` property on the request) to this flow.\",\n    [authCodeOrNativeAccountIdRequired]: \"An authorization code or nativeAccountId must be provided to this flow.\",\n    [spaCodeAndNativeAccountIdPresent]: \"Request cannot contain both spa code and native account id.\",\n    [databaseUnavailable]: \"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.\",\n    [unableToAcquireTokenFromNativePlatform]: `Unable to acquire token from native platform.  ${ErrorLink}`,\n    [nativeHandshakeTimeout]: \"Timed out while attempting to establish connection to browser extension\",\n    [nativeExtensionNotInstalled]: \"Native extension is not installed. If you think this is a mistake call the initialize function.\",\n    [nativeConnectionNotEstablished]: `Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${ErrorLink}`,\n    [uninitializedPublicClientApplication]: `You must call and await the initialize function before attempting to call any other MSAL API.  ${ErrorLink}`,\n    [nativePromptNotSupported]: \"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.\",\n    [invalidBase64String]: \"Invalid base64 encoded string.\",\n};\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use exported BrowserAuthErrorCodes instead.\n * In your app you can do :\n * ```\n * import { BrowserAuthErrorCodes } from \"@azure/msal-browser\";\n * ```\n */\nconst BrowserAuthErrorMessage = {\n    pkceNotGenerated: {\n        code: pkceNotCreated,\n        desc: BrowserAuthErrorMessages[pkceNotCreated],\n    },\n    cryptoDoesNotExist: {\n        code: cryptoNonExistent,\n        desc: BrowserAuthErrorMessages[cryptoNonExistent],\n    },\n    emptyNavigateUriError: {\n        code: emptyNavigateUri,\n        desc: BrowserAuthErrorMessages[emptyNavigateUri],\n    },\n    hashEmptyError: {\n        code: hashEmptyError,\n        desc: BrowserAuthErrorMessages[hashEmptyError],\n    },\n    hashDoesNotContainStateError: {\n        code: noStateInHash,\n        desc: BrowserAuthErrorMessages[noStateInHash],\n    },\n    hashDoesNotContainKnownPropertiesError: {\n        code: hashDoesNotContainKnownProperties,\n        desc: BrowserAuthErrorMessages[hashDoesNotContainKnownProperties],\n    },\n    unableToParseStateError: {\n        code: unableToParseState,\n        desc: BrowserAuthErrorMessages[unableToParseState],\n    },\n    stateInteractionTypeMismatchError: {\n        code: stateInteractionTypeMismatch,\n        desc: BrowserAuthErrorMessages[stateInteractionTypeMismatch],\n    },\n    interactionInProgress: {\n        code: interactionInProgress,\n        desc: BrowserAuthErrorMessages[interactionInProgress],\n    },\n    popupWindowError: {\n        code: popupWindowError,\n        desc: BrowserAuthErrorMessages[popupWindowError],\n    },\n    emptyWindowError: {\n        code: emptyWindowError,\n        desc: BrowserAuthErrorMessages[emptyWindowError],\n    },\n    userCancelledError: {\n        code: userCancelled,\n        desc: BrowserAuthErrorMessages[userCancelled],\n    },\n    monitorPopupTimeoutError: {\n        code: monitorPopupTimeout,\n        desc: BrowserAuthErrorMessages[monitorPopupTimeout],\n    },\n    monitorIframeTimeoutError: {\n        code: monitorWindowTimeout,\n        desc: BrowserAuthErrorMessages[monitorWindowTimeout],\n    },\n    redirectInIframeError: {\n        code: redirectInIframe,\n        desc: BrowserAuthErrorMessages[redirectInIframe],\n    },\n    blockTokenRequestsInHiddenIframeError: {\n        code: blockIframeReload,\n        desc: BrowserAuthErrorMessages[blockIframeReload],\n    },\n    blockAcquireTokenInPopupsError: {\n        code: blockNestedPopups,\n        desc: BrowserAuthErrorMessages[blockNestedPopups],\n    },\n    iframeClosedPrematurelyError: {\n        code: iframeClosedPrematurely,\n        desc: BrowserAuthErrorMessages[iframeClosedPrematurely],\n    },\n    silentLogoutUnsupportedError: {\n        code: silentLogoutUnsupported,\n        desc: BrowserAuthErrorMessages[silentLogoutUnsupported],\n    },\n    noAccountError: {\n        code: noAccountError,\n        desc: BrowserAuthErrorMessages[noAccountError],\n    },\n    silentPromptValueError: {\n        code: silentPromptValueError,\n        desc: BrowserAuthErrorMessages[silentPromptValueError],\n    },\n    noTokenRequestCacheError: {\n        code: noTokenRequestCacheError,\n        desc: BrowserAuthErrorMessages[noTokenRequestCacheError],\n    },\n    unableToParseTokenRequestCacheError: {\n        code: unableToParseTokenRequestCacheError,\n        desc: BrowserAuthErrorMessages[unableToParseTokenRequestCacheError],\n    },\n    noCachedAuthorityError: {\n        code: noCachedAuthorityError,\n        desc: BrowserAuthErrorMessages[noCachedAuthorityError],\n    },\n    authRequestNotSet: {\n        code: authRequestNotSetError,\n        desc: BrowserAuthErrorMessages[authRequestNotSetError],\n    },\n    invalidCacheType: {\n        code: invalidCacheType,\n        desc: BrowserAuthErrorMessages[invalidCacheType],\n    },\n    notInBrowserEnvironment: {\n        code: nonBrowserEnvironment,\n        desc: BrowserAuthErrorMessages[nonBrowserEnvironment],\n    },\n    databaseNotOpen: {\n        code: databaseNotOpen,\n        desc: BrowserAuthErrorMessages[databaseNotOpen],\n    },\n    noNetworkConnectivity: {\n        code: noNetworkConnectivity,\n        desc: BrowserAuthErrorMessages[noNetworkConnectivity],\n    },\n    postRequestFailed: {\n        code: postRequestFailed,\n        desc: BrowserAuthErrorMessages[postRequestFailed],\n    },\n    getRequestFailed: {\n        code: getRequestFailed,\n        desc: BrowserAuthErrorMessages[getRequestFailed],\n    },\n    failedToParseNetworkResponse: {\n        code: failedToParseResponse,\n        desc: BrowserAuthErrorMessages[failedToParseResponse],\n    },\n    unableToLoadTokenError: {\n        code: unableToLoadToken,\n        desc: BrowserAuthErrorMessages[unableToLoadToken],\n    },\n    signingKeyNotFoundInStorage: {\n        code: cryptoKeyNotFound,\n        desc: BrowserAuthErrorMessages[cryptoKeyNotFound],\n    },\n    authCodeRequired: {\n        code: authCodeRequired,\n        desc: BrowserAuthErrorMessages[authCodeRequired],\n    },\n    authCodeOrNativeAccountRequired: {\n        code: authCodeOrNativeAccountIdRequired,\n        desc: BrowserAuthErrorMessages[authCodeOrNativeAccountIdRequired],\n    },\n    spaCodeAndNativeAccountPresent: {\n        code: spaCodeAndNativeAccountIdPresent,\n        desc: BrowserAuthErrorMessages[spaCodeAndNativeAccountIdPresent],\n    },\n    databaseUnavailable: {\n        code: databaseUnavailable,\n        desc: BrowserAuthErrorMessages[databaseUnavailable],\n    },\n    unableToAcquireTokenFromNativePlatform: {\n        code: unableToAcquireTokenFromNativePlatform,\n        desc: BrowserAuthErrorMessages[unableToAcquireTokenFromNativePlatform],\n    },\n    nativeHandshakeTimeout: {\n        code: nativeHandshakeTimeout,\n        desc: BrowserAuthErrorMessages[nativeHandshakeTimeout],\n    },\n    nativeExtensionNotInstalled: {\n        code: nativeExtensionNotInstalled,\n        desc: BrowserAuthErrorMessages[nativeExtensionNotInstalled],\n    },\n    nativeConnectionNotEstablished: {\n        code: nativeConnectionNotEstablished,\n        desc: BrowserAuthErrorMessages[nativeConnectionNotEstablished],\n    },\n    uninitializedPublicClientApplication: {\n        code: uninitializedPublicClientApplication,\n        desc: BrowserAuthErrorMessages[uninitializedPublicClientApplication],\n    },\n    nativePromptNotSupported: {\n        code: nativePromptNotSupported,\n        desc: BrowserAuthErrorMessages[nativePromptNotSupported],\n    },\n    invalidBase64StringError: {\n        code: invalidBase64String,\n        desc: BrowserAuthErrorMessages[invalidBase64String],\n    },\n};\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nclass BrowserAuthError extends AuthError {\n    constructor(errorCode) {\n        super(errorCode, BrowserAuthErrorMessages[errorCode]);\n        Object.setPrototypeOf(this, BrowserAuthError.prototype);\n        this.name = \"BrowserAuthError\";\n    }\n}\nfunction createBrowserAuthError(errorCode) {\n    return new BrowserAuthError(errorCode);\n}\n\nexport { BrowserAuthError, BrowserAuthErrorMessage, BrowserAuthErrorMessages, createBrowserAuthError };\n//# sourceMappingURL=BrowserAuthError.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst pkceNotCreated = \"pkce_not_created\";\nconst cryptoNonExistent = \"crypto_nonexistent\";\nconst emptyNavigateUri = \"empty_navigate_uri\";\nconst hashEmptyError = \"hash_empty_error\";\nconst noStateInHash = \"no_state_in_hash\";\nconst hashDoesNotContainKnownProperties = \"hash_does_not_contain_known_properties\";\nconst unableToParseState = \"unable_to_parse_state\";\nconst stateInteractionTypeMismatch = \"state_interaction_type_mismatch\";\nconst interactionInProgress = \"interaction_in_progress\";\nconst popupWindowError = \"popup_window_error\";\nconst emptyWindowError = \"empty_window_error\";\nconst userCancelled = \"user_cancelled\";\nconst monitorPopupTimeout = \"monitor_popup_timeout\";\nconst monitorWindowTimeout = \"monitor_window_timeout\";\nconst redirectInIframe = \"redirect_in_iframe\";\nconst blockIframeReload = \"block_iframe_reload\";\nconst blockNestedPopups = \"block_nested_popups\";\nconst iframeClosedPrematurely = \"iframe_closed_prematurely\";\nconst silentLogoutUnsupported = \"silent_logout_unsupported\";\nconst noAccountError = \"no_account_error\";\nconst silentPromptValueError = \"silent_prompt_value_error\";\nconst noTokenRequestCacheError = \"no_token_request_cache_error\";\nconst unableToParseTokenRequestCacheError = \"unable_to_parse_token_request_cache_error\";\nconst noCachedAuthorityError = \"no_cached_authority_error\";\nconst authRequestNotSetError = \"auth_request_not_set_error\";\nconst invalidCacheType = \"invalid_cache_type\";\nconst nonBrowserEnvironment = \"non_browser_environment\";\nconst databaseNotOpen = \"database_not_open\";\nconst noNetworkConnectivity = \"no_network_connectivity\";\nconst postRequestFailed = \"post_request_failed\";\nconst getRequestFailed = \"get_request_failed\";\nconst failedToParseResponse = \"failed_to_parse_response\";\nconst unableToLoadToken = \"unable_to_load_token\";\nconst cryptoKeyNotFound = \"crypto_key_not_found\";\nconst authCodeRequired = \"auth_code_required\";\nconst authCodeOrNativeAccountIdRequired = \"auth_code_or_nativeAccountId_required\";\nconst spaCodeAndNativeAccountIdPresent = \"spa_code_and_nativeAccountId_present\";\nconst databaseUnavailable = \"database_unavailable\";\nconst unableToAcquireTokenFromNativePlatform = \"unable_to_acquire_token_from_native_platform\";\nconst nativeHandshakeTimeout = \"native_handshake_timeout\";\nconst nativeExtensionNotInstalled = \"native_extension_not_installed\";\nconst nativeConnectionNotEstablished = \"native_connection_not_established\";\nconst uninitializedPublicClientApplication = \"uninitialized_public_client_application\";\nconst nativePromptNotSupported = \"native_prompt_not_supported\";\nconst invalidBase64String = \"invalid_base64_string\";\n\nexport { authCodeOrNativeAccountIdRequired, authCodeRequired, authRequestNotSetError, blockIframeReload, blockNestedPopups, cryptoKeyNotFound, cryptoNonExistent, databaseNotOpen, databaseUnavailable, emptyNavigateUri, emptyWindowError, failedToParseResponse, getRequestFailed, hashDoesNotContainKnownProperties, hashEmptyError, iframeClosedPrematurely, interactionInProgress, invalidBase64String, invalidCacheType, monitorPopupTimeout, monitorWindowTimeout, nativeConnectionNotEstablished, nativeExtensionNotInstalled, nativeHandshakeTimeout, nativePromptNotSupported, noAccountError, noCachedAuthorityError, noNetworkConnectivity, noStateInHash, noTokenRequestCacheError, nonBrowserEnvironment, pkceNotCreated, popupWindowError, postRequestFailed, redirectInIframe, silentLogoutUnsupported, silentPromptValueError, spaCodeAndNativeAccountIdPresent, stateInteractionTypeMismatch, unableToAcquireTokenFromNativePlatform, unableToLoadToken, unableToParseState, unableToParseTokenRequestCacheError, uninitializedPublicClientApplication, userCancelled };\n//# sourceMappingURL=BrowserAuthErrorCodes.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { AuthError } from '@azure/msal-common';\nimport { storageNotSupported, stubbedPublicClientApplicationCalled, inMemRedirectUnavailable } from './BrowserConfigurationAuthErrorCodes.mjs';\nimport * as BrowserConfigurationAuthErrorCodes from './BrowserConfigurationAuthErrorCodes.mjs';\nexport { BrowserConfigurationAuthErrorCodes };\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst BrowserConfigurationAuthErrorMessages = {\n    [storageNotSupported]: \"Given storage configuration option was not supported.\",\n    [stubbedPublicClientApplicationCalled]: \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\",\n    [inMemRedirectUnavailable]: \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\",\n};\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use BrowserAuthErrorCodes instead\n */\nconst BrowserConfigurationAuthErrorMessage = {\n    storageNotSupportedError: {\n        code: storageNotSupported,\n        desc: BrowserConfigurationAuthErrorMessages[storageNotSupported],\n    },\n    stubPcaInstanceCalled: {\n        code: stubbedPublicClientApplicationCalled,\n        desc: BrowserConfigurationAuthErrorMessages[stubbedPublicClientApplicationCalled],\n    },\n    inMemRedirectUnavailable: {\n        code: inMemRedirectUnavailable,\n        desc: BrowserConfigurationAuthErrorMessages[inMemRedirectUnavailable],\n    },\n};\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nclass BrowserConfigurationAuthError extends AuthError {\n    constructor(errorCode, errorMessage) {\n        super(errorCode, errorMessage);\n        this.name = \"BrowserConfigurationAuthError\";\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\n    }\n}\nfunction createBrowserConfigurationAuthError(errorCode) {\n    return new BrowserConfigurationAuthError(errorCode, BrowserConfigurationAuthErrorMessages[errorCode]);\n}\n\nexport { BrowserConfigurationAuthError, BrowserConfigurationAuthErrorMessage, BrowserConfigurationAuthErrorMessages, createBrowserConfigurationAuthError };\n//# sourceMappingURL=BrowserConfigurationAuthError.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst storageNotSupported = \"storage_not_supported\";\nconst stubbedPublicClientApplicationCalled = \"stubbed_public_client_application_called\";\nconst inMemRedirectUnavailable = \"in_mem_redirect_unavailable\";\n\nexport { inMemRedirectUnavailable, storageNotSupported, stubbedPublicClientApplicationCalled };\n//# sourceMappingURL=BrowserConfigurationAuthErrorCodes.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { AccountEntity, CacheManager } from '@azure/msal-common';\nimport { EventType } from './EventType.mjs';\nimport { createNewGuid } from '../crypto/BrowserCrypto.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass EventHandler {\n    constructor(logger, browserCrypto) {\n        this.eventCallbacks = new Map();\n        this.logger = logger;\n        this.browserCrypto = browserCrypto;\n        this.listeningToStorageEvents = false;\n        this.handleAccountCacheChange =\n            this.handleAccountCacheChange.bind(this);\n    }\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback) {\n        if (typeof window !== \"undefined\") {\n            const callbackId = createNewGuid();\n            this.eventCallbacks.set(callbackId, callback);\n            this.logger.verbose(`Event callback registered with id: ${callbackId}`);\n            return callbackId;\n        }\n        return null;\n    }\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId) {\n        this.eventCallbacks.delete(callbackId);\n        this.logger.verbose(`Event callback ${callbackId} removed.`);\n    }\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents() {\n        if (typeof window === \"undefined\") {\n            return;\n        }\n        if (!this.listeningToStorageEvents) {\n            this.logger.verbose(\"Adding account storage listener.\");\n            this.listeningToStorageEvents = true;\n            window.addEventListener(\"storage\", this.handleAccountCacheChange);\n        }\n        else {\n            this.logger.verbose(\"Account storage listener already registered.\");\n        }\n    }\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents() {\n        if (typeof window === \"undefined\") {\n            return;\n        }\n        if (this.listeningToStorageEvents) {\n            this.logger.verbose(\"Removing account storage listener.\");\n            window.removeEventListener(\"storage\", this.handleAccountCacheChange);\n            this.listeningToStorageEvents = false;\n        }\n        else {\n            this.logger.verbose(\"No account storage listener registered.\");\n        }\n    }\n    /**\n     * Emits events by calling callback with event message\n     * @param eventType\n     * @param interactionType\n     * @param payload\n     * @param error\n     */\n    emitEvent(eventType, interactionType, payload, error) {\n        if (typeof window !== \"undefined\") {\n            const message = {\n                eventType: eventType,\n                interactionType: interactionType || null,\n                payload: payload || null,\n                error: error || null,\n                timestamp: Date.now(),\n            };\n            this.logger.info(`Emitting event: ${eventType}`);\n            this.eventCallbacks.forEach((callback, callbackId) => {\n                this.logger.verbose(`Emitting event to callback ${callbackId}: ${eventType}`);\n                callback.apply(null, [message]);\n            });\n        }\n    }\n    /**\n     * Emit account added/removed events when cached accounts are changed in a different tab or frame\n     */\n    handleAccountCacheChange(e) {\n        try {\n            const cacheValue = e.newValue || e.oldValue;\n            if (!cacheValue) {\n                return;\n            }\n            const parsedValue = JSON.parse(cacheValue);\n            if (typeof parsedValue !== \"object\" ||\n                !AccountEntity.isAccountEntity(parsedValue)) {\n                return;\n            }\n            const accountEntity = CacheManager.toObject(new AccountEntity(), parsedValue);\n            const accountInfo = accountEntity.getAccountInfo();\n            if (!e.oldValue && e.newValue) {\n                this.logger.info(\"Account was added to cache in a different window\");\n                this.emitEvent(EventType.ACCOUNT_ADDED, undefined, accountInfo);\n            }\n            else if (!e.newValue && e.oldValue) {\n                this.logger.info(\"Account was removed from cache in a different window\");\n                this.emitEvent(EventType.ACCOUNT_REMOVED, undefined, accountInfo);\n            }\n        }\n        catch (e) {\n            return;\n        }\n    }\n}\n\nexport { EventHandler };\n//# sourceMappingURL=EventHandler.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst EventType = {\n    INITIALIZE_START: \"msal:initializeStart\",\n    INITIALIZE_END: \"msal:initializeEnd\",\n    ACCOUNT_ADDED: \"msal:accountAdded\",\n    ACCOUNT_REMOVED: \"msal:accountRemoved\",\n    LOGIN_START: \"msal:loginStart\",\n    LOGIN_SUCCESS: \"msal:loginSuccess\",\n    LOGIN_FAILURE: \"msal:loginFailure\",\n    ACQUIRE_TOKEN_START: \"msal:acquireTokenStart\",\n    ACQUIRE_TOKEN_SUCCESS: \"msal:acquireTokenSuccess\",\n    ACQUIRE_TOKEN_FAILURE: \"msal:acquireTokenFailure\",\n    ACQUIRE_TOKEN_NETWORK_START: \"msal:acquireTokenFromNetworkStart\",\n    SSO_SILENT_START: \"msal:ssoSilentStart\",\n    SSO_SILENT_SUCCESS: \"msal:ssoSilentSuccess\",\n    SSO_SILENT_FAILURE: \"msal:ssoSilentFailure\",\n    ACQUIRE_TOKEN_BY_CODE_START: \"msal:acquireTokenByCodeStart\",\n    ACQUIRE_TOKEN_BY_CODE_SUCCESS: \"msal:acquireTokenByCodeSuccess\",\n    ACQUIRE_TOKEN_BY_CODE_FAILURE: \"msal:acquireTokenByCodeFailure\",\n    HANDLE_REDIRECT_START: \"msal:handleRedirectStart\",\n    HANDLE_REDIRECT_END: \"msal:handleRedirectEnd\",\n    POPUP_OPENED: \"msal:popupOpened\",\n    LOGOUT_START: \"msal:logoutStart\",\n    LOGOUT_SUCCESS: \"msal:logoutSuccess\",\n    LOGOUT_FAILURE: \"msal:logoutFailure\",\n    LOGOUT_END: \"msal:logoutEnd\",\n    RESTORE_FROM_BFCACHE: \"msal:restoreFromBFCache\",\n};\n\nexport { EventType };\n//# sourceMappingURL=EventType.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { Logger } from '@azure/msal-common';\nimport { buildConfiguration } from '../config/Configuration.mjs';\nimport { name, version } from '../packageMetadata.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Base class for operating context\n * Operating contexts are contexts in which MSAL.js is being run\n * More than one operating context may be available at a time\n * It's important from a logging and telemetry point of view for us to be able to identify the operating context.\n * For example: Some operating contexts will pre-cache tokens impacting performance telemetry\n */\nclass BaseOperatingContext {\n    constructor(config) {\n        /*\n         * If loaded in an environment where window is not available,\n         * set internal flag to false so that further requests fail.\n         * This is to support server-side rendering environments.\n         */\n        this.browserEnvironment = typeof window !== \"undefined\";\n        this.config = buildConfiguration(config, this.browserEnvironment);\n        this.logger = new Logger(this.config.system.loggerOptions, name, version);\n        this.available = false;\n    }\n    /**\n     * Return the MSAL config\n     * @returns BrowserConfiguration\n     */\n    getConfig() {\n        return this.config;\n    }\n    /**\n     * Returns the MSAL Logger\n     * @returns Logger\n     */\n    getLogger() {\n        return this.logger;\n    }\n    isAvailable() {\n        return this.available;\n    }\n    isBrowserEnvironment() {\n        return this.browserEnvironment;\n    }\n}\n\nexport { BaseOperatingContext };\n//# sourceMappingURL=BaseOperatingContext.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * BridgeProxy\n * Provides a proxy for accessing a bridge to a host app and/or\n * platform broker\n */\nclass BridgeProxy {\n    /**\n     * initializeNestedAppAuthBridge - Initializes the bridge to the host app\n     * @returns a promise that resolves to an InitializeBridgeResponse or rejects with an Error\n     * @remarks This method will be called by the create factory method\n     * @remarks If the bridge is not available, this method will throw an error\n     */\n    static async initializeNestedAppAuthBridge() {\n        if (window === undefined) {\n            throw new Error(\"window is undefined\");\n        }\n        if (window.nestedAppAuthBridge === undefined) {\n            throw new Error(\"window.nestedAppAuthBridge is undefined\");\n        }\n        if (window.crypto === undefined) {\n            throw new Error(\"window.crypto is undefined\");\n        }\n        try {\n            BridgeProxy.crypto = window.crypto;\n            window.nestedAppAuthBridge.addEventListener(\"message\", (response) => {\n                const responseEnvelope = JSON.parse(response);\n                const request = BridgeProxy.bridgeRequests.find((element) => element.requestId === responseEnvelope.requestId);\n                if (request !== undefined) {\n                    BridgeProxy.bridgeRequests.splice(BridgeProxy.bridgeRequests.indexOf(request), 1);\n                    if (responseEnvelope.success) {\n                        request.resolve(responseEnvelope.body);\n                    }\n                    else {\n                        request.reject(responseEnvelope.body);\n                    }\n                }\n            });\n            const promise = new Promise((resolve, reject) => {\n                const message = {\n                    messageType: \"NestedAppAuthRequest\",\n                    method: \"GetInitContext\",\n                    requestId: BridgeProxy.getRandomId(),\n                };\n                const request = {\n                    requestId: message.requestId,\n                    method: message.method,\n                    resolve: resolve,\n                    reject: reject,\n                };\n                BridgeProxy.bridgeRequests.push(request);\n                window.nestedAppAuthBridge.postMessage(JSON.stringify(message));\n            });\n            return promise;\n        }\n        catch (error) {\n            window.console.log(error);\n            throw error;\n        }\n    }\n    static getRandomId() {\n        return BridgeProxy.crypto.randomUUID();\n    }\n    /**\n     * getTokenInteractive - Attempts to get a token interactively from the bridge\n     * @param request A token request\n     * @returns a promise that resolves to a token response or rejects with a BridgeError\n     */\n    getTokenInteractive(request) {\n        return this.sendRequest(\"GetTokenPopup\", request);\n    }\n    /**\n     * getTokenSilent Attempts to get a token silently from the bridge\n     * @param request A token request\n     * @returns a promise that resolves to a token response or rejects with a BridgeError\n     */\n    getTokenSilent(request) {\n        return this.sendRequest(\"GetToken\", request);\n    }\n    /**\n     * getAccountInfo - Gets account information from the bridge\n     *\n     * @param request A request for account information\n     */\n    getAccountInfo(request) {\n        let method = \"GetAccountByHomeId\";\n        if (request.homeAccountId !== undefined) {\n            method = \"GetAccountByHomeId\";\n        }\n        if (request.localAccountId !== undefined) {\n            method = \"GetAccountByLocalId\";\n        }\n        if (request.username !== undefined) {\n            method = \"GetAccountByUsername\";\n        }\n        return this.sendRequest(method, request);\n    }\n    getActiveAccount() {\n        return this.sendRequest(\"GetActiveAccount\", undefined);\n    }\n    /**\n     * A method used to send a request to the bridge\n     * @param request A token request\n     * @returns a promise that resolves to a response of provided type or rejects with a BridgeError\n     */\n    sendRequest(method, request) {\n        const message = {\n            messageType: \"NestedAppAuthRequest\",\n            method: method,\n            requestId: BridgeProxy.getRandomId(),\n            body: request,\n        };\n        const promise = new Promise((resolve, reject) => {\n            const request = {\n                requestId: message.requestId,\n                method: message.method,\n                resolve: resolve,\n                reject: reject,\n            };\n            BridgeProxy.bridgeRequests.push(request);\n            window.nestedAppAuthBridge.postMessage(JSON.stringify(message));\n        });\n        return promise;\n    }\n    /**\n     * Private constructor for BridgeProxy\n     * @param sdkName The name of the SDK being used to make requests on behalf of the app\n     * @param sdkVersion The version of the SDK being used to make requests on behalf of the app\n     * @param capabilities The capabilities of the bridge / SDK / platform broker\n     */\n    constructor(sdkName, sdkVersion, capabilities) {\n        this.sdkName = sdkName;\n        this.sdkVersion = sdkVersion;\n        this.capabilities = capabilities;\n    }\n    /**\n     * Factory method for creating an implementation of IBridgeProxy\n     * @returns A promise that resolves to a BridgeProxy implementation\n     */\n    static async create() {\n        const response = await BridgeProxy.initializeNestedAppAuthBridge();\n        return new BridgeProxy(response.sdkName, response.sdkVersion, response.capabilities);\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nBridgeProxy.bridgeRequests = [];\n\nexport { BridgeProxy, BridgeProxy as default };\n//# sourceMappingURL=BridgeProxy.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { BaseOperatingContext } from './BaseOperatingContext.mjs';\nimport { BridgeProxy } from '../naa/BridgeProxy.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass TeamsAppOperatingContext extends BaseOperatingContext {\n    constructor() {\n        super(...arguments);\n        this.bridgeProxy = undefined;\n        this.activeAccount = undefined;\n    }\n    /**\n     * Return the module name.  Intended for use with import() to enable dynamic import\n     * of the implementation associated with this operating context\n     * @returns\n     */\n    getModuleName() {\n        return TeamsAppOperatingContext.MODULE_NAME;\n    }\n    /**\n     * Returns the unique identifier for this operating context\n     * @returns string\n     */\n    getId() {\n        return TeamsAppOperatingContext.ID;\n    }\n    getBridgeProxy() {\n        return this.bridgeProxy;\n    }\n    getActiveAccount() {\n        return this.activeAccount;\n    }\n    setActiveAccount(account) {\n        this.activeAccount = account;\n    }\n    /**\n     * Checks whether the operating context is available.\n     * Confirms that the code is running a browser rather.  This is required.\n     * @returns Promise<boolean> indicating whether this operating context is currently available.\n     */\n    async initialize() {\n        /*\n         * TODO: Add implementation to check for presence of inject Nested App Auth Bridge JavaScript interface\n         *\n         */\n        try {\n            if (typeof window !== \"undefined\") {\n                const bridgeProxy = await BridgeProxy.create();\n                /*\n                 * Because we want single sign on we need to attempt to\n                 * grab the active account as part of initialization\n                 * this.activeAccount = await bridgeProxy.getActiveAccount();\n                 */\n                try {\n                    this.activeAccount = await bridgeProxy.getActiveAccount();\n                }\n                catch (e) {\n                    this.activeAccount = undefined;\n                }\n                this.bridgeProxy = bridgeProxy;\n                this.available = bridgeProxy !== undefined;\n            }\n            else {\n                this.available = false;\n            }\n        }\n        catch (e) {\n            this.available = false;\n        }\n        finally {\n            return this.available;\n        }\n    }\n}\n/*\n * TODO: Once we have determine the bundling code return here to specify the name of the bundle\n * containing the implementation for this operating context\n */\nTeamsAppOperatingContext.MODULE_NAME = \"\";\n/**\n * Unique identifier for the operating context\n */\nTeamsAppOperatingContext.ID = \"TeamsAppOperatingContext\";\n\nexport { TeamsAppOperatingContext };\n//# sourceMappingURL=TeamsAppOperatingContext.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { BaseOperatingContext } from './BaseOperatingContext.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass StandardOperatingContext extends BaseOperatingContext {\n    /**\n     * Return the module name.  Intended for use with import() to enable dynamic import\n     * of the implementation associated with this operating context\n     * @returns\n     */\n    getModuleName() {\n        return StandardOperatingContext.MODULE_NAME;\n    }\n    /**\n     * Returns the unique identifier for this operating context\n     * @returns string\n     */\n    getId() {\n        return StandardOperatingContext.ID;\n    }\n    /**\n     * Checks whether the operating context is available.\n     * Confirms that the code is running a browser rather.  This is required.\n     * @returns Promise<boolean> indicating whether this operating context is currently available.\n     */\n    async initialize() {\n        this.available = typeof window !== \"undefined\";\n        return this.available;\n        /*\n         * NOTE: The standard context is available as long as there is a window.  If/when we split out WAM from Browser\n         * We can move the current contents of the initialize method to here and verify that the WAM extension is available\n         */\n    }\n}\n/*\n * TODO: Once we have determine the bundling code return here to specify the name of the bundle\n * containing the implementation for this operating context\n */\nStandardOperatingContext.MODULE_NAME = \"\";\n/**\n * Unique identifier for the operating context\n */\nStandardOperatingContext.ID = \"StandardOperatingContext\";\n\nexport { StandardOperatingContext };\n//# sourceMappingURL=StandardOperatingContext.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { TeamsAppOperatingContext } from '../operatingcontext/TeamsAppOperatingContext.mjs';\nimport { StandardOperatingContext } from '../operatingcontext/StandardOperatingContext.mjs';\nimport { Logger } from '@azure/msal-common';\nimport { name, version } from '../packageMetadata.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass ControllerFactory {\n    constructor(config) {\n        this.config = config;\n        const loggerOptions = {\n            loggerCallback: undefined,\n            piiLoggingEnabled: false,\n            logLevel: undefined,\n            correlationId: undefined,\n        };\n        this.logger = new Logger(loggerOptions, name, version);\n    }\n    async createV3Controller() {\n        const standard = new StandardOperatingContext(this.config);\n        await standard.initialize();\n        const controller = await import('./StandardController.mjs');\n        return await controller.StandardController.createController(standard);\n    }\n    async createController() {\n        const standard = new StandardOperatingContext(this.config);\n        const teamsApp = new TeamsAppOperatingContext(this.config);\n        const operatingContexts = [\n            standard.initialize(),\n            teamsApp.initialize(),\n        ];\n        await Promise.all(operatingContexts);\n        if (teamsApp.isAvailable() &&\n            teamsApp.getConfig().auth.supportsNestedAppAuth) {\n            const controller = await import('./NestedAppAuthController.mjs');\n            return await controller.NestedAppAuthController.createController(teamsApp);\n        }\n        else if (standard.isAvailable()) {\n            const controller = await import('./StandardController.mjs');\n            return await controller.StandardController.createController(standard);\n        }\n        else {\n            // Since neither of the actual operating contexts are available keep the UnknownOperatingContextController\n            return null;\n        }\n    }\n}\n\nexport { ControllerFactory };\n//# sourceMappingURL=ControllerFactory.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { ControllerFactory } from '../controllers/ControllerFactory.mjs';\nimport { StandardController } from '../controllers/StandardController.mjs';\nimport { StandardOperatingContext } from '../operatingcontext/StandardOperatingContext.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\n */\nclass PublicClientApplication {\n    static async createPublicClientApplication(configuration) {\n        const factory = new ControllerFactory(configuration);\n        const controller = await factory.createV3Controller();\n        const pca = new PublicClientApplication(configuration, controller);\n        return pca;\n    }\n    /**\n     * @constructor\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     * - redirect_uri: the uri of your application registered in the portal.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param configuration Object for the MSAL PublicClientApplication instance\n     * @param IController Optional parameter to explictly set the controller. (Will be removed when we remove public constructor)\n     */\n    constructor(configuration, controller) {\n        if (controller) {\n            this.controller = controller;\n        }\n        else {\n            const standardOperatingContext = new StandardOperatingContext(configuration);\n            this.controller = new StandardController(standardOperatingContext);\n        }\n    }\n    /**\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\n     */\n    async initialize() {\n        return this.controller.initialize();\n    }\n    /**\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async acquireTokenPopup(request) {\n        return this.controller.acquireTokenPopup(request);\n    }\n    /**\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\n     * the page, so any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    acquireTokenRedirect(request) {\n        return this.controller.acquireTokenRedirect(request);\n    }\n    /**\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\n     *\n     * @param {@link (SilentRequest:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthenticationResult} object\n     */\n    acquireTokenSilent(silentRequest) {\n        return this.controller.acquireTokenSilent(silentRequest);\n    }\n    /**\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\n     * This API is not indended for normal authorization code acquisition and redemption.\n     *\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\n     *\n     * @param request {@link AuthorizationCodeRequest}\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    acquireTokenByCode(request) {\n        return this.controller.acquireTokenByCode(request);\n    }\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback) {\n        return this.controller.addEventCallback(callback);\n    }\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId) {\n        return this.controller.removeEventCallback(callbackId);\n    }\n    /**\n     * Registers a callback to receive performance events.\n     *\n     * @param {PerformanceCallbackFunction} callback\n     * @returns {string}\n     */\n    addPerformanceCallback(callback) {\n        return this.controller.addPerformanceCallback(callback);\n    }\n    /**\n     * Removes a callback registered with addPerformanceCallback.\n     *\n     * @param {string} callbackId\n     * @returns {boolean}\n     */\n    removePerformanceCallback(callbackId) {\n        return this.controller.removePerformanceCallback(callbackId);\n    }\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents() {\n        this.controller.enableAccountStorageEvents();\n    }\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents() {\n        this.controller.disableAccountStorageEvents();\n    }\n    /**\n     * Returns the first account found in the cache that matches the account filter passed in.\n     * @param accountFilter\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\n     */\n    getAccount(accountFilter) {\n        return this.controller.getAccount(accountFilter);\n    }\n    /**\n     * Returns the signed in account matching homeAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param homeAccountId\n     * @returns The account object stored in MSAL\n     * @deprecated - Use getAccount instead\n     */\n    getAccountByHomeId(homeAccountId) {\n        return this.controller.getAccountByHomeId(homeAccountId);\n    }\n    /**\n     * Returns the signed in account matching localAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param localAccountId\n     * @returns The account object stored in MSAL\n     * @deprecated - Use getAccount instead\n     */\n    getAccountByLocalId(localId) {\n        return this.controller.getAccountByLocalId(localId);\n    }\n    /**\n     * Returns the signed in account matching username.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found.\n     * This API is provided for convenience but getAccountById should be used for best reliability\n     * @param userName\n     * @returns The account object stored in MSAL\n     * @deprecated - Use getAccount instead\n     */\n    getAccountByUsername(userName) {\n        return this.controller.getAccountByUsername(userName);\n    }\n    /**\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\n     * @returns Array of AccountInfo objects in cache\n     */\n    getAllAccounts(accountFilter) {\n        return this.controller.getAllAccounts(accountFilter);\n    }\n    /**\n     * Event handler function which allows users to fire events after the PublicClientApplication object\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\n     * auth flows.\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\n     */\n    handleRedirectPromise(hash) {\n        return this.controller.handleRedirectPromise(hash);\n    }\n    /**\n     * Use when initiating the login process via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    loginPopup(request) {\n        return this.controller.loginPopup(request);\n    }\n    /**\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\n     * any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    loginRedirect(request) {\n        return this.controller.loginRedirect(request);\n    }\n    /**\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\n     * @param logoutRequest\n     * @deprecated\n     */\n    logout(logoutRequest) {\n        return this.controller.logout(logoutRequest);\n    }\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    logoutRedirect(logoutRequest) {\n        return this.controller.logoutRedirect(logoutRequest);\n    }\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logoutPopup(logoutRequest) {\n        return this.controller.logoutPopup(logoutRequest);\n    }\n    /**\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\n     * - Any browser using a form of Intelligent Tracking Prevention\n     * - If there is not an established session with the service\n     *\n     * In these cases, the request must be done inside a popup or full frame redirect.\n     *\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\n     *\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\n     * you session on the server still exists.\n     * @param request {@link SsoSilentRequest}\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    ssoSilent(request) {\n        return this.controller.ssoSilent(request);\n    }\n    /**\n     * Gets the token cache for the application.\n     */\n    getTokenCache() {\n        return this.controller.getTokenCache();\n    }\n    /**\n     * Returns the logger instance\n     */\n    getLogger() {\n        return this.controller.getLogger();\n    }\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger Logger instance\n     */\n    setLogger(logger) {\n        this.controller.setLogger(logger);\n    }\n    /**\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\n     * @param account\n     */\n    setActiveAccount(account) {\n        this.controller.setActiveAccount(account);\n    }\n    /**\n     * Gets the currently active account\n     */\n    getActiveAccount() {\n        return this.controller.getActiveAccount();\n    }\n    /**\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\n     * @param sku\n     * @param version\n     */\n    initializeWrapperLibrary(sku, version) {\n        return this.controller.initializeWrapperLibrary(sku, version);\n    }\n    /**\n     * Sets navigation client\n     * @param navigationClient\n     */\n    setNavigationClient(navigationClient) {\n        this.controller.setNavigationClient(navigationClient);\n    }\n    /**\n     * Returns the configuration object\n     * @internal\n     */\n    getConfiguration() {\n        return this.controller.getConfiguration();\n    }\n    /**\n     * Hydrates cache with the tokens and account in the AuthenticationResult object\n     * @param result\n     * @param request - The request object that was used to obtain the AuthenticationResult\n     * @returns\n     */\n    async hydrateCache(result, request) {\n        return this.controller.hydrateCache(result, request);\n    }\n    /**\n     * Clears tokens and account from the browser cache.\n     * @param logoutRequest\n     */\n    clearCache(logoutRequest) {\n        return this.controller.clearCache(logoutRequest);\n    }\n}\n\nexport { PublicClientApplication };\n//# sourceMappingURL=PublicClientApplication.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { DEFAULT_CRYPTO_IMPLEMENTATION } from '@azure/msal-common';\nimport { BrowserCacheManager, DEFAULT_BROWSER_CACHE_MANAGER } from '../cache/BrowserCacheManager.mjs';\nimport { CryptoOps } from '../crypto/CryptoOps.mjs';\nimport { blockAPICallsBeforeInitialize, blockNonBrowserEnvironment } from '../utils/BrowserUtils.mjs';\nimport { EventHandler } from '../event/EventHandler.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * UnknownOperatingContextController class\n *\n * - Until initialize method is called, this controller is the default\n * - AFter initialize method is called, this controller will be swapped out for the appropriate controller\n * if the operating context can be determined; otherwise this controller will continued be used\n *\n * - Why do we have this?  We don't want to dynamically import (download) all of the code in StandardController if we don't need to.\n *\n * - Only includes implementation for getAccounts and handleRedirectPromise\n *   - All other methods are will throw initialization error (because either initialize method or the factory method were not used)\n *   - This controller is necessary for React Native wrapper, server side rendering and any other scenario where we don't have a DOM\n *\n */\nclass UnknownOperatingContextController {\n    constructor(operatingContext) {\n        // Flag representing whether or not the initialize API has been called and completed\n        this.initialized = false;\n        this.operatingContext = operatingContext;\n        this.isBrowserEnvironment =\n            this.operatingContext.isBrowserEnvironment();\n        this.config = operatingContext.getConfig();\n        this.logger = operatingContext.getLogger();\n        // Initialize performance client\n        this.performanceClient = this.config.telemetry.client;\n        // Initialize the crypto class.\n        this.browserCrypto = this.isBrowserEnvironment\n            ? new CryptoOps(this.logger, this.performanceClient)\n            : DEFAULT_CRYPTO_IMPLEMENTATION;\n        // Initialize the browser storage class.\n        this.browserStorage = this.isBrowserEnvironment\n            ? new BrowserCacheManager(this.config.auth.clientId, this.config.cache, this.browserCrypto, this.logger)\n            : DEFAULT_BROWSER_CACHE_MANAGER(this.config.auth.clientId, this.logger);\n        this.eventHandler = new EventHandler(this.logger, this.browserCrypto);\n    }\n    getBrowserStorage() {\n        return this.browserStorage;\n    }\n    getEventHandler() {\n        return this.eventHandler;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    getAccount(accountFilter) {\n        return null;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    getAccountByHomeId(homeAccountId) {\n        return null;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    getAccountByLocalId(localAccountId) {\n        return null;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    getAccountByUsername(username) {\n        return null;\n    }\n    getAllAccounts() {\n        return [];\n    }\n    initialize() {\n        this.initialized = true;\n        return Promise.resolve();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    acquireTokenPopup(request) {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        return {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    acquireTokenRedirect(request) {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        return Promise.resolve();\n    }\n    acquireTokenSilent(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    silentRequest) {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        return {};\n    }\n    acquireTokenByCode(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    request) {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        return {};\n    }\n    acquireTokenNative(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    request, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    apiId, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    accountId) {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        return {};\n    }\n    acquireTokenByRefreshToken(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    commonRequest, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    silentRequest) {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        return {};\n    }\n    addEventCallback(callback) {\n        return this.eventHandler.addEventCallback(callback);\n    }\n    removeEventCallback(callbackId) {\n        this.eventHandler.removeEventCallback(callbackId);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    addPerformanceCallback(callback) {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        return \"\";\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    removePerformanceCallback(callbackId) {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        return true;\n    }\n    enableAccountStorageEvents() {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n    }\n    disableAccountStorageEvents() {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n    }\n    handleRedirectPromise(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    hash) {\n        blockAPICallsBeforeInitialize(this.initialized);\n        return Promise.resolve(null);\n    }\n    loginPopup(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    request) {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        return {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    loginRedirect(request) {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        return {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    logout(logoutRequest) {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        return {};\n    }\n    logoutRedirect(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    logoutRequest) {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        return {};\n    }\n    logoutPopup(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    logoutRequest) {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        return {};\n    }\n    ssoSilent(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    request) {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        return {};\n    }\n    getTokenCache() {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        return {};\n    }\n    getLogger() {\n        return this.logger;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setLogger(logger) {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setActiveAccount(account) {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n    }\n    getActiveAccount() {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        return null;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    initializeWrapperLibrary(sku, version) {\n        this.browserStorage.setWrapperMetadata(sku, version);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setNavigationClient(navigationClient) {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n    }\n    getConfiguration() {\n        return this.config;\n    }\n    isBrowserEnv() {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        return true;\n    }\n    getBrowserCrypto() {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        return {};\n    }\n    getPerformanceClient() {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        return {};\n    }\n    getRedirectResponse() {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        return {};\n    }\n    preflightBrowserEnvironmentCheck(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    interactionType, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isAppEmbedded) {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async clearCache(logoutRequest) {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async hydrateCache(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    result, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    request) {\n        blockAPICallsBeforeInitialize(this.initialized);\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n    }\n}\n\nexport { UnknownOperatingContextController };\n//# sourceMappingURL=UnknownOperatingContextController.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { BaseOperatingContext } from './BaseOperatingContext.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass UnknownOperatingContext extends BaseOperatingContext {\n    /**\n     * Return the module name.  Intended for use with import() to enable dynamic import\n     * of the implementation associated with this operating context\n     * @returns\n     */\n    getModuleName() {\n        return UnknownOperatingContext.MODULE_NAME;\n    }\n    /**\n     * Returns the unique identifier for this operating context\n     * @returns string\n     */\n    getId() {\n        return UnknownOperatingContext.ID;\n    }\n    /**\n     * Checks whether the operating context is available.\n     * Confirms that the code is running a browser rather.  This is required.\n     * @returns Promise<boolean> indicating whether this operating context is currently available.\n     */\n    async initialize() {\n        /**\n         * This operating context is in use when we have not checked for what the operating context is.\n         * The context is unknown until we check it.\n         */\n        return true;\n    }\n}\n/*\n * TODO: Once we have determine the bundling code return here to specify the name of the bundle\n * containing the implementation for this operating context\n */\nUnknownOperatingContext.MODULE_NAME = \"\";\n/**\n * Unique identifier for the operating context\n */\nUnknownOperatingContext.ID = \"UnknownOperatingContext\";\n\nexport { UnknownOperatingContext };\n//# sourceMappingURL=UnknownOperatingContext.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { ControllerFactory } from '../controllers/ControllerFactory.mjs';\nimport { UnknownOperatingContextController } from '../controllers/UnknownOperatingContextController.mjs';\nimport { UnknownOperatingContext } from '../operatingcontext/UnknownOperatingContext.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * PublicClientNext is an early look at the planned implementation of PublicClientApplication in the next major version of MSAL.js.\n * It contains support for multiple API implementations based on the runtime environment that it is running in.\n *\n * The goals of these changes are to provide a clean separation of behavior between different operating contexts (Nested App Auth, Platform Brokers, Plain old Browser, etc.)\n * while still providing a consistent API surface for developers.\n *\n */\nclass PublicClientNext {\n    static async createPublicClientApplication(configuration) {\n        const factory = new ControllerFactory(configuration);\n        const controller = await factory.createController();\n        let pca;\n        if (controller !== null) {\n            pca = new PublicClientNext(configuration, controller);\n        }\n        else {\n            pca = new PublicClientNext(configuration);\n        }\n        return pca;\n    }\n    /**\n     * @constructor\n     * Constructor for the PublicClientNext used to instantiate the PublicClientNext object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     * - redirect_uri: the uri of your application registered in the portal.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param configuration Object for the MSAL PublicClientApplication instance\n     * @param IController Optional parameter to explictly set the controller. (Will be removed when we remove public constructor)\n     */\n    constructor(configuration, controller) {\n        this.configuration = configuration;\n        if (controller) {\n            this.controller = controller;\n        }\n        else {\n            const operatingContext = new UnknownOperatingContext(configuration);\n            this.controller = new UnknownOperatingContextController(operatingContext);\n        }\n    }\n    /**\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\n     */\n    async initialize() {\n        if (this.controller instanceof UnknownOperatingContextController) {\n            const factory = new ControllerFactory(this.configuration);\n            const result = await factory.createController();\n            if (result !== null) {\n                this.controller = result;\n            }\n            return this.controller.initialize();\n        }\n        return Promise.resolve();\n    }\n    /**\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async acquireTokenPopup(request) {\n        return this.controller.acquireTokenPopup(request);\n    }\n    /**\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\n     * the page, so any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    acquireTokenRedirect(request) {\n        return this.controller.acquireTokenRedirect(request);\n    }\n    /**\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\n     *\n     * @param {@link (SilentRequest:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthenticationResult} object\n     */\n    acquireTokenSilent(silentRequest) {\n        return this.controller.acquireTokenSilent(silentRequest);\n    }\n    /**\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\n     * This API is not indended for normal authorization code acquisition and redemption.\n     *\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\n     *\n     * @param request {@link AuthorizationCodeRequest}\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    acquireTokenByCode(request) {\n        return this.controller.acquireTokenByCode(request);\n    }\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback) {\n        return this.controller.addEventCallback(callback);\n    }\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId) {\n        return this.controller.removeEventCallback(callbackId);\n    }\n    /**\n     * Registers a callback to receive performance events.\n     *\n     * @param {PerformanceCallbackFunction} callback\n     * @returns {string}\n     */\n    addPerformanceCallback(callback) {\n        return this.controller.addPerformanceCallback(callback);\n    }\n    /**\n     * Removes a callback registered with addPerformanceCallback.\n     *\n     * @param {string} callbackId\n     * @returns {boolean}\n     */\n    removePerformanceCallback(callbackId) {\n        return this.controller.removePerformanceCallback(callbackId);\n    }\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents() {\n        this.controller.enableAccountStorageEvents();\n    }\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents() {\n        this.controller.disableAccountStorageEvents();\n    }\n    /**\n     * Returns the first account found in the cache that matches the account filter passed in.\n     * @param accountFilter\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\n     */\n    getAccount(accountFilter) {\n        return this.controller.getAccount(accountFilter);\n    }\n    /**\n     * Returns the signed in account matching homeAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param homeAccountId\n     * @returns The account object stored in MSAL\n     * @deprecated - Use getAccount instead\n     */\n    getAccountByHomeId(homeAccountId) {\n        return this.controller.getAccountByHomeId(homeAccountId);\n    }\n    /**\n     * Returns the signed in account matching localAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param localAccountId\n     * @returns The account object stored in MSAL\n     * @deprecated - Use getAccount instead\n     */\n    getAccountByLocalId(localId) {\n        return this.controller.getAccountByLocalId(localId);\n    }\n    /**\n     * Returns the signed in account matching username.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found.\n     * This API is provided for convenience but getAccountById should be used for best reliability\n     * @param userName\n     * @returns The account object stored in MSAL\n     * @deprecated - Use getAccount instead\n     */\n    getAccountByUsername(userName) {\n        return this.controller.getAccountByUsername(userName);\n    }\n    /**\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\n     * @returns Array of AccountInfo objects in cache\n     */\n    getAllAccounts(accountFilter) {\n        return this.controller.getAllAccounts(accountFilter);\n    }\n    /**\n     * Event handler function which allows users to fire events after the PublicClientApplication object\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\n     * auth flows.\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\n     */\n    handleRedirectPromise(hash) {\n        return this.controller.handleRedirectPromise(hash);\n    }\n    /**\n     * Use when initiating the login process via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    loginPopup(request) {\n        return this.controller.loginPopup(request);\n    }\n    /**\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\n     * any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    loginRedirect(request) {\n        return this.controller.loginRedirect(request);\n    }\n    /**\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\n     * @param logoutRequest\n     * @deprecated\n     */\n    logout(logoutRequest) {\n        return this.controller.logout(logoutRequest);\n    }\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    logoutRedirect(logoutRequest) {\n        return this.controller.logoutRedirect(logoutRequest);\n    }\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logoutPopup(logoutRequest) {\n        return this.controller.logoutPopup(logoutRequest);\n    }\n    /**\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\n     * - Any browser using a form of Intelligent Tracking Prevention\n     * - If there is not an established session with the service\n     *\n     * In these cases, the request must be done inside a popup or full frame redirect.\n     *\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\n     *\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\n     * you session on the server still exists.\n     * @param request {@link SsoSilentRequest}\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    ssoSilent(request) {\n        return this.controller.ssoSilent(request);\n    }\n    /**\n     * Gets the token cache for the application.\n     */\n    getTokenCache() {\n        return this.controller.getTokenCache();\n    }\n    /**\n     * Returns the logger instance\n     */\n    getLogger() {\n        return this.controller.getLogger();\n    }\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger Logger instance\n     */\n    setLogger(logger) {\n        this.controller.setLogger(logger);\n    }\n    /**\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\n     * @param account\n     */\n    setActiveAccount(account) {\n        this.controller.setActiveAccount(account);\n    }\n    /**\n     * Gets the currently active account\n     */\n    getActiveAccount() {\n        return this.controller.getActiveAccount();\n    }\n    /**\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\n     * @param sku\n     * @param version\n     */\n    initializeWrapperLibrary(sku, version) {\n        return this.controller.initializeWrapperLibrary(sku, version);\n    }\n    /**\n     * Sets navigation client\n     * @param navigationClient\n     */\n    setNavigationClient(navigationClient) {\n        this.controller.setNavigationClient(navigationClient);\n    }\n    /**\n     * Returns the configuration object\n     * @internal\n     */\n    getConfiguration() {\n        return this.controller.getConfiguration();\n    }\n    /**\n     * Hydrates cache with the tokens and account in the AuthenticationResult object\n     * @param result\n     * @param request - The request object that was used to obtain the AuthenticationResult\n     * @returns\n     */\n    async hydrateCache(result, request) {\n        return this.controller.hydrateCache(result, request);\n    }\n    /**\n     * Clears tokens and account from the browser cache.\n     * @param logoutRequest\n     */\n    clearCache(logoutRequest) {\n        return this.controller.clearCache(logoutRequest);\n    }\n}\n\nexport { PublicClientNext };\n//# sourceMappingURL=PublicClientNext.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { createBrowserConfigurationAuthError } from '../error/BrowserConfigurationAuthError.mjs';\nimport { stubbedPublicClientApplicationCalled } from '../error/BrowserConfigurationAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst stubbedPublicClientApplication = {\n    initialize: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    acquireTokenPopup: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    acquireTokenRedirect: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    acquireTokenSilent: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    acquireTokenByCode: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    getAllAccounts: () => {\n        return [];\n    },\n    getAccountByHomeId: () => {\n        return null;\n    },\n    getAccountByUsername: () => {\n        return null;\n    },\n    getAccountByLocalId: () => {\n        return null;\n    },\n    handleRedirectPromise: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    loginPopup: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    loginRedirect: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    logout: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    logoutRedirect: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    logoutPopup: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    ssoSilent: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    addEventCallback: () => {\n        return null;\n    },\n    removeEventCallback: () => {\n        return;\n    },\n    addPerformanceCallback: () => {\n        return \"\";\n    },\n    removePerformanceCallback: () => {\n        return false;\n    },\n    enableAccountStorageEvents: () => {\n        return;\n    },\n    disableAccountStorageEvents: () => {\n        return;\n    },\n    getTokenCache: () => {\n        throw createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled);\n    },\n    getLogger: () => {\n        throw createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled);\n    },\n    setLogger: () => {\n        return;\n    },\n    setActiveAccount: () => {\n        return;\n    },\n    getActiveAccount: () => {\n        return null;\n    },\n    initializeWrapperLibrary: () => {\n        return;\n    },\n    setNavigationClient: () => {\n        return;\n    },\n    getConfiguration: () => {\n        throw createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled);\n    },\n    hydrateCache: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    clearCache: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n};\n\nexport { stubbedPublicClientApplication };\n//# sourceMappingURL=IPublicClientApplication.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { EventType } from './EventType.mjs';\nimport { InteractionType, InteractionStatus } from '../utils/BrowserConstants.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass EventMessageUtils {\n    /**\n     * Gets interaction status from event message\n     * @param message\n     * @param currentStatus\n     */\n    static getInteractionStatusFromEvent(message, currentStatus) {\n        switch (message.eventType) {\n            case EventType.LOGIN_START:\n                return InteractionStatus.Login;\n            case EventType.SSO_SILENT_START:\n                return InteractionStatus.SsoSilent;\n            case EventType.ACQUIRE_TOKEN_START:\n                if (message.interactionType === InteractionType.Redirect ||\n                    message.interactionType === InteractionType.Popup) {\n                    return InteractionStatus.AcquireToken;\n                }\n                break;\n            case EventType.HANDLE_REDIRECT_START:\n                return InteractionStatus.HandleRedirect;\n            case EventType.LOGOUT_START:\n                return InteractionStatus.Logout;\n            case EventType.SSO_SILENT_SUCCESS:\n            case EventType.SSO_SILENT_FAILURE:\n                if (currentStatus &&\n                    currentStatus !== InteractionStatus.SsoSilent) {\n                    // Prevent this event from clearing any status other than ssoSilent\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.LOGOUT_END:\n                if (currentStatus &&\n                    currentStatus !== InteractionStatus.Logout) {\n                    // Prevent this event from clearing any status other than logout\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.HANDLE_REDIRECT_END:\n                if (currentStatus &&\n                    currentStatus !== InteractionStatus.HandleRedirect) {\n                    // Prevent this event from clearing any status other than handleRedirect\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.LOGIN_SUCCESS:\n            case EventType.LOGIN_FAILURE:\n            case EventType.ACQUIRE_TOKEN_SUCCESS:\n            case EventType.ACQUIRE_TOKEN_FAILURE:\n            case EventType.RESTORE_FROM_BFCACHE:\n                if (message.interactionType === InteractionType.Redirect ||\n                    message.interactionType === InteractionType.Popup) {\n                    if (currentStatus &&\n                        currentStatus !== InteractionStatus.Login &&\n                        currentStatus !== InteractionStatus.AcquireToken) {\n                        // Prevent this event from clearing any status other than login or acquireToken\n                        break;\n                    }\n                    return InteractionStatus.None;\n                }\n                break;\n        }\n        return null;\n    }\n}\n\nexport { EventMessageUtils };\n//# sourceMappingURL=EventMessage.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { CryptoOps } from './CryptoOps.mjs';\nimport { Logger, PopTokenGenerator } from '@azure/msal-common';\nimport { name, version } from '../packageMetadata.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SignedHttpRequest {\n    constructor(shrParameters, shrOptions) {\n        const loggerOptions = (shrOptions && shrOptions.loggerOptions) || {};\n        this.logger = new Logger(loggerOptions, name, version);\n        this.cryptoOps = new CryptoOps(this.logger);\n        this.popTokenGenerator = new PopTokenGenerator(this.cryptoOps);\n        this.shrParameters = shrParameters;\n    }\n    /**\n     * Generates and caches a keypair for the given request options.\n     * @returns Public key digest, which should be sent to the token issuer.\n     */\n    async generatePublicKeyThumbprint() {\n        const { kid } = await this.popTokenGenerator.generateKid(this.shrParameters);\n        return kid;\n    }\n    /**\n     * Generates a signed http request for the given payload with the given key.\n     * @param payload Payload to sign (e.g. access token)\n     * @param publicKeyThumbprint Public key digest (from generatePublicKeyThumbprint API)\n     * @param claims Additional claims to include/override in the signed JWT\n     * @returns Pop token signed with the corresponding private key\n     */\n    async signRequest(payload, publicKeyThumbprint, claims) {\n        return this.popTokenGenerator.signPayload(payload, publicKeyThumbprint, this.shrParameters, claims);\n    }\n    /**\n     * Removes cached keys from browser for given public key thumbprint\n     * @param publicKeyThumbprint Public key digest (from generatePublicKeyThumbprint API)\n     * @returns If keys are properly deleted\n     */\n    async removeKeys(publicKeyThumbprint) {\n        return await this.cryptoOps.removeTokenBindingKey(publicKeyThumbprint);\n    }\n}\n\nexport { SignedHttpRequest };\n//# sourceMappingURL=SignedHttpRequest.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { IntFields, PerformanceEventStatus } from './PerformanceEvent.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass PerformanceClient {\n    /**\n     * Creates an instance of PerformanceClient,\n     * an abstract class containing core performance telemetry logic.\n     *\n     * @constructor\n     * @param {string} clientId Client ID of the application\n     * @param {string} authority Authority used by the application\n     * @param {Logger} logger Logger used by the application\n     * @param {string} libraryName Name of the library\n     * @param {string} libraryVersion Version of the library\n     * @param {ApplicationTelemetry} applicationTelemetry application name and version\n     * @param {Set<String>} intFields integer fields to be truncated\n     */\n    constructor(clientId, authority, logger, libraryName, libraryVersion, applicationTelemetry, intFields) {\n        this.authority = authority;\n        this.libraryName = libraryName;\n        this.libraryVersion = libraryVersion;\n        this.applicationTelemetry = applicationTelemetry;\n        this.clientId = clientId;\n        this.logger = logger;\n        this.callbacks = new Map();\n        this.eventsByCorrelationId = new Map();\n        this.queueMeasurements = new Map();\n        this.preQueueTimeByCorrelationId = new Map();\n        this.intFields = intFields || new Set();\n        for (const item of IntFields) {\n            this.intFields.add(item);\n        }\n    }\n    /**\n     * Starts and returns an platform-specific implementation of IPerformanceMeasurement.\n     * Note: this function can be changed to abstract at the next major version bump.\n     *\n     * @param {string} measureName\n     * @param {string} correlationId\n     * @returns {IPerformanceMeasurement}\n     */\n    startPerformanceMeasurement(measureName, // eslint-disable-line @typescript-eslint/no-unused-vars\n    correlationId // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        return {};\n    }\n    /**\n     * Gets map of pre-queue times by correlation Id\n     *\n     * @param {PerformanceEvents} eventName\n     * @param {string} correlationId\n     * @returns {number}\n     */\n    getPreQueueTime(eventName, correlationId) {\n        const preQueueEvent = this.preQueueTimeByCorrelationId.get(correlationId);\n        if (!preQueueEvent) {\n            this.logger.trace(`PerformanceClient.getPreQueueTime: no pre-queue times found for correlationId: ${correlationId}, unable to add queue measurement`);\n            return;\n        }\n        else if (preQueueEvent.name !== eventName) {\n            this.logger.trace(`PerformanceClient.getPreQueueTime: no pre-queue time found for ${eventName}, unable to add queue measurement`);\n            return;\n        }\n        return preQueueEvent.time;\n    }\n    /**\n     * Calculates the difference between current time and time when function was queued.\n     * Note: It is possible to have 0 as the queue time if the current time and the queued time was the same.\n     *\n     * @param {number} preQueueTime\n     * @param {number} currentTime\n     * @returns {number}\n     */\n    calculateQueuedTime(preQueueTime, currentTime) {\n        if (preQueueTime < 1) {\n            this.logger.trace(`PerformanceClient: preQueueTime should be a positive integer and not ${preQueueTime}`);\n            return 0;\n        }\n        if (currentTime < 1) {\n            this.logger.trace(`PerformanceClient: currentTime should be a positive integer and not ${currentTime}`);\n            return 0;\n        }\n        if (currentTime < preQueueTime) {\n            this.logger.trace(\"PerformanceClient: currentTime is less than preQueueTime, check how time is being retrieved\");\n            return 0;\n        }\n        return currentTime - preQueueTime;\n    }\n    /**\n     * Adds queue measurement time to QueueMeasurements array for given correlation ID.\n     *\n     * @param {PerformanceEvents} eventName\n     * @param {?string} correlationId\n     * @param {?number} queueTime\n     * @param {?boolean} manuallyCompleted - indicator for manually completed queue measurements\n     * @returns\n     */\n    addQueueMeasurement(eventName, correlationId, queueTime, manuallyCompleted) {\n        if (!correlationId) {\n            this.logger.trace(`PerformanceClient.addQueueMeasurement: correlationId not provided for ${eventName}, cannot add queue measurement`);\n            return;\n        }\n        if (queueTime === 0) {\n            // Possible for there to be no queue time after calculation\n            this.logger.trace(`PerformanceClient.addQueueMeasurement: queue time provided for ${eventName} is ${queueTime}`);\n        }\n        else if (!queueTime) {\n            this.logger.trace(`PerformanceClient.addQueueMeasurement: no queue time provided for ${eventName}`);\n            return;\n        }\n        const queueMeasurement = {\n            eventName,\n            // Always default queue time to 0 for manually completed (improperly instrumented)\n            queueTime: manuallyCompleted ? 0 : queueTime,\n            manuallyCompleted,\n        };\n        // Adds to existing correlation Id if present in queueMeasurements\n        const existingMeasurements = this.queueMeasurements.get(correlationId);\n        if (existingMeasurements) {\n            existingMeasurements.push(queueMeasurement);\n            this.queueMeasurements.set(correlationId, existingMeasurements);\n        }\n        else {\n            // Sets new correlation Id if not present in queueMeasurements\n            this.logger.trace(`PerformanceClient.addQueueMeasurement: adding correlationId ${correlationId} to queue measurements`);\n            const measurementArray = [queueMeasurement];\n            this.queueMeasurements.set(correlationId, measurementArray);\n        }\n        // Delete processed pre-queue event.\n        this.preQueueTimeByCorrelationId.delete(correlationId);\n    }\n    /**\n     * Starts measuring performance for a given operation. Returns a function that should be used to end the measurement.\n     *\n     * @param {PerformanceEvents} measureName\n     * @param {?string} [correlationId]\n     * @returns {InProgressPerformanceEvent}\n     */\n    startMeasurement(measureName, correlationId) {\n        // Generate a placeholder correlation if the request does not provide one\n        const eventCorrelationId = correlationId || this.generateId();\n        if (!correlationId) {\n            this.logger.info(`PerformanceClient: No correlation id provided for ${measureName}, generating`, eventCorrelationId);\n        }\n        this.logger.trace(`PerformanceClient: Performance measurement started for ${measureName}`, eventCorrelationId);\n        const performanceMeasurement = this.startPerformanceMeasurement(measureName, eventCorrelationId);\n        performanceMeasurement.startMeasurement();\n        const inProgressEvent = {\n            eventId: this.generateId(),\n            status: PerformanceEventStatus.InProgress,\n            authority: this.authority,\n            libraryName: this.libraryName,\n            libraryVersion: this.libraryVersion,\n            clientId: this.clientId,\n            name: measureName,\n            startTimeMs: Date.now(),\n            correlationId: eventCorrelationId,\n            appName: this.applicationTelemetry?.appName,\n            appVersion: this.applicationTelemetry?.appVersion,\n        };\n        // Store in progress events so they can be discarded if not ended properly\n        this.cacheEventByCorrelationId(inProgressEvent);\n        // Return the event and functions the caller can use to properly end/flush the measurement\n        return {\n            end: (event) => {\n                return this.endMeasurement({\n                    // Initial set of event properties\n                    ...inProgressEvent,\n                    // Properties set when event ends\n                    ...event,\n                }, performanceMeasurement);\n            },\n            discard: () => {\n                return this.discardMeasurements(inProgressEvent.correlationId);\n            },\n            add: (fields) => {\n                return this.addFields(fields, inProgressEvent.correlationId);\n            },\n            increment: (fields) => {\n                return this.incrementFields(fields, inProgressEvent.correlationId);\n            },\n            measurement: performanceMeasurement,\n            event: inProgressEvent,\n        };\n    }\n    /**\n     * Stops measuring the performance for an operation. Should only be called directly by PerformanceClient classes,\n     * as consumers should instead use the function returned by startMeasurement.\n     * Adds a new field named as \"[event name]DurationMs\" for sub-measurements, completes and emits an event\n     * otherwise.\n     *\n     * @param {PerformanceEvent} event\n     * @param {IPerformanceMeasurement} measurement\n     * @returns {(PerformanceEvent | null)}\n     */\n    endMeasurement(event, measurement) {\n        const rootEvent = this.eventsByCorrelationId.get(event.correlationId);\n        if (!rootEvent) {\n            this.logger.trace(`PerformanceClient: Measurement not found for ${event.eventId}`, event.correlationId);\n            return null;\n        }\n        const isRoot = event.eventId === rootEvent.eventId;\n        let queueInfo = {\n            totalQueueTime: 0,\n            totalQueueCount: 0,\n            manuallyCompletedCount: 0,\n        };\n        if (isRoot) {\n            queueInfo = this.getQueueInfo(event.correlationId);\n            this.discardCache(rootEvent.correlationId);\n        }\n        else {\n            rootEvent.incompleteSubMeasurements?.delete(event.eventId);\n        }\n        measurement?.endMeasurement();\n        const durationMs = measurement?.flushMeasurement();\n        // null indicates no measurement was taken (e.g. needed performance APIs not present)\n        if (!durationMs) {\n            this.logger.trace(\"PerformanceClient: Performance measurement not taken\", rootEvent.correlationId);\n            return null;\n        }\n        this.logger.trace(`PerformanceClient: Performance measurement ended for ${event.name}: ${durationMs} ms`, event.correlationId);\n        // Add sub-measurement attribute to root event.\n        if (!isRoot) {\n            rootEvent[event.name + \"DurationMs\"] = Math.floor(durationMs);\n            return { ...rootEvent };\n        }\n        let finalEvent = { ...rootEvent, ...event };\n        let incompleteSubsCount = 0;\n        // Incomplete sub-measurements are discarded. They are likely an instrumentation bug that should be fixed.\n        finalEvent.incompleteSubMeasurements?.forEach((subMeasurement) => {\n            this.logger.trace(`PerformanceClient: Incomplete submeasurement ${subMeasurement.name} found for ${event.name}`, finalEvent.correlationId);\n            incompleteSubsCount++;\n        });\n        finalEvent.incompleteSubMeasurements = undefined;\n        finalEvent = {\n            ...finalEvent,\n            durationMs: Math.round(durationMs),\n            queuedTimeMs: queueInfo.totalQueueTime,\n            queuedCount: queueInfo.totalQueueCount,\n            queuedManuallyCompletedCount: queueInfo.manuallyCompletedCount,\n            status: PerformanceEventStatus.Completed,\n            incompleteSubsCount,\n        };\n        this.truncateIntegralFields(finalEvent);\n        this.emitEvents([finalEvent], event.correlationId);\n        return finalEvent;\n    }\n    /**\n     * Saves extra information to be emitted when the measurements are flushed\n     * @param fields\n     * @param correlationId\n     */\n    addFields(fields, correlationId) {\n        this.logger.trace(\"PerformanceClient: Updating static fields\");\n        const event = this.eventsByCorrelationId.get(correlationId);\n        if (event) {\n            this.eventsByCorrelationId.set(correlationId, {\n                ...event,\n                ...fields,\n            });\n        }\n        else {\n            this.logger.trace(\"PerformanceClient: Event not found for\", correlationId);\n        }\n    }\n    /**\n     * Increment counters to be emitted when the measurements are flushed\n     * @param fields {string[]}\n     * @param correlationId {string} correlation identifier\n     */\n    incrementFields(fields, correlationId) {\n        this.logger.trace(\"PerformanceClient: Updating counters\");\n        const event = this.eventsByCorrelationId.get(correlationId);\n        if (event) {\n            for (const counter in fields) {\n                if (!event.hasOwnProperty(counter)) {\n                    event[counter] = 0;\n                }\n                else if (isNaN(Number(event[counter]))) {\n                    return;\n                }\n                event[counter] += fields[counter];\n            }\n        }\n        else {\n            this.logger.trace(\"PerformanceClient: Event not found for\", correlationId);\n        }\n    }\n    /**\n     * Upserts event into event cache.\n     * First key is the correlation id, second key is the event id.\n     * Allows for events to be grouped by correlation id,\n     * and to easily allow for properties on them to be updated.\n     *\n     * @private\n     * @param {PerformanceEvent} event\n     */\n    cacheEventByCorrelationId(event) {\n        const rootEvent = this.eventsByCorrelationId.get(event.correlationId);\n        if (rootEvent) {\n            this.logger.trace(`PerformanceClient: Performance measurement for ${event.name} added/updated`, event.correlationId);\n            rootEvent.incompleteSubMeasurements =\n                rootEvent.incompleteSubMeasurements || new Map();\n            rootEvent.incompleteSubMeasurements.set(event.eventId, {\n                name: event.name,\n                startTimeMs: event.startTimeMs,\n            });\n        }\n        else {\n            this.logger.trace(`PerformanceClient: Performance measurement for ${event.name} started`, event.correlationId);\n            this.eventsByCorrelationId.set(event.correlationId, { ...event });\n        }\n    }\n    getQueueInfo(correlationId) {\n        const queueMeasurementForCorrelationId = this.queueMeasurements.get(correlationId);\n        if (!queueMeasurementForCorrelationId) {\n            this.logger.trace(`PerformanceClient: no queue measurements found for for correlationId: ${correlationId}`);\n        }\n        let totalQueueTime = 0;\n        let totalQueueCount = 0;\n        let manuallyCompletedCount = 0;\n        queueMeasurementForCorrelationId?.forEach((measurement) => {\n            totalQueueTime += measurement.queueTime;\n            totalQueueCount++;\n            manuallyCompletedCount += measurement.manuallyCompleted ? 1 : 0;\n        });\n        return {\n            totalQueueTime,\n            totalQueueCount,\n            manuallyCompletedCount,\n        };\n    }\n    /**\n     * Removes measurements for a given correlation id.\n     *\n     * @param {string} correlationId\n     */\n    discardMeasurements(correlationId) {\n        this.logger.trace(\"PerformanceClient: Performance measurements discarded\", correlationId);\n        this.eventsByCorrelationId.delete(correlationId);\n    }\n    /**\n     * Removes cache for a given correlation id.\n     *\n     * @param {string} correlationId correlation identifier\n     */\n    discardCache(correlationId) {\n        this.discardMeasurements(correlationId);\n        this.logger.trace(\"PerformanceClient: QueueMeasurements discarded\", correlationId);\n        this.queueMeasurements.delete(correlationId);\n        this.logger.trace(\"PerformanceClient: Pre-queue times discarded\", correlationId);\n        this.preQueueTimeByCorrelationId.delete(correlationId);\n    }\n    /**\n     * Registers a callback function to receive performance events.\n     *\n     * @param {PerformanceCallbackFunction} callback\n     * @returns {string}\n     */\n    addPerformanceCallback(callback) {\n        const callbackId = this.generateId();\n        this.callbacks.set(callbackId, callback);\n        this.logger.verbose(`PerformanceClient: Performance callback registered with id: ${callbackId}`);\n        return callbackId;\n    }\n    /**\n     * Removes a callback registered with addPerformanceCallback.\n     *\n     * @param {string} callbackId\n     * @returns {boolean}\n     */\n    removePerformanceCallback(callbackId) {\n        const result = this.callbacks.delete(callbackId);\n        if (result) {\n            this.logger.verbose(`PerformanceClient: Performance callback ${callbackId} removed.`);\n        }\n        else {\n            this.logger.verbose(`PerformanceClient: Performance callback ${callbackId} not removed.`);\n        }\n        return result;\n    }\n    /**\n     * Emits events to all registered callbacks.\n     *\n     * @param {PerformanceEvent[]} events\n     * @param {?string} [correlationId]\n     */\n    emitEvents(events, correlationId) {\n        this.logger.verbose(\"PerformanceClient: Emitting performance events\", correlationId);\n        this.callbacks.forEach((callback, callbackId) => {\n            this.logger.trace(`PerformanceClient: Emitting event to callback ${callbackId}`, correlationId);\n            callback.apply(null, [events]);\n        });\n    }\n    /**\n     * Enforce truncation of integral fields in performance event.\n     * @param {PerformanceEvent} event performance event to update.\n     * @param {Set<string>} intFields integral fields.\n     */\n    truncateIntegralFields(event) {\n        this.intFields.forEach((key) => {\n            if (key in event && typeof event[key] === \"number\") {\n                event[key] = Math.floor(event[key]);\n            }\n        });\n    }\n}\n\nexport { PerformanceClient };\n//# sourceMappingURL=PerformanceClient.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass BrowserPerformanceMeasurement {\n    constructor(name, correlationId) {\n        this.correlationId = correlationId;\n        this.measureName = BrowserPerformanceMeasurement.makeMeasureName(name, correlationId);\n        this.startMark = BrowserPerformanceMeasurement.makeStartMark(name, correlationId);\n        this.endMark = BrowserPerformanceMeasurement.makeEndMark(name, correlationId);\n    }\n    static makeMeasureName(name, correlationId) {\n        return `msal.measure.${name}.${correlationId}`;\n    }\n    static makeStartMark(name, correlationId) {\n        return `msal.start.${name}.${correlationId}`;\n    }\n    static makeEndMark(name, correlationId) {\n        return `msal.end.${name}.${correlationId}`;\n    }\n    static supportsBrowserPerformance() {\n        return (typeof window !== \"undefined\" &&\n            typeof window.performance !== \"undefined\" &&\n            typeof window.performance.mark === \"function\" &&\n            typeof window.performance.measure === \"function\" &&\n            typeof window.performance.clearMarks === \"function\" &&\n            typeof window.performance.clearMeasures === \"function\" &&\n            typeof window.performance.getEntriesByName === \"function\");\n    }\n    /**\n     * Flush browser marks and measurements.\n     * @param {string} correlationId\n     * @param {SubMeasurement} measurements\n     */\n    static flushMeasurements(correlationId, measurements) {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                measurements.forEach((measurement) => {\n                    const measureName = BrowserPerformanceMeasurement.makeMeasureName(measurement.name, correlationId);\n                    const entriesForMeasurement = window.performance.getEntriesByName(measureName, \"measure\");\n                    if (entriesForMeasurement.length > 0) {\n                        window.performance.clearMeasures(measureName);\n                        window.performance.clearMarks(BrowserPerformanceMeasurement.makeStartMark(measureName, correlationId));\n                        window.performance.clearMarks(BrowserPerformanceMeasurement.makeEndMark(measureName, correlationId));\n                    }\n                });\n            }\n            catch (e) {\n                // Silently catch and return null\n            }\n        }\n    }\n    startMeasurement() {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                window.performance.mark(this.startMark);\n            }\n            catch (e) {\n                // Silently catch\n            }\n        }\n    }\n    endMeasurement() {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                window.performance.mark(this.endMark);\n                window.performance.measure(this.measureName, this.startMark, this.endMark);\n            }\n            catch (e) {\n                // Silently catch\n            }\n        }\n    }\n    flushMeasurement() {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                const entriesForMeasurement = window.performance.getEntriesByName(this.measureName, \"measure\");\n                if (entriesForMeasurement.length > 0) {\n                    const durationMs = entriesForMeasurement[0].duration;\n                    window.performance.clearMeasures(this.measureName);\n                    window.performance.clearMarks(this.startMark);\n                    window.performance.clearMarks(this.endMark);\n                    return durationMs;\n                }\n            }\n            catch (e) {\n                // Silently catch and return null\n            }\n        }\n        return null;\n    }\n}\n\nexport { BrowserPerformanceMeasurement };\n//# sourceMappingURL=BrowserPerformanceMeasurement.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { PerformanceClient, Constants, Logger } from '@azure/msal-common';\nimport { BrowserPerformanceMeasurement } from './BrowserPerformanceMeasurement.mjs';\nimport { name, version } from '../packageMetadata.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass BrowserPerformanceClient extends PerformanceClient {\n    constructor(configuration, intFields) {\n        super(configuration.auth.clientId, configuration.auth.authority || `${Constants.DEFAULT_AUTHORITY}`, new Logger(configuration.system?.loggerOptions || {}, name, version), name, version, configuration.telemetry?.application || {\n            appName: \"\",\n            appVersion: \"\",\n        }, intFields);\n    }\n    startPerformanceMeasurement(measureName, correlationId) {\n        return new BrowserPerformanceMeasurement(measureName, correlationId);\n    }\n    generateId() {\n        return window.crypto.randomUUID();\n    }\n    getPageVisibility() {\n        return document.visibilityState?.toString() || null;\n    }\n    deleteIncompleteSubMeasurements(inProgressEvent) {\n        const rootEvent = this.eventsByCorrelationId.get(inProgressEvent.event.correlationId);\n        const isRootEvent = rootEvent && rootEvent.eventId === inProgressEvent.event.eventId;\n        const incompleteMeasurements = [];\n        if (isRootEvent && rootEvent?.incompleteSubMeasurements) {\n            rootEvent.incompleteSubMeasurements.forEach((subMeasurement) => {\n                incompleteMeasurements.push({ ...subMeasurement });\n            });\n        }\n        // Clean up remaining marks for incomplete sub-measurements\n        if (incompleteMeasurements.length > 0) {\n            BrowserPerformanceMeasurement.flushMeasurements(inProgressEvent.event.correlationId, incompleteMeasurements);\n        }\n    }\n    supportsBrowserPerformanceNow() {\n        return (typeof window !== \"undefined\" &&\n            typeof window.performance !== \"undefined\" &&\n            typeof window.performance.now === \"function\");\n    }\n    /**\n     * Starts measuring performance for a given operation. Returns a function that should be used to end the measurement.\n     * Also captures browser page visibilityState.\n     *\n     * @param {PerformanceEvents} measureName\n     * @param {?string} [correlationId]\n     * @returns {((event?: Partial<PerformanceEvent>) => PerformanceEvent| null)}\n     */\n    startMeasurement(measureName, correlationId) {\n        // Capture page visibilityState and then invoke start/end measurement\n        const startPageVisibility = this.getPageVisibility();\n        const inProgressEvent = super.startMeasurement(measureName, correlationId);\n        return {\n            ...inProgressEvent,\n            end: (event) => {\n                const res = inProgressEvent.end({\n                    startPageVisibility,\n                    endPageVisibility: this.getPageVisibility(),\n                    ...event,\n                });\n                this.deleteIncompleteSubMeasurements(inProgressEvent);\n                return res;\n            },\n            discard: () => {\n                inProgressEvent.discard();\n                this.deleteIncompleteSubMeasurements(inProgressEvent);\n                inProgressEvent.measurement.flushMeasurement();\n            },\n        };\n    }\n    /**\n     * Adds pre-queue time to preQueueTimeByCorrelationId map.\n     * @param {PerformanceEvents} eventName\n     * @param {?string} correlationId\n     * @returns\n     */\n    setPreQueueTime(eventName, correlationId) {\n        if (!this.supportsBrowserPerformanceNow()) {\n            this.logger.trace(`BrowserPerformanceClient: window performance API not available, unable to set telemetry queue time for ${eventName}`);\n            return;\n        }\n        if (!correlationId) {\n            this.logger.trace(`BrowserPerformanceClient: correlationId for ${eventName} not provided, unable to set telemetry queue time`);\n            return;\n        }\n        const preQueueEvent = this.preQueueTimeByCorrelationId.get(correlationId);\n        /**\n         * Manually complete queue measurement if there is an incomplete pre-queue event.\n         * Incomplete pre-queue events are instrumentation bugs that should be fixed.\n         */\n        if (preQueueEvent) {\n            this.logger.trace(`BrowserPerformanceClient: Incomplete pre-queue ${preQueueEvent.name} found`, correlationId);\n            this.addQueueMeasurement(preQueueEvent.name, correlationId, undefined, true);\n        }\n        this.preQueueTimeByCorrelationId.set(correlationId, {\n            name: eventName,\n            time: window.performance.now(),\n        });\n    }\n    /**\n     * Calculates and adds queue time measurement for given performance event.\n     *\n     * @param {PerformanceEvents} eventName\n     * @param {?string} correlationId\n     * @param {?number} queueTime\n     * @param {?boolean} manuallyCompleted - indicator for manually completed queue measurements\n     * @returns\n     */\n    addQueueMeasurement(eventName, correlationId, queueTime, manuallyCompleted) {\n        if (!this.supportsBrowserPerformanceNow()) {\n            this.logger.trace(`BrowserPerformanceClient: window performance API not available, unable to add queue measurement for ${eventName}`);\n            return;\n        }\n        if (!correlationId) {\n            this.logger.trace(`BrowserPerformanceClient: correlationId for ${eventName} not provided, unable to add queue measurement`);\n            return;\n        }\n        const preQueueTime = super.getPreQueueTime(eventName, correlationId);\n        if (!preQueueTime) {\n            return;\n        }\n        const currentTime = window.performance.now();\n        const resQueueTime = queueTime || super.calculateQueuedTime(preQueueTime, currentTime);\n        return super.addQueueMeasurement(eventName, correlationId, resQueueTime, manuallyCompleted);\n    }\n}\n\nexport { BrowserPerformanceClient };\n//# sourceMappingURL=BrowserPerformanceClient.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { createClientConfigurationError } from '../error/ClientConfigurationError.mjs';\nimport { Constants, HeaderNames } from '../utils/Constants.mjs';\nimport { invalidAuthenticationHeader, missingNonceAuthenticationHeader } from '../error/ClientConfigurationErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This is a helper class that parses supported HTTP response authentication headers to extract and return\n * header challenge values that can be used outside the basic authorization flows.\n */\nclass AuthenticationHeaderParser {\n    constructor(headers) {\n        this.headers = headers;\n    }\n    /**\n     * This method parses the SHR nonce value out of either the Authentication-Info or WWW-Authenticate authentication headers.\n     * @returns\n     */\n    getShrNonce() {\n        // Attempt to parse nonce from Authentiacation-Info\n        const authenticationInfo = this.headers[HeaderNames.AuthenticationInfo];\n        if (authenticationInfo) {\n            const authenticationInfoChallenges = this.parseChallenges(authenticationInfo);\n            if (authenticationInfoChallenges.nextnonce) {\n                return authenticationInfoChallenges.nextnonce;\n            }\n            throw createClientConfigurationError(invalidAuthenticationHeader);\n        }\n        // Attempt to parse nonce from WWW-Authenticate\n        const wwwAuthenticate = this.headers[HeaderNames.WWWAuthenticate];\n        if (wwwAuthenticate) {\n            const wwwAuthenticateChallenges = this.parseChallenges(wwwAuthenticate);\n            if (wwwAuthenticateChallenges.nonce) {\n                return wwwAuthenticateChallenges.nonce;\n            }\n            throw createClientConfigurationError(invalidAuthenticationHeader);\n        }\n        // If neither header is present, throw missing headers error\n        throw createClientConfigurationError(missingNonceAuthenticationHeader);\n    }\n    /**\n     * Parses an HTTP header's challenge set into a key/value map.\n     * @param header\n     * @returns\n     */\n    parseChallenges(header) {\n        const schemeSeparator = header.indexOf(\" \");\n        const challenges = header.substr(schemeSeparator + 1).split(\",\");\n        const challengeMap = {};\n        challenges.forEach((challenge) => {\n            const [key, value] = challenge.split(\"=\");\n            // Remove escaped quotation marks (', \") from challenge string to keep only the challenge value\n            challengeMap[key] = unescape(value.replace(/['\"]+/g, Constants.EMPTY_STRING));\n        });\n        return challengeMap;\n    }\n}\n\nexport { AuthenticationHeaderParser };\n//# sourceMappingURL=AuthenticationHeaderParser.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass NavigationClient {\n    /**\n     * Navigates to other pages within the same web application\n     * @param url\n     * @param options\n     */\n    navigateInternal(url, options) {\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n    /**\n     * Navigates to other pages outside the web application i.e. the Identity Provider\n     * @param url\n     * @param options\n     */\n    navigateExternal(url, options) {\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n    /**\n     * Default navigation implementation invoked by the internal and external functions\n     * @param url\n     * @param options\n     */\n    static defaultNavigateWindow(url, options) {\n        if (options.noHistory) {\n            window.location.replace(url);\n        }\n        else {\n            window.location.assign(url);\n        }\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(true);\n            }, options.timeout);\n        });\n    }\n}\n\nexport { NavigationClient };\n//# sourceMappingURL=NavigationClient.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\n/* eslint-disable header/header */\nconst name = \"@azure/msal-browser\";\nconst version = \"3.3.0\";\n\nexport { name, version };\n//# sourceMappingURL=packageMetadata.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { OIDC_DEFAULT_SCOPES } from '@azure/msal-common';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Constants\n */\nconst BrowserConstants = {\n    /**\n     * Interaction in progress cache value\n     */\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\n    /**\n     * Invalid grant error code\n     */\n    INVALID_GRANT_ERROR: \"invalid_grant\",\n    /**\n     * Default popup window width\n     */\n    POPUP_WIDTH: 483,\n    /**\n     * Default popup window height\n     */\n    POPUP_HEIGHT: 600,\n    /**\n     * Name of the popup window starts with\n     */\n    POPUP_NAME_PREFIX: \"msal\",\n    /**\n     * Default popup monitor poll interval in milliseconds\n     */\n    DEFAULT_POLL_INTERVAL_MS: 30,\n    /**\n     * Msal-browser SKU\n     */\n    MSAL_SKU: \"msal.js.browser\",\n};\nconst NativeConstants = {\n    CHANNEL_ID: \"53ee284d-920a-4b59-9d30-a60315b26836\",\n    PREFERRED_EXTENSION_ID: \"ppnbnpeolgkicgegkbkbjmhlideopiji\",\n    MATS_TELEMETRY: \"MATS\",\n};\nconst NativeExtensionMethod = {\n    HandshakeRequest: \"Handshake\",\n    HandshakeResponse: \"HandshakeResponse\",\n    GetToken: \"GetToken\",\n    Response: \"Response\",\n};\nconst BrowserCacheLocation = {\n    LocalStorage: \"localStorage\",\n    SessionStorage: \"sessionStorage\",\n    MemoryStorage: \"memoryStorage\",\n};\n/**\n * HTTP Request types supported by MSAL.\n */\nconst HTTP_REQUEST_TYPE = {\n    GET: \"GET\",\n    POST: \"POST\",\n};\n/**\n * Temporary cache keys for MSAL, deleted after any request.\n */\nconst TemporaryCacheKeys = {\n    AUTHORITY: \"authority\",\n    ACQUIRE_TOKEN_ACCOUNT: \"acquireToken.account\",\n    SESSION_STATE: \"session.state\",\n    REQUEST_STATE: \"request.state\",\n    NONCE_IDTOKEN: \"nonce.id_token\",\n    ORIGIN_URI: \"request.origin\",\n    RENEW_STATUS: \"token.renew.status\",\n    URL_HASH: \"urlHash\",\n    REQUEST_PARAMS: \"request.params\",\n    SCOPES: \"scopes\",\n    INTERACTION_STATUS_KEY: \"interaction.status\",\n    CCS_CREDENTIAL: \"ccs.credential\",\n    CORRELATION_ID: \"request.correlationId\",\n    NATIVE_REQUEST: \"request.native\",\n    REDIRECT_CONTEXT: \"request.redirect.context\",\n};\nconst StaticCacheKeys = {\n    ACCOUNT_KEYS: \"msal.account.keys\",\n    TOKEN_KEYS: \"msal.token.keys\",\n};\n/**\n * Cache keys stored in-memory\n */\nconst InMemoryCacheKeys = {\n    WRAPPER_SKU: \"wrapper.sku\",\n    WRAPPER_VER: \"wrapper.version\",\n};\n/**\n * API Codes for Telemetry purposes.\n * Before adding a new code you must claim it in the MSAL Telemetry tracker as these number spaces are shared across all MSALs\n * 0-99 Silent Flow\n * 800-899 Auth Code Flow\n */\nconst ApiId = {\n    acquireTokenRedirect: 861,\n    acquireTokenPopup: 862,\n    ssoSilent: 863,\n    acquireTokenSilent_authCode: 864,\n    handleRedirectPromise: 865,\n    acquireTokenByCode: 866,\n    acquireTokenSilent_silentFlow: 61,\n    logout: 961,\n    logoutPopup: 962,\n};\n/*\n * Interaction type of the API - used for state and telemetry\n */\nvar InteractionType;\n(function (InteractionType) {\n    InteractionType[\"Redirect\"] = \"redirect\";\n    InteractionType[\"Popup\"] = \"popup\";\n    InteractionType[\"Silent\"] = \"silent\";\n    InteractionType[\"None\"] = \"none\";\n})(InteractionType || (InteractionType = {}));\n/**\n * Types of interaction currently in progress.\n * Used in events in wrapper libraries to invoke functions when certain interaction is in progress or all interactions are complete.\n */\nconst InteractionStatus = {\n    /**\n     * Initial status before interaction occurs\n     */\n    Startup: \"startup\",\n    /**\n     * Status set when all login calls occuring\n     */\n    Login: \"login\",\n    /**\n     * Status set when logout call occuring\n     */\n    Logout: \"logout\",\n    /**\n     * Status set for acquireToken calls\n     */\n    AcquireToken: \"acquireToken\",\n    /**\n     * Status set for ssoSilent calls\n     */\n    SsoSilent: \"ssoSilent\",\n    /**\n     * Status set when handleRedirect in progress\n     */\n    HandleRedirect: \"handleRedirect\",\n    /**\n     * Status set when interaction is complete\n     */\n    None: \"none\",\n};\nconst DEFAULT_REQUEST = {\n    scopes: OIDC_DEFAULT_SCOPES,\n};\n/**\n * JWK Key Format string (Type MUST be defined for window crypto APIs)\n */\nconst KEY_FORMAT_JWK = \"jwk\";\n// Supported wrapper SKUs\nconst WrapperSKU = {\n    React: \"@azure/msal-react\",\n    Angular: \"@azure/msal-angular\",\n};\n// DatabaseStorage Constants\nconst DB_NAME = \"msal.db\";\nconst DB_VERSION = 1;\nconst DB_TABLE_NAME = `${DB_NAME}.keys`;\nconst CacheLookupPolicy = {\n    /*\n     * acquireTokenSilent will attempt to retrieve an access token from the cache. If the access token is expired\n     * or cannot be found the refresh token will be used to acquire a new one. Finally, if the refresh token\n     * is expired acquireTokenSilent will attempt to acquire new access and refresh tokens.\n     */\n    Default: 0,\n    /*\n     * acquireTokenSilent will only look for access tokens in the cache. It will not attempt to renew access or\n     * refresh tokens.\n     */\n    AccessToken: 1,\n    /*\n     * acquireTokenSilent will attempt to retrieve an access token from the cache. If the access token is expired or\n     * cannot be found, the refresh token will be used to acquire a new one. If the refresh token is expired, it\n     * will not be renewed and acquireTokenSilent will fail.\n     */\n    AccessTokenAndRefreshToken: 2,\n    /*\n     * acquireTokenSilent will not attempt to retrieve access tokens from the cache and will instead attempt to\n     * exchange the cached refresh token for a new access token. If the refresh token is expired, it will not be\n     * renewed and acquireTokenSilent will fail.\n     */\n    RefreshToken: 3,\n    /*\n     * acquireTokenSilent will not look in the cache for the access token. It will go directly to network with the\n     * cached refresh token. If the refresh token is expired an attempt will be made to renew it. This is equivalent to\n     * setting \"forceRefresh: true\".\n     */\n    RefreshTokenAndNetwork: 4,\n    /*\n     * acquireTokenSilent will attempt to renew both access and refresh tokens. It will not look in the cache. This will\n     * always fail if 3rd party cookies are blocked by the browser.\n     */\n    Skip: 5,\n};\n\nexport { ApiId, BrowserCacheLocation, BrowserConstants, CacheLookupPolicy, DB_NAME, DB_TABLE_NAME, DB_VERSION, DEFAULT_REQUEST, HTTP_REQUEST_TYPE, InMemoryCacheKeys, InteractionStatus, InteractionType, KEY_FORMAT_JWK, NativeConstants, NativeExtensionMethod, StaticCacheKeys, TemporaryCacheKeys, WrapperSKU };\n//# sourceMappingURL=BrowserConstants.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { ProtocolUtils, createClientAuthError, ClientAuthErrorCodes, UrlString } from '@azure/msal-common';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass BrowserProtocolUtils {\n    /**\n     * Extracts the BrowserStateObject from the state string.\n     * @param browserCrypto\n     * @param state\n     */\n    static extractBrowserRequestState(browserCrypto, state) {\n        if (!state) {\n            return null;\n        }\n        try {\n            const requestStateObj = ProtocolUtils.parseRequestState(browserCrypto, state);\n            return requestStateObj.libraryState.meta;\n        }\n        catch (e) {\n            throw createClientAuthError(ClientAuthErrorCodes.invalidState);\n        }\n    }\n    /**\n     * Parses properties of server response from url hash\n     * @param locationHash Hash from url\n     */\n    static parseServerResponseFromHash(locationHash) {\n        if (!locationHash) {\n            return {};\n        }\n        const hashUrlString = new UrlString(locationHash);\n        return UrlString.getDeserializedHash(hashUrlString.getHash());\n    }\n}\n\nexport { BrowserProtocolUtils };\n//# sourceMappingURL=BrowserProtocolUtils.mjs.map\n","/*! @azure/msal-browser v3.3.0 2023-10-20 */\n'use strict';\nimport { UrlString } from '@azure/msal-common';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { BrowserConstants, InteractionType } from './BrowserConstants.mjs';\nimport { blockIframeReload, redirectInIframe, blockNestedPopups, nonBrowserEnvironment, uninitializedPublicClientApplication } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Clears hash from window url.\n */\nfunction clearHash(contentWindow) {\n    // Office.js sets history.replaceState to null\n    contentWindow.location.hash = \"\";\n    if (typeof contentWindow.history.replaceState === \"function\") {\n        // Full removes \"#\" from url\n        contentWindow.history.replaceState(null, \"\", `${contentWindow.location.origin}${contentWindow.location.pathname}${contentWindow.location.search}`);\n    }\n}\n/**\n * Replaces current hash with hash from provided url\n */\nfunction replaceHash(url) {\n    const urlParts = url.split(\"#\");\n    urlParts.shift(); // Remove part before the hash\n    window.location.hash = urlParts.length > 0 ? urlParts.join(\"#\") : \"\";\n}\n/**\n * Returns boolean of whether the current window is in an iframe or not.\n */\nfunction isInIframe() {\n    return window.parent !== window;\n}\n/**\n * Returns boolean of whether or not the current window is a popup opened by msal\n */\nfunction isInPopup() {\n    return (typeof window !== \"undefined\" &&\n        !!window.opener &&\n        window.opener !== window &&\n        typeof window.name === \"string\" &&\n        window.name.indexOf(`${BrowserConstants.POPUP_NAME_PREFIX}.`) === 0);\n}\n// #endregion\n/**\n * Returns current window URL as redirect uri\n */\nfunction getCurrentUri() {\n    return window.location.href.split(\"?\")[0].split(\"#\")[0];\n}\n/**\n * Gets the homepage url for the current window location.\n */\nfunction getHomepage() {\n    const currentUrl = new UrlString(window.location.href);\n    const urlComponents = currentUrl.getUrlComponents();\n    return `${urlComponents.Protocol}//${urlComponents.HostNameAndPort}/`;\n}\n/**\n * Throws error if we have completed an auth and are\n * attempting another auth request inside an iframe.\n */\nfunction blockReloadInHiddenIframes() {\n    const isResponseHash = UrlString.hashContainsKnownProperties(window.location.hash);\n    // return an error if called from the hidden iframe created by the msal js silent calls\n    if (isResponseHash && isInIframe()) {\n        throw createBrowserAuthError(blockIframeReload);\n    }\n}\n/**\n * Block redirect operations in iframes unless explicitly allowed\n * @param interactionType Interaction type for the request\n * @param allowRedirectInIframe Config value to allow redirects when app is inside an iframe\n */\nfunction blockRedirectInIframe(interactionType, allowRedirectInIframe) {\n    const isIframedApp = isInIframe();\n    if (interactionType === InteractionType.Redirect &&\n        isIframedApp &&\n        !allowRedirectInIframe) {\n        // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\n        throw createBrowserAuthError(redirectInIframe);\n    }\n}\n/**\n * Block redirectUri loaded in popup from calling AcquireToken APIs\n */\nfunction blockAcquireTokenInPopups() {\n    // Popups opened by msal popup APIs are given a name that starts with \"msal.\"\n    if (isInPopup()) {\n        throw createBrowserAuthError(blockNestedPopups);\n    }\n}\n/**\n * Throws error if token requests are made in non-browser environment\n * @param isBrowserEnvironment Flag indicating if environment is a browser.\n */\nfunction blockNonBrowserEnvironment(isBrowserEnvironment) {\n    if (!isBrowserEnvironment) {\n        throw createBrowserAuthError(nonBrowserEnvironment);\n    }\n}\n/**\n * Throws error if initialize hasn't been called\n * @param initialized\n */\nfunction blockAPICallsBeforeInitialize(initialized) {\n    if (!initialized) {\n        throw createBrowserAuthError(uninitializedPublicClientApplication);\n    }\n}\n/**\n * Adds a preconnect link element to the header which begins DNS resolution and SSL connection in anticipation of the /token request\n * @param loginDomain Authority domain, including https protocol e.g. https://login.microsoftonline.com\n * @returns\n */\nfunction preconnect(authority) {\n    const link = document.createElement(\"link\");\n    link.rel = \"preconnect\";\n    link.href = new URL(authority).origin;\n    link.crossOrigin = \"anonymous\";\n    document.head.appendChild(link);\n    // The browser will close connection if not used within a few seconds, remove element from the header after 10s\n    window.setTimeout(() => {\n        try {\n            document.head.removeChild(link);\n        }\n        catch { }\n    }, 10000); // 10s Timeout\n}\n\nexport { blockAPICallsBeforeInitialize, blockAcquireTokenInPopups, blockNonBrowserEnvironment, blockRedirectInIframe, blockReloadInHiddenIframes, clearHash, getCurrentUri, getHomepage, isInIframe, isInPopup, preconnect, replaceHash };\n//# sourceMappingURL=BrowserUtils.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { tokenParsingError, nullOrEmptyToken, maxAgeTranspired } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Extract token by decoding the rawToken\n *\n * @param encodedToken\n */\nfunction extractTokenClaims(encodedToken, base64Decode) {\n    const jswPayload = getJWSPayload(encodedToken);\n    // token will be decoded to get the username\n    try {\n        // base64Decode() should throw an error if there is an issue\n        const base64Decoded = base64Decode(jswPayload);\n        return JSON.parse(base64Decoded);\n    }\n    catch (err) {\n        throw createClientAuthError(tokenParsingError);\n    }\n}\n/**\n * decode a JWT\n *\n * @param authToken\n */\nfunction getJWSPayload(authToken) {\n    if (!authToken) {\n        throw createClientAuthError(nullOrEmptyToken);\n    }\n    const tokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\n    const matches = tokenPartsRegex.exec(authToken);\n    if (!matches || matches.length < 4) {\n        throw createClientAuthError(tokenParsingError);\n    }\n    /**\n     * const crackedToken = {\n     *  header: matches[1],\n     *  JWSPayload: matches[2],\n     *  JWSSig: matches[3],\n     * };\n     */\n    return matches[2];\n}\n/**\n * Determine if the token's max_age has transpired\n */\nfunction checkMaxAge(authTime, maxAge) {\n    /*\n     * per https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest\n     * To force an immediate re-authentication: If an app requires that a user re-authenticate prior to access,\n     * provide a value of 0 for the max_age parameter and the AS will force a fresh login.\n     */\n    const fiveMinuteSkew = 300000; // five minutes in milliseconds\n    if (maxAge === 0 || Date.now() - fiveMinuteSkew > authTime + maxAge) {\n        throw createClientAuthError(maxAgeTranspired);\n    }\n}\n\nexport { checkMaxAge, extractTokenClaims, getJWSPayload };\n//# sourceMappingURL=AuthToken.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst CcsCredentialType = {\n    HOME_ACCOUNT_ID: \"home_account_id\",\n    UPN: \"UPN\",\n};\n\nexport { CcsCredentialType };\n//# sourceMappingURL=CcsCredential.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { Separators, Constants } from '../utils/Constants.mjs';\nimport { clientInfoEmptyError, clientInfoDecodingError } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Function to build a client info object from server clientInfo string\n * @param rawClientInfo\n * @param crypto\n */\nfunction buildClientInfo(rawClientInfo, crypto) {\n    if (!rawClientInfo) {\n        throw createClientAuthError(clientInfoEmptyError);\n    }\n    try {\n        const decodedClientInfo = crypto.base64Decode(rawClientInfo);\n        return JSON.parse(decodedClientInfo);\n    }\n    catch (e) {\n        throw createClientAuthError(clientInfoDecodingError);\n    }\n}\n/**\n * Function to build a client info object from cached homeAccountId string\n * @param homeAccountId\n */\nfunction buildClientInfoFromHomeAccountId(homeAccountId) {\n    if (!homeAccountId) {\n        throw createClientAuthError(clientInfoDecodingError);\n    }\n    const clientInfoParts = homeAccountId.split(Separators.CLIENT_INFO_SEPARATOR, 2);\n    return {\n        uid: clientInfoParts[0],\n        utid: clientInfoParts.length < 2\n            ? Constants.EMPTY_STRING\n            : clientInfoParts[1],\n    };\n}\n\nexport { buildClientInfo, buildClientInfoFromHomeAccountId };\n//# sourceMappingURL=ClientInfo.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { UrlString } from '../url/UrlString.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst rawMetdataJSON = {\n    endpointMetadata: {\n        \"https://login.microsoftonline.com/common/\": {\n            token_endpoint: \"https://login.microsoftonline.com/common/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.microsoftonline.com/common/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.com/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint: \"https://login.microsoftonline.com/common/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.microsoftonline.com/common/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.microsoftonline.com/common/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.microsoftonline.com/common/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.com\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pas.windows.net\",\n        },\n        \"https://login.chinacloudapi.cn/common/\": {\n            token_endpoint: \"https://login.chinacloudapi.cn/common/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.chinacloudapi.cn/common/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.partner.microsoftonline.cn/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo\",\n            authorization_endpoint: \"https://login.chinacloudapi.cn/common/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.chinacloudapi.cn/common/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.chinacloudapi.cn/common/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.chinacloudapi.cn/common/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"partner.microsoftonline.cn\",\n            cloud_graph_host_name: \"graph.chinacloudapi.cn\",\n            msgraph_host: \"microsoftgraph.chinacloudapi.cn\",\n            rbac_url: \"https://pas.chinacloudapi.cn\",\n        },\n        \"https://login.microsoftonline.us/common/\": {\n            token_endpoint: \"https://login.microsoftonline.us/common/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.microsoftonline.us/common/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.us/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint: \"https://login.microsoftonline.us/common/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.microsoftonline.us/common/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.microsoftonline.us/common/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.microsoftonline.us/common/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.us\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pasff.usgovcloudapi.net\",\n        },\n        \"https://login.microsoftonline.com/consumers/\": {\n            token_endpoint: \"https://login.microsoftonline.com/consumers/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.microsoftonline.com/consumers/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.com/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint: \"https://login.microsoftonline.com/consumers/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.microsoftonline.com/consumers/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.microsoftonline.com/consumers/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.microsoftonline.com/consumers/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.com\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pas.windows.net\",\n        },\n        \"https://login.chinacloudapi.cn/consumers/\": {\n            token_endpoint: \"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.chinacloudapi.cn/consumers/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.partner.microsoftonline.cn/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo\",\n            authorization_endpoint: \"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.chinacloudapi.cn/consumers/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"partner.microsoftonline.cn\",\n            cloud_graph_host_name: \"graph.chinacloudapi.cn\",\n            msgraph_host: \"microsoftgraph.chinacloudapi.cn\",\n            rbac_url: \"https://pas.chinacloudapi.cn\",\n        },\n        \"https://login.microsoftonline.us/consumers/\": {\n            token_endpoint: \"https://login.microsoftonline.us/consumers/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.microsoftonline.us/consumers/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.us/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint: \"https://login.microsoftonline.us/consumers/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.microsoftonline.us/consumers/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.microsoftonline.us/consumers/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.microsoftonline.us/consumers/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.us\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pasff.usgovcloudapi.net\",\n        },\n        \"https://login.microsoftonline.com/organizations/\": {\n            token_endpoint: \"https://login.microsoftonline.com/organizations/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.microsoftonline.com/organizations/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.com/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint: \"https://login.microsoftonline.com/organizations/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.microsoftonline.com/organizations/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.microsoftonline.com/organizations/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.microsoftonline.com/organizations/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.com\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pas.windows.net\",\n        },\n        \"https://login.chinacloudapi.cn/organizations/\": {\n            token_endpoint: \"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.chinacloudapi.cn/organizations/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.partner.microsoftonline.cn/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo\",\n            authorization_endpoint: \"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.chinacloudapi.cn/organizations/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"partner.microsoftonline.cn\",\n            cloud_graph_host_name: \"graph.chinacloudapi.cn\",\n            msgraph_host: \"microsoftgraph.chinacloudapi.cn\",\n            rbac_url: \"https://pas.chinacloudapi.cn\",\n        },\n        \"https://login.microsoftonline.us/organizations/\": {\n            token_endpoint: \"https://login.microsoftonline.us/organizations/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.microsoftonline.us/organizations/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.us/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint: \"https://login.microsoftonline.us/organizations/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.microsoftonline.us/organizations/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.microsoftonline.us/organizations/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.microsoftonline.us/organizations/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.us\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pasff.usgovcloudapi.net\",\n        },\n    },\n    instanceDiscoveryMetadata: {\n        \"https://login.microsoftonline.com/common/\": {\n            tenant_discovery_endpoint: \"https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.chinacloudapi.cn/common/\": {\n            tenant_discovery_endpoint: \"https://login.chinacloudapi.cn/common/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.microsoftonline.us/common/\": {\n            tenant_discovery_endpoint: \"https://login.microsoftonline.us/common/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.microsoftonline.com/consumers/\": {\n            tenant_discovery_endpoint: \"https://login.microsoftonline.com/consumers/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.chinacloudapi.cn/consumers/\": {\n            tenant_discovery_endpoint: \"https://login.chinacloudapi.cn/consumers/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.microsoftonline.us/consumers/\": {\n            tenant_discovery_endpoint: \"https://login.microsoftonline.us/consumers/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.microsoftonline.com/organizations/\": {\n            tenant_discovery_endpoint: \"https://login.microsoftonline.com/organizations/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.chinacloudapi.cn/organizations/\": {\n            tenant_discovery_endpoint: \"https://login.chinacloudapi.cn/organizations/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.microsoftonline.us/organizations/\": {\n            tenant_discovery_endpoint: \"https://login.microsoftonline.us/organizations/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n    },\n};\nconst EndpointMetadata = rawMetdataJSON.endpointMetadata;\nconst InstanceDiscoveryMetadata = rawMetdataJSON.instanceDiscoveryMetadata;\nconst InstanceDiscoveryMetadataAliases = new Set();\nfor (const key in InstanceDiscoveryMetadata) {\n    for (const metadata of InstanceDiscoveryMetadata[key].metadata) {\n        for (const alias of metadata.aliases) {\n            InstanceDiscoveryMetadataAliases.add(alias);\n        }\n    }\n}\n/**\n * Returns aliases for the given canonical authority if found in hardcoded Instance Discovery Metadata or null if not found\n * @param canonicalAuthority\n * @returns\n */\nfunction getHardcodedAliasesForCanonicalAuthority(canonicalAuthority) {\n    if (canonicalAuthority) {\n        const instanceDiscoveryMetadata = getCloudDiscoveryMetadataFromHardcodedValues(canonicalAuthority);\n        if (instanceDiscoveryMetadata) {\n            return instanceDiscoveryMetadata.aliases;\n        }\n    }\n    return null;\n}\n/**\n * Returns aliases for from the raw cloud discovery metadata given in configuration or null if no configuration was provided\n * @param rawCloudDiscoveryMetadata\n * @returns\n */\nfunction getAliasesFromConfigMetadata(canonicalAuthority, cloudDiscoveryMetadata) {\n    if (canonicalAuthority && cloudDiscoveryMetadata) {\n        const canonicalAuthorityUrlComponents = new UrlString(canonicalAuthority).getUrlComponents();\n        const metadata = getCloudDiscoveryMetadataFromNetworkResponse(cloudDiscoveryMetadata, canonicalAuthorityUrlComponents.HostNameAndPort);\n        if (metadata) {\n            return metadata.aliases;\n        }\n    }\n    return null;\n}\n/**\n * Searches instance discovery network response for the entry that contains the host in the aliases list\n * @param response\n * @param authority\n */\nfunction getCloudDiscoveryMetadataFromNetworkResponse(response, authority) {\n    for (let i = 0; i < response.length; i++) {\n        const metadata = response[i];\n        if (metadata.aliases.includes(authority)) {\n            return metadata;\n        }\n    }\n    return null;\n}\n/**\n * Get cloud discovery metadata for common authorities\n */\nfunction getCloudDiscoveryMetadataFromHardcodedValues(canonicalAuthority) {\n    const canonicalAuthorityUrlComponents = new UrlString(canonicalAuthority).getUrlComponents();\n    if (canonicalAuthority in InstanceDiscoveryMetadata) {\n        const metadata = getCloudDiscoveryMetadataFromNetworkResponse(InstanceDiscoveryMetadata[canonicalAuthority].metadata, canonicalAuthorityUrlComponents.HostNameAndPort);\n        return metadata;\n    }\n    return null;\n}\n\nexport { EndpointMetadata, InstanceDiscoveryMetadata, InstanceDiscoveryMetadataAliases, getAliasesFromConfigMetadata, getCloudDiscoveryMetadataFromHardcodedValues, getCloudDiscoveryMetadataFromNetworkResponse, getHardcodedAliasesForCanonicalAuthority, rawMetdataJSON };\n//# sourceMappingURL=AuthorityMetadata.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst AzureCloudInstance = {\n    // AzureCloudInstance is not specified.\n    None: \"none\",\n    // Microsoft Azure public cloud\n    AzurePublic: \"https://login.microsoftonline.com\",\n    // Microsoft PPE\n    AzurePpe: \"https://login.windows-ppe.net\",\n    // Microsoft Chinese national/regional cloud\n    AzureChina: \"https://login.chinacloudapi.cn\",\n    // Microsoft German national/regional cloud (\"Black Forest\")\n    AzureGermany: \"https://login.microsoftonline.de\",\n    // US Government cloud\n    AzureUsGovernment: \"https://login.microsoftonline.us\",\n};\n\nexport { AzureCloudInstance };\n//# sourceMappingURL=AuthorityOptions.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Authority types supported by MSAL.\n */\nconst AuthorityType = {\n    Default: 0,\n    Adfs: 1,\n    Dsts: 2,\n    Ciam: 3,\n};\n\nexport { AuthorityType };\n//# sourceMappingURL=AuthorityType.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Protocol modes supported by MSAL.\n */\nconst ProtocolMode = {\n    AAD: \"AAD\",\n    OIDC: \"OIDC\",\n};\n\nexport { ProtocolMode };\n//# sourceMappingURL=ProtocolMode.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { Separators, CredentialType, AuthenticationScheme, THE_FAMILY_ID, APP_METADATA, AUTHORITY_METADATA_CONSTANTS } from '../utils/Constants.mjs';\nimport { ScopeSet } from '../request/ScopeSet.mjs';\nimport { AccountEntity } from './entities/AccountEntity.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { extractTokenClaims } from '../account/AuthToken.mjs';\nimport { name, version } from '../packageMetadata.mjs';\nimport { getAliasesFromConfigMetadata, getHardcodedAliasesForCanonicalAuthority } from '../authority/AuthorityMetadata.mjs';\nimport { invalidCacheRecord, bindingKeyNotRemoved, multipleMatchingAppMetadata, methodNotImplemented } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Interface class which implement cache storage functions used by MSAL to perform validity checks, and store tokens.\n * @internal\n */\nclass CacheManager {\n    constructor(clientId, cryptoImpl, logger, staticAuthorityOptions) {\n        this.clientId = clientId;\n        this.cryptoImpl = cryptoImpl;\n        this.commonLogger = logger.clone(name, version);\n        this.staticAuthorityOptions = staticAuthorityOptions;\n    }\n    /**\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\n     * @returns Array of AccountInfo objects in cache\n     */\n    getAllAccounts(accountFilter) {\n        const validAccounts = [];\n        this.getAccountsFilteredBy(accountFilter || {}).forEach((accountEntity) => {\n            const accountInfo = this.getAccountInfoFromEntity(accountEntity, accountFilter);\n            if (accountInfo) {\n                validAccounts.push(accountInfo);\n            }\n        });\n        return validAccounts;\n    }\n    /**\n     * Gets accountInfo object based on provided filters\n     */\n    getAccountInfoFilteredBy(accountFilter) {\n        const allAccounts = this.getAllAccounts(accountFilter);\n        if (allAccounts.length > 0) {\n            return allAccounts[0];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Returns a single matching\n     * @param accountFilter\n     * @returns\n     */\n    getBaseAccountInfo(accountFilter) {\n        const accountEntities = this.getAccountsFilteredBy(accountFilter);\n        if (accountEntities.length > 0) {\n            return accountEntities[0].getAccountInfo();\n        }\n        else {\n            return null;\n        }\n    }\n    getAccountInfoFromEntity(accountEntity, accountFilter) {\n        const accountInfo = accountEntity.getAccountInfo();\n        const idToken = this.getIdToken(accountInfo);\n        if (idToken) {\n            const idTokenClaims = extractTokenClaims(idToken.secret, this.cryptoImpl.base64Decode);\n            if (this.idTokenClaimsMatchAccountFilter(idTokenClaims, accountFilter)) {\n                accountInfo.idToken = idToken.secret;\n                accountInfo.idTokenClaims = idTokenClaims;\n                return accountInfo;\n            }\n        }\n        return null;\n    }\n    idTokenClaimsMatchAccountFilter(idTokenClaims, accountFilter) {\n        if (accountFilter) {\n            if (!!accountFilter.loginHint &&\n                !this.matchLoginHint(idTokenClaims, accountFilter.loginHint)) {\n                return false;\n            }\n            if (!!accountFilter.sid &&\n                !this.matchSid(idTokenClaims, accountFilter.sid)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * saves a cache record\n     * @param cacheRecord\n     */\n    async saveCacheRecord(cacheRecord, storeInCache) {\n        if (!cacheRecord) {\n            throw createClientAuthError(invalidCacheRecord);\n        }\n        if (!!cacheRecord.account) {\n            this.setAccount(cacheRecord.account);\n        }\n        if (!!cacheRecord.idToken && storeInCache?.idToken !== false) {\n            this.setIdTokenCredential(cacheRecord.idToken);\n        }\n        if (!!cacheRecord.accessToken && storeInCache?.accessToken !== false) {\n            await this.saveAccessToken(cacheRecord.accessToken);\n        }\n        if (!!cacheRecord.refreshToken &&\n            storeInCache?.refreshToken !== false) {\n            this.setRefreshTokenCredential(cacheRecord.refreshToken);\n        }\n        if (!!cacheRecord.appMetadata) {\n            this.setAppMetadata(cacheRecord.appMetadata);\n        }\n    }\n    /**\n     * saves access token credential\n     * @param credential\n     */\n    async saveAccessToken(credential) {\n        const accessTokenFilter = {\n            clientId: credential.clientId,\n            credentialType: credential.credentialType,\n            environment: credential.environment,\n            homeAccountId: credential.homeAccountId,\n            realm: credential.realm,\n            tokenType: credential.tokenType,\n            requestedClaimsHash: credential.requestedClaimsHash,\n        };\n        const tokenKeys = this.getTokenKeys();\n        const currentScopes = ScopeSet.fromString(credential.target);\n        const removedAccessTokens = [];\n        tokenKeys.accessToken.forEach((key) => {\n            if (!this.accessTokenKeyMatchesFilter(key, accessTokenFilter, false)) {\n                return;\n            }\n            const tokenEntity = this.getAccessTokenCredential(key);\n            if (tokenEntity &&\n                this.credentialMatchesFilter(tokenEntity, accessTokenFilter)) {\n                const tokenScopeSet = ScopeSet.fromString(tokenEntity.target);\n                if (tokenScopeSet.intersectingScopeSets(currentScopes)) {\n                    removedAccessTokens.push(this.removeAccessToken(key));\n                }\n            }\n        });\n        await Promise.all(removedAccessTokens);\n        this.setAccessTokenCredential(credential);\n    }\n    /**\n     * Retrieve accounts matching all provided filters; if no filter is set, get all accounts\n     * Not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\n     * @param accountFilter - An object containing Account properties to filter by\n     */\n    getAccountsFilteredBy(accountFilter) {\n        const allAccountKeys = this.getAccountKeys();\n        const matchingAccounts = [];\n        allAccountKeys.forEach((cacheKey) => {\n            if (!this.isAccountKey(cacheKey, accountFilter.homeAccountId, accountFilter.tenantId)) {\n                // Don't parse value if the key doesn't match the account filters\n                return;\n            }\n            const entity = this.getAccount(cacheKey);\n            if (!entity) {\n                return;\n            }\n            if (!!accountFilter.homeAccountId &&\n                !this.matchHomeAccountId(entity, accountFilter.homeAccountId)) {\n                return;\n            }\n            if (!!accountFilter.localAccountId &&\n                !this.matchLocalAccountId(entity, accountFilter.localAccountId)) {\n                return;\n            }\n            if (!!accountFilter.username &&\n                !this.matchUsername(entity, accountFilter.username)) {\n                return;\n            }\n            if (!!accountFilter.environment &&\n                !this.matchEnvironment(entity, accountFilter.environment)) {\n                return;\n            }\n            if (!!accountFilter.realm &&\n                !this.matchRealm(entity, accountFilter.realm)) {\n                return;\n            }\n            // tenantId is another name for realm\n            if (!!accountFilter.tenantId &&\n                !this.matchRealm(entity, accountFilter.tenantId)) {\n                return;\n            }\n            if (!!accountFilter.nativeAccountId &&\n                !this.matchNativeAccountId(entity, accountFilter.nativeAccountId)) {\n                return;\n            }\n            if (!!accountFilter.authorityType &&\n                !this.matchAuthorityType(entity, accountFilter.authorityType)) {\n                return;\n            }\n            if (!!accountFilter.name &&\n                !this.matchName(entity, accountFilter.name)) {\n                return;\n            }\n            matchingAccounts.push(entity);\n        });\n        return matchingAccounts;\n    }\n    /**\n     * Returns true if the given key matches our account key schema. Also matches homeAccountId and/or tenantId if provided\n     * @param key\n     * @param homeAccountId\n     * @param tenantId\n     * @returns\n     */\n    isAccountKey(key, homeAccountId, tenantId) {\n        if (key.split(Separators.CACHE_KEY_SEPARATOR).length < 3) {\n            // Account cache keys contain 3 items separated by '-' (each item may also contain '-')\n            return false;\n        }\n        if (homeAccountId &&\n            !key.toLowerCase().includes(homeAccountId.toLowerCase())) {\n            return false;\n        }\n        if (tenantId && !key.toLowerCase().includes(tenantId.toLowerCase())) {\n            return false;\n        }\n        // Do not check environment as aliasing can cause false negatives\n        return true;\n    }\n    /**\n     * Returns true if the given key matches our credential key schema.\n     * @param key\n     */\n    isCredentialKey(key) {\n        if (key.split(Separators.CACHE_KEY_SEPARATOR).length < 6) {\n            // Credential cache keys contain 6 items separated by '-' (each item may also contain '-')\n            return false;\n        }\n        const lowerCaseKey = key.toLowerCase();\n        // Credential keys must indicate what credential type they represent\n        if (lowerCaseKey.indexOf(CredentialType.ID_TOKEN.toLowerCase()) ===\n            -1 &&\n            lowerCaseKey.indexOf(CredentialType.ACCESS_TOKEN.toLowerCase()) ===\n                -1 &&\n            lowerCaseKey.indexOf(CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()) === -1 &&\n            lowerCaseKey.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) ===\n                -1) {\n            return false;\n        }\n        if (lowerCaseKey.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) >\n            -1) {\n            // Refresh tokens must contain the client id or family id\n            const clientIdValidation = `${CredentialType.REFRESH_TOKEN}${Separators.CACHE_KEY_SEPARATOR}${this.clientId}${Separators.CACHE_KEY_SEPARATOR}`;\n            const familyIdValidation = `${CredentialType.REFRESH_TOKEN}${Separators.CACHE_KEY_SEPARATOR}${THE_FAMILY_ID}${Separators.CACHE_KEY_SEPARATOR}`;\n            if (lowerCaseKey.indexOf(clientIdValidation.toLowerCase()) === -1 &&\n                lowerCaseKey.indexOf(familyIdValidation.toLowerCase()) === -1) {\n                return false;\n            }\n        }\n        else if (lowerCaseKey.indexOf(this.clientId.toLowerCase()) === -1) {\n            // Tokens must contain the clientId\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Returns whether or not the given credential entity matches the filter\n     * @param entity\n     * @param filter\n     * @returns\n     */\n    credentialMatchesFilter(entity, filter) {\n        if (!!filter.clientId && !this.matchClientId(entity, filter.clientId)) {\n            return false;\n        }\n        if (!!filter.userAssertionHash &&\n            !this.matchUserAssertionHash(entity, filter.userAssertionHash)) {\n            return false;\n        }\n        /*\n         * homeAccountId can be undefined, and we want to filter out cached items that have a homeAccountId of \"\"\n         * because we don't want a client_credential request to return a cached token that has a homeAccountId\n         */\n        if (typeof filter.homeAccountId === \"string\" &&\n            !this.matchHomeAccountId(entity, filter.homeAccountId)) {\n            return false;\n        }\n        if (!!filter.environment &&\n            !this.matchEnvironment(entity, filter.environment)) {\n            return false;\n        }\n        if (!!filter.realm && !this.matchRealm(entity, filter.realm)) {\n            return false;\n        }\n        if (!!filter.credentialType &&\n            !this.matchCredentialType(entity, filter.credentialType)) {\n            return false;\n        }\n        if (!!filter.familyId && !this.matchFamilyId(entity, filter.familyId)) {\n            return false;\n        }\n        /*\n         * idTokens do not have \"target\", target specific refreshTokens do exist for some types of authentication\n         * Resource specific refresh tokens case will be added when the support is deemed necessary\n         */\n        if (!!filter.target && !this.matchTarget(entity, filter.target)) {\n            return false;\n        }\n        // If request OR cached entity has requested Claims Hash, check if they match\n        if (filter.requestedClaimsHash || entity.requestedClaimsHash) {\n            // Don't match if either is undefined or they are different\n            if (entity.requestedClaimsHash !== filter.requestedClaimsHash) {\n                return false;\n            }\n        }\n        // Access Token with Auth Scheme specific matching\n        if (entity.credentialType ===\n            CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME) {\n            if (!!filter.tokenType &&\n                !this.matchTokenType(entity, filter.tokenType)) {\n                return false;\n            }\n            // KeyId (sshKid) in request must match cached SSH certificate keyId because SSH cert is bound to a specific key\n            if (filter.tokenType === AuthenticationScheme.SSH) {\n                if (filter.keyId && !this.matchKeyId(entity, filter.keyId)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * retrieve appMetadata matching all provided filters; if no filter is set, get all appMetadata\n     * @param filter\n     */\n    getAppMetadataFilteredBy(filter) {\n        return this.getAppMetadataFilteredByInternal(filter.environment, filter.clientId);\n    }\n    /**\n     * Support function to help match appMetadata\n     * @param environment\n     * @param clientId\n     */\n    getAppMetadataFilteredByInternal(environment, clientId) {\n        const allCacheKeys = this.getKeys();\n        const matchingAppMetadata = {};\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-appMetadata type cache entities\n            if (!this.isAppMetadata(cacheKey)) {\n                return;\n            }\n            // Attempt retrieval\n            const entity = this.getAppMetadata(cacheKey);\n            if (!entity) {\n                return;\n            }\n            if (!!environment && !this.matchEnvironment(entity, environment)) {\n                return;\n            }\n            if (!!clientId && !this.matchClientId(entity, clientId)) {\n                return;\n            }\n            matchingAppMetadata[cacheKey] = entity;\n        });\n        return matchingAppMetadata;\n    }\n    /**\n     * retrieve authorityMetadata that contains a matching alias\n     * @param filter\n     */\n    getAuthorityMetadataByAlias(host) {\n        const allCacheKeys = this.getAuthorityMetadataKeys();\n        let matchedEntity = null;\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-authorityMetadata type cache entities\n            if (!this.isAuthorityMetadata(cacheKey) ||\n                cacheKey.indexOf(this.clientId) === -1) {\n                return;\n            }\n            // Attempt retrieval\n            const entity = this.getAuthorityMetadata(cacheKey);\n            if (!entity) {\n                return;\n            }\n            if (entity.aliases.indexOf(host) === -1) {\n                return;\n            }\n            matchedEntity = entity;\n        });\n        return matchedEntity;\n    }\n    /**\n     * Removes all accounts and related tokens from cache.\n     */\n    async removeAllAccounts() {\n        const allAccountKeys = this.getAccountKeys();\n        const removedAccounts = [];\n        allAccountKeys.forEach((cacheKey) => {\n            removedAccounts.push(this.removeAccount(cacheKey));\n        });\n        await Promise.all(removedAccounts);\n    }\n    /**\n     * Removes the account and related tokens for a given account key\n     * @param account\n     */\n    async removeAccount(accountKey) {\n        const account = this.getAccount(accountKey);\n        if (!account) {\n            return;\n        }\n        await this.removeAccountContext(account);\n        this.removeItem(accountKey);\n    }\n    /**\n     * Removes credentials associated with the provided account\n     * @param account\n     */\n    async removeAccountContext(account) {\n        const allTokenKeys = this.getTokenKeys();\n        const accountId = account.generateAccountId();\n        const removedCredentials = [];\n        allTokenKeys.idToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                this.removeIdToken(key);\n            }\n        });\n        allTokenKeys.accessToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                removedCredentials.push(this.removeAccessToken(key));\n            }\n        });\n        allTokenKeys.refreshToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                this.removeRefreshToken(key);\n            }\n        });\n        await Promise.all(removedCredentials);\n    }\n    /**\n     * returns a boolean if the given credential is removed\n     * @param credential\n     */\n    async removeAccessToken(key) {\n        const credential = this.getAccessTokenCredential(key);\n        if (!credential) {\n            return;\n        }\n        // Remove Token Binding Key from key store for PoP Tokens Credentials\n        if (credential.credentialType.toLowerCase() ===\n            CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()) {\n            if (credential.tokenType === AuthenticationScheme.POP) {\n                const accessTokenWithAuthSchemeEntity = credential;\n                const kid = accessTokenWithAuthSchemeEntity.keyId;\n                if (kid) {\n                    try {\n                        await this.cryptoImpl.removeTokenBindingKey(kid);\n                    }\n                    catch (error) {\n                        throw createClientAuthError(bindingKeyNotRemoved);\n                    }\n                }\n            }\n        }\n        return this.removeItem(key);\n    }\n    /**\n     * Removes all app metadata objects from cache.\n     */\n    removeAppMetadata() {\n        const allCacheKeys = this.getKeys();\n        allCacheKeys.forEach((cacheKey) => {\n            if (this.isAppMetadata(cacheKey)) {\n                this.removeItem(cacheKey);\n            }\n        });\n        return true;\n    }\n    /**\n     * Retrieve the cached credentials into a cacherecord\n     * @param account\n     * @param clientId\n     * @param scopes\n     * @param environment\n     * @param authScheme\n     */\n    readCacheRecord(account, request, environment) {\n        const tokenKeys = this.getTokenKeys();\n        const cachedAccount = this.readAccountFromCache(account);\n        const cachedIdToken = this.getIdToken(account, tokenKeys);\n        const cachedAccessToken = this.getAccessToken(account, request, tokenKeys);\n        const cachedRefreshToken = this.getRefreshToken(account, false, tokenKeys);\n        const cachedAppMetadata = this.readAppMetadataFromCache(environment);\n        if (cachedAccount && cachedIdToken) {\n            cachedAccount.idTokenClaims = extractTokenClaims(cachedIdToken.secret, this.cryptoImpl.base64Decode);\n        }\n        return {\n            account: cachedAccount,\n            idToken: cachedIdToken,\n            accessToken: cachedAccessToken,\n            refreshToken: cachedRefreshToken,\n            appMetadata: cachedAppMetadata,\n        };\n    }\n    /**\n     * Retrieve AccountEntity from cache\n     * @param account\n     */\n    readAccountFromCache(account) {\n        const accountKey = AccountEntity.generateAccountCacheKey(account);\n        return this.getAccount(accountKey);\n    }\n    /**\n     * Retrieve IdTokenEntity from cache\n     * @param clientId\n     * @param account\n     * @param inputRealm\n     */\n    getIdToken(account, tokenKeys) {\n        this.commonLogger.trace(\"CacheManager - getIdToken called\");\n        const idTokenFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: CredentialType.ID_TOKEN,\n            clientId: this.clientId,\n            realm: account.tenantId,\n        };\n        const idTokens = this.getIdTokensByFilter(idTokenFilter, tokenKeys);\n        const numIdTokens = idTokens.length;\n        if (numIdTokens < 1) {\n            this.commonLogger.info(\"CacheManager:getIdToken - No token found\");\n            return null;\n        }\n        else if (numIdTokens > 1) {\n            this.commonLogger.info(\"CacheManager:getIdToken - Multiple id tokens found, clearing them\");\n            idTokens.forEach((idToken) => {\n                this.removeIdToken(idToken.generateCredentialKey());\n            });\n            return null;\n        }\n        this.commonLogger.info(\"CacheManager:getIdToken - Returning id token\");\n        return idTokens[0];\n    }\n    /**\n     * Gets all idTokens matching the given filter\n     * @param filter\n     * @returns\n     */\n    getIdTokensByFilter(filter, tokenKeys) {\n        const idTokenKeys = (tokenKeys && tokenKeys.idToken) || this.getTokenKeys().idToken;\n        const idTokens = [];\n        idTokenKeys.forEach((key) => {\n            if (!this.idTokenKeyMatchesFilter(key, {\n                clientId: this.clientId,\n                ...filter,\n            })) {\n                return;\n            }\n            const idToken = this.getIdTokenCredential(key);\n            if (idToken && this.credentialMatchesFilter(idToken, filter)) {\n                idTokens.push(idToken);\n            }\n        });\n        return idTokens;\n    }\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     * @returns\n     */\n    idTokenKeyMatchesFilter(inputKey, filter) {\n        const key = inputKey.toLowerCase();\n        if (filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Removes idToken from the cache\n     * @param key\n     */\n    removeIdToken(key) {\n        this.removeItem(key);\n    }\n    /**\n     * Removes refresh token from the cache\n     * @param key\n     */\n    removeRefreshToken(key) {\n        this.removeItem(key);\n    }\n    /**\n     * Retrieve AccessTokenEntity from cache\n     * @param clientId\n     * @param account\n     * @param scopes\n     * @param authScheme\n     */\n    getAccessToken(account, request, tokenKeys) {\n        this.commonLogger.trace(\"CacheManager - getAccessToken called\");\n        const scopes = ScopeSet.createSearchScopes(request.scopes);\n        const authScheme = request.authenticationScheme || AuthenticationScheme.BEARER;\n        /*\n         * Distinguish between Bearer and PoP/SSH token cache types\n         * Cast to lowercase to handle \"bearer\" from ADFS\n         */\n        const credentialType = authScheme &&\n            authScheme.toLowerCase() !==\n                AuthenticationScheme.BEARER.toLowerCase()\n            ? CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME\n            : CredentialType.ACCESS_TOKEN;\n        const accessTokenFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: credentialType,\n            clientId: this.clientId,\n            realm: account.tenantId,\n            target: scopes,\n            tokenType: authScheme,\n            keyId: request.sshKid,\n            requestedClaimsHash: request.requestedClaimsHash,\n        };\n        const accessTokenKeys = (tokenKeys && tokenKeys.accessToken) ||\n            this.getTokenKeys().accessToken;\n        const accessTokens = [];\n        accessTokenKeys.forEach((key) => {\n            // Validate key\n            if (this.accessTokenKeyMatchesFilter(key, accessTokenFilter, true)) {\n                const accessToken = this.getAccessTokenCredential(key);\n                // Validate value\n                if (accessToken &&\n                    this.credentialMatchesFilter(accessToken, accessTokenFilter)) {\n                    accessTokens.push(accessToken);\n                }\n            }\n        });\n        const numAccessTokens = accessTokens.length;\n        if (numAccessTokens < 1) {\n            this.commonLogger.info(\"CacheManager:getAccessToken - No token found\");\n            return null;\n        }\n        else if (numAccessTokens > 1) {\n            this.commonLogger.info(\"CacheManager:getAccessToken - Multiple access tokens found, clearing them\");\n            accessTokens.forEach((accessToken) => {\n                void this.removeAccessToken(accessToken.generateCredentialKey());\n            });\n            return null;\n        }\n        this.commonLogger.info(\"CacheManager:getAccessToken - Returning access token\");\n        return accessTokens[0];\n    }\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     * @param keyMustContainAllScopes\n     * @returns\n     */\n    accessTokenKeyMatchesFilter(inputKey, filter, keyMustContainAllScopes) {\n        const key = inputKey.toLowerCase();\n        if (filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.realm && key.indexOf(filter.realm.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.requestedClaimsHash &&\n            key.indexOf(filter.requestedClaimsHash.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.target) {\n            const scopes = filter.target.asArray();\n            for (let i = 0; i < scopes.length; i++) {\n                if (keyMustContainAllScopes &&\n                    !key.includes(scopes[i].toLowerCase())) {\n                    // When performing a cache lookup a missing scope would be a cache miss\n                    return false;\n                }\n                else if (!keyMustContainAllScopes &&\n                    key.includes(scopes[i].toLowerCase())) {\n                    // When performing a cache write, any token with a subset of requested scopes should be replaced\n                    return true;\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * Gets all access tokens matching the filter\n     * @param filter\n     * @returns\n     */\n    getAccessTokensByFilter(filter) {\n        const tokenKeys = this.getTokenKeys();\n        const accessTokens = [];\n        tokenKeys.accessToken.forEach((key) => {\n            if (!this.accessTokenKeyMatchesFilter(key, filter, true)) {\n                return;\n            }\n            const accessToken = this.getAccessTokenCredential(key);\n            if (accessToken &&\n                this.credentialMatchesFilter(accessToken, filter)) {\n                accessTokens.push(accessToken);\n            }\n        });\n        return accessTokens;\n    }\n    /**\n     * Helper to retrieve the appropriate refresh token from cache\n     * @param clientId\n     * @param account\n     * @param familyRT\n     */\n    getRefreshToken(account, familyRT, tokenKeys) {\n        this.commonLogger.trace(\"CacheManager - getRefreshToken called\");\n        const id = familyRT ? THE_FAMILY_ID : undefined;\n        const refreshTokenFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: CredentialType.REFRESH_TOKEN,\n            clientId: this.clientId,\n            familyId: id,\n        };\n        const refreshTokenKeys = (tokenKeys && tokenKeys.refreshToken) ||\n            this.getTokenKeys().refreshToken;\n        const refreshTokens = [];\n        refreshTokenKeys.forEach((key) => {\n            // Validate key\n            if (this.refreshTokenKeyMatchesFilter(key, refreshTokenFilter)) {\n                const refreshToken = this.getRefreshTokenCredential(key);\n                // Validate value\n                if (refreshToken &&\n                    this.credentialMatchesFilter(refreshToken, refreshTokenFilter)) {\n                    refreshTokens.push(refreshToken);\n                }\n            }\n        });\n        const numRefreshTokens = refreshTokens.length;\n        if (numRefreshTokens < 1) {\n            this.commonLogger.info(\"CacheManager:getRefreshToken - No refresh token found.\");\n            return null;\n        }\n        // address the else case after remove functions address environment aliases\n        this.commonLogger.info(\"CacheManager:getRefreshToken - returning refresh token\");\n        return refreshTokens[0];\n    }\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     */\n    refreshTokenKeyMatchesFilter(inputKey, filter) {\n        const key = inputKey.toLowerCase();\n        if (filter.familyId &&\n            key.indexOf(filter.familyId.toLowerCase()) === -1) {\n            return false;\n        }\n        // If familyId is used, clientId is not in the key\n        if (!filter.familyId &&\n            filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Retrieve AppMetadataEntity from cache\n     */\n    readAppMetadataFromCache(environment) {\n        const appMetadataFilter = {\n            environment,\n            clientId: this.clientId,\n        };\n        const appMetadata = this.getAppMetadataFilteredBy(appMetadataFilter);\n        const appMetadataEntries = Object.keys(appMetadata).map((key) => appMetadata[key]);\n        const numAppMetadata = appMetadataEntries.length;\n        if (numAppMetadata < 1) {\n            return null;\n        }\n        else if (numAppMetadata > 1) {\n            throw createClientAuthError(multipleMatchingAppMetadata);\n        }\n        return appMetadataEntries[0];\n    }\n    /**\n     * Return the family_id value associated  with FOCI\n     * @param environment\n     * @param clientId\n     */\n    isAppMetadataFOCI(environment) {\n        const appMetadata = this.readAppMetadataFromCache(environment);\n        return !!(appMetadata && appMetadata.familyId === THE_FAMILY_ID);\n    }\n    /**\n     * helper to match account ids\n     * @param value\n     * @param homeAccountId\n     */\n    matchHomeAccountId(entity, homeAccountId) {\n        return !!(typeof entity.homeAccountId === \"string\" &&\n            homeAccountId === entity.homeAccountId);\n    }\n    /**\n     * helper to match account ids\n     * @param entity\n     * @param localAccountId\n     * @returns\n     */\n    matchLocalAccountId(entity, localAccountId) {\n        return !!(typeof entity.localAccountId === \"string\" &&\n            localAccountId === entity.localAccountId);\n    }\n    /**\n     * helper to match usernames\n     * @param entity\n     * @param username\n     * @returns\n     */\n    matchUsername(entity, username) {\n        return !!(typeof entity.username === \"string\" &&\n            username.toLowerCase() === entity.username.toLowerCase());\n    }\n    /**\n     * helper to match names\n     * @param entity\n     * @param name\n     * @returns true if the downcased name properties are present and match in the filter and the entity\n     */\n    matchName(entity, name) {\n        return !!(name.toLowerCase() === entity.name?.toLowerCase());\n    }\n    /**\n     * helper to match assertion\n     * @param value\n     * @param oboAssertion\n     */\n    matchUserAssertionHash(entity, userAssertionHash) {\n        return !!(entity.userAssertionHash &&\n            userAssertionHash === entity.userAssertionHash);\n    }\n    /**\n     * helper to match environment\n     * @param value\n     * @param environment\n     */\n    matchEnvironment(entity, environment) {\n        // Check static authority options first for cases where authority metadata has not been resolved and cached yet\n        if (this.staticAuthorityOptions) {\n            const staticAliases = getAliasesFromConfigMetadata(this.staticAuthorityOptions.canonicalAuthority, this.staticAuthorityOptions.cloudDiscoveryMetadata) ||\n                getHardcodedAliasesForCanonicalAuthority(this.staticAuthorityOptions.canonicalAuthority) ||\n                this.staticAuthorityOptions.knownAuthorities;\n            if (staticAliases &&\n                staticAliases.includes(environment) &&\n                staticAliases.includes(entity.environment)) {\n                return true;\n            }\n        }\n        // Query metadata cache if no static authority configuration has aliases that match enviroment\n        const cloudMetadata = this.getAuthorityMetadataByAlias(environment);\n        if (cloudMetadata &&\n            cloudMetadata.aliases.indexOf(entity.environment) > -1) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * helper to match credential type\n     * @param entity\n     * @param credentialType\n     */\n    matchCredentialType(entity, credentialType) {\n        return (entity.credentialType &&\n            credentialType.toLowerCase() === entity.credentialType.toLowerCase());\n    }\n    /**\n     * helper to match client ids\n     * @param entity\n     * @param clientId\n     */\n    matchClientId(entity, clientId) {\n        return !!(entity.clientId && clientId === entity.clientId);\n    }\n    /**\n     * helper to match family ids\n     * @param entity\n     * @param familyId\n     */\n    matchFamilyId(entity, familyId) {\n        return !!(entity.familyId && familyId === entity.familyId);\n    }\n    /**\n     * helper to match realm\n     * @param entity\n     * @param realm\n     */\n    matchRealm(entity, realm) {\n        return !!(entity.realm && realm === entity.realm);\n    }\n    /**\n     * helper to match nativeAccountId\n     * @param entity\n     * @param nativeAccountId\n     * @returns boolean indicating the match result\n     */\n    matchNativeAccountId(entity, nativeAccountId) {\n        return !!(entity.nativeAccountId && nativeAccountId === entity.nativeAccountId);\n    }\n    /**\n     * helper to match loginHint which can be either:\n     * 1. login_hint ID token claim\n     * 2. username in cached account object\n     * 3. upn in ID token claims\n     * @param entity\n     * @param loginHint\n     * @returns\n     */\n    matchLoginHint(idTokenClaims, loginHint) {\n        if (idTokenClaims?.login_hint === loginHint) {\n            return true;\n        }\n        if (idTokenClaims.preferred_username === loginHint) {\n            return true;\n        }\n        if (idTokenClaims?.upn === loginHint) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Helper to match sid\n     * @param idTokenClaims\n     * @param sid\n     * @returns true if the sid claim is present and matches the filter\n     */\n    matchSid(idTokenClaims, sid) {\n        return !!(idTokenClaims?.sid && idTokenClaims.sid === sid);\n    }\n    matchAuthorityType(entity, authorityType) {\n        return !!(entity.authorityType &&\n            authorityType.toLowerCase() === entity.authorityType.toLowerCase());\n    }\n    /**\n     * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.\n     * @param entity\n     * @param target\n     */\n    matchTarget(entity, target) {\n        const isNotAccessTokenCredential = entity.credentialType !== CredentialType.ACCESS_TOKEN &&\n            entity.credentialType !==\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\n        if (isNotAccessTokenCredential || !entity.target) {\n            return false;\n        }\n        const entityScopeSet = ScopeSet.fromString(entity.target);\n        return entityScopeSet.containsScopeSet(target);\n    }\n    /**\n     * Returns true if the credential's tokenType or Authentication Scheme matches the one in the request, false otherwise\n     * @param entity\n     * @param tokenType\n     */\n    matchTokenType(entity, tokenType) {\n        return !!(entity.tokenType && entity.tokenType === tokenType);\n    }\n    /**\n     * Returns true if the credential's keyId matches the one in the request, false otherwise\n     * @param entity\n     * @param tokenType\n     */\n    matchKeyId(entity, keyId) {\n        return !!(entity.keyId && entity.keyId === keyId);\n    }\n    /**\n     * returns if a given cache entity is of the type appmetadata\n     * @param key\n     */\n    isAppMetadata(key) {\n        return key.indexOf(APP_METADATA) !== -1;\n    }\n    /**\n     * returns if a given cache entity is of the type authoritymetadata\n     * @param key\n     */\n    isAuthorityMetadata(key) {\n        return key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) !== -1;\n    }\n    /**\n     * returns cache key used for cloud instance metadata\n     */\n    generateAuthorityMetadataCacheKey(authority) {\n        return `${AUTHORITY_METADATA_CONSTANTS.CACHE_KEY}-${this.clientId}-${authority}`;\n    }\n    /**\n     * Helper to convert serialized data to object\n     * @param obj\n     * @param json\n     */\n    static toObject(obj, json) {\n        for (const propertyName in json) {\n            obj[propertyName] = json[propertyName];\n        }\n        return obj;\n    }\n}\n/** @internal */\nclass DefaultStorageClass extends CacheManager {\n    setAccount() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getAccount() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    setIdTokenCredential() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getIdTokenCredential() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    setAccessTokenCredential() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getAccessTokenCredential() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    setRefreshTokenCredential() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getRefreshTokenCredential() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    setAppMetadata() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getAppMetadata() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    setServerTelemetry() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getServerTelemetry() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    setAuthorityMetadata() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getAuthorityMetadata() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getAuthorityMetadataKeys() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    setThrottlingCache() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getThrottlingCache() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    removeItem() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    containsKey() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getKeys() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getAccountKeys() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getTokenKeys() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    async clear() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    updateCredentialCacheKey() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n}\n\nexport { CacheManager, DefaultStorageClass };\n//# sourceMappingURL=CacheManager.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { CredentialEntity } from './CredentialEntity.mjs';\nimport { CredentialType, AuthenticationScheme } from '../../utils/Constants.mjs';\nimport { TimeUtils } from '../../utils/TimeUtils.mjs';\nimport { createClientAuthError } from '../../error/ClientAuthError.mjs';\nimport { extractTokenClaims } from '../../account/AuthToken.mjs';\nimport { tokenClaimsCnfRequiredForSignedJwt } from '../../error/ClientAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * ACCESS_TOKEN Credential Type\n *\n * Key:Value Schema:\n *\n * Key Example: uid.utid-login.microsoftonline.com-accesstoken-clientId-contoso.com-user.read\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      familyId: Family ID identifier, usually only used for refresh tokens\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\n *      cachedAt: Absolute device time when entry was created in the cache.\n *      expiresOn: Token expiry time, calculated based on current UTC time in seconds. Represented as a string.\n *      extendedExpiresOn: Additional extended expiry time until when token is valid in case of server-side outage. Represented as string in UTC seconds.\n *      keyId: used for POP and SSH tokenTypes\n *      tokenType: Type of the token issued. Usually \"Bearer\"\n * }\n */\nclass AccessTokenEntity extends CredentialEntity {\n    /**\n     * Create AccessTokenEntity\n     * @param homeAccountId\n     * @param environment\n     * @param accessToken\n     * @param clientId\n     * @param tenantId\n     * @param scopes\n     * @param expiresOn\n     * @param extExpiresOn\n     */\n    static createAccessTokenEntity(homeAccountId, environment, accessToken, clientId, tenantId, scopes, expiresOn, extExpiresOn, cryptoUtils, refreshOn, tokenType, userAssertionHash, keyId, requestedClaims, requestedClaimsHash) {\n        const atEntity = new AccessTokenEntity();\n        atEntity.homeAccountId = homeAccountId;\n        atEntity.credentialType = CredentialType.ACCESS_TOKEN;\n        atEntity.secret = accessToken;\n        const currentTime = TimeUtils.nowSeconds();\n        atEntity.cachedAt = currentTime.toString();\n        /*\n         * Token expiry time.\n         * This value should be  calculated based on the current UTC time measured locally and the value  expires_in Represented as a string in JSON.\n         */\n        atEntity.expiresOn = expiresOn.toString();\n        atEntity.extendedExpiresOn = extExpiresOn.toString();\n        if (refreshOn) {\n            atEntity.refreshOn = refreshOn.toString();\n        }\n        atEntity.environment = environment;\n        atEntity.clientId = clientId;\n        atEntity.realm = tenantId;\n        atEntity.target = scopes;\n        atEntity.userAssertionHash = userAssertionHash;\n        atEntity.tokenType = tokenType || AuthenticationScheme.BEARER;\n        if (requestedClaims) {\n            atEntity.requestedClaims = requestedClaims;\n            atEntity.requestedClaimsHash = requestedClaimsHash;\n        }\n        /*\n         * Create Access Token With Auth Scheme instead of regular access token\n         * Cast to lower to handle \"bearer\" from ADFS\n         */\n        if (atEntity.tokenType?.toLowerCase() !==\n            AuthenticationScheme.BEARER.toLowerCase()) {\n            atEntity.credentialType =\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\n            switch (atEntity.tokenType) {\n                case AuthenticationScheme.POP:\n                    // Make sure keyId is present and add it to credential\n                    const tokenClaims = extractTokenClaims(accessToken, cryptoUtils.base64Decode);\n                    if (!tokenClaims?.cnf?.kid) {\n                        throw createClientAuthError(tokenClaimsCnfRequiredForSignedJwt);\n                    }\n                    atEntity.keyId = tokenClaims.cnf.kid;\n                    break;\n                case AuthenticationScheme.SSH:\n                    atEntity.keyId = keyId;\n            }\n        }\n        return atEntity;\n    }\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAccessTokenEntity(entity) {\n        if (!entity) {\n            return false;\n        }\n        return (entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"credentialType\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"secret\") &&\n            entity.hasOwnProperty(\"target\") &&\n            (entity[\"credentialType\"] === CredentialType.ACCESS_TOKEN ||\n                entity[\"credentialType\"] ===\n                    CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME));\n    }\n}\n\nexport { AccessTokenEntity };\n//# sourceMappingURL=AccessTokenEntity.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { Separators, CacheAccountType, Constants } from '../../utils/Constants.mjs';\nimport { buildClientInfo } from '../../account/ClientInfo.mjs';\nimport { createClientAuthError } from '../../error/ClientAuthError.mjs';\nimport { AuthorityType } from '../../authority/AuthorityType.mjs';\nimport { ProtocolMode } from '../../authority/ProtocolMode.mjs';\nimport { invalidCacheEnvironment } from '../../error/ClientAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Type that defines required and optional parameters for an Account field (based on universal cache schema implemented by all MSALs).\n *\n * Key : Value Schema\n *\n * Key: <home_account_id>-<environment>-<realm*>\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      localAccountId: Original tenant-specific accountID, usually used for legacy cases\n *      username: primary username that represents the user, usually corresponds to preferred_username in the v2 endpt\n *      authorityType: Accounts authority type as a string\n *      name: Full name for the account, including given name and family name,\n *      lastModificationTime: last time this entity was modified in the cache\n *      lastModificationApp:\n *      idTokenClaims: Object containing claims parsed from ID token\n *      nativeAccountId: Account identifier on the native device\n * }\n * @internal\n */\nclass AccountEntity {\n    /**\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\n     */\n    generateAccountId() {\n        const accountId = [this.homeAccountId, this.environment];\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n    /**\n     * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\n     */\n    generateAccountKey() {\n        return AccountEntity.generateAccountCacheKey({\n            homeAccountId: this.homeAccountId,\n            environment: this.environment,\n            tenantId: this.realm,\n            username: this.username,\n            localAccountId: this.localAccountId,\n        });\n    }\n    /**\n     * Returns the AccountInfo interface for this account.\n     */\n    getAccountInfo() {\n        return {\n            homeAccountId: this.homeAccountId,\n            environment: this.environment,\n            tenantId: this.realm,\n            username: this.username,\n            localAccountId: this.localAccountId,\n            name: this.name,\n            idTokenClaims: this.idTokenClaims,\n            nativeAccountId: this.nativeAccountId,\n            authorityType: this.authorityType,\n        };\n    }\n    /**\n     * Generates account key from interface\n     * @param accountInterface\n     */\n    static generateAccountCacheKey(accountInterface) {\n        const accountKey = [\n            accountInterface.homeAccountId,\n            accountInterface.environment || Constants.EMPTY_STRING,\n            accountInterface.tenantId || Constants.EMPTY_STRING,\n        ];\n        return accountKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n    /**\n     * Build Account cache from IdToken, clientInfo and authority/policy. Associated with AAD.\n     * @param accountDetails\n     */\n    static createAccount(accountDetails, authority) {\n        const account = new AccountEntity();\n        if (authority.authorityType === AuthorityType.Adfs) {\n            account.authorityType = CacheAccountType.ADFS_ACCOUNT_TYPE;\n        }\n        else if (authority.protocolMode === ProtocolMode.AAD) {\n            account.authorityType = CacheAccountType.MSSTS_ACCOUNT_TYPE;\n        }\n        else {\n            account.authorityType = CacheAccountType.GENERIC_ACCOUNT_TYPE;\n        }\n        account.clientInfo = accountDetails.clientInfo;\n        account.homeAccountId = accountDetails.homeAccountId;\n        account.nativeAccountId = accountDetails.nativeAccountId;\n        const env = accountDetails.environment ||\n            (authority && authority.getPreferredCache());\n        if (!env) {\n            throw createClientAuthError(invalidCacheEnvironment);\n        }\n        account.environment = env;\n        // non AAD scenarios can have empty realm\n        account.realm =\n            accountDetails.idTokenClaims.tid || Constants.EMPTY_STRING;\n        // How do you account for MSA CID here?\n        account.localAccountId =\n            accountDetails.idTokenClaims.oid ||\n                accountDetails.idTokenClaims.sub ||\n                Constants.EMPTY_STRING;\n        /*\n         * In B2C scenarios the emails claim is used instead of preferred_username and it is an array.\n         * In most cases it will contain a single email. This field should not be relied upon if a custom\n         * policy is configured to return more than 1 email.\n         */\n        const preferredUsername = accountDetails.idTokenClaims.preferred_username ||\n            accountDetails.idTokenClaims.upn;\n        const email = accountDetails.idTokenClaims.emails\n            ? accountDetails.idTokenClaims.emails[0]\n            : null;\n        account.username = preferredUsername || email || Constants.EMPTY_STRING;\n        account.name = accountDetails.idTokenClaims.name;\n        account.cloudGraphHostName = accountDetails.cloudGraphHostName;\n        account.msGraphHost = accountDetails.msGraphHost;\n        return account;\n    }\n    /**\n     * Creates an AccountEntity object from AccountInfo\n     * @param accountInfo\n     * @param cloudGraphHostName\n     * @param msGraphHost\n     * @returns\n     */\n    static createFromAccountInfo(accountInfo, cloudGraphHostName, msGraphHost) {\n        const account = new AccountEntity();\n        account.authorityType =\n            accountInfo.authorityType || CacheAccountType.GENERIC_ACCOUNT_TYPE;\n        account.homeAccountId = accountInfo.homeAccountId;\n        account.localAccountId = accountInfo.localAccountId;\n        account.nativeAccountId = accountInfo.nativeAccountId;\n        account.realm = accountInfo.tenantId;\n        account.environment = accountInfo.environment;\n        account.username = accountInfo.username;\n        account.name = accountInfo.name;\n        account.cloudGraphHostName = cloudGraphHostName;\n        account.msGraphHost = msGraphHost;\n        return account;\n    }\n    /**\n     * Generate HomeAccountId from server response\n     * @param serverClientInfo\n     * @param authType\n     */\n    static generateHomeAccountId(serverClientInfo, authType, logger, cryptoObj, idTokenClaims) {\n        const accountId = idTokenClaims?.sub\n            ? idTokenClaims.sub\n            : Constants.EMPTY_STRING;\n        // since ADFS does not have tid and does not set client_info\n        if (authType === AuthorityType.Adfs ||\n            authType === AuthorityType.Dsts) {\n            return accountId;\n        }\n        // for cases where there is clientInfo\n        if (serverClientInfo) {\n            try {\n                const clientInfo = buildClientInfo(serverClientInfo, cryptoObj);\n                if (clientInfo.uid && clientInfo.utid) {\n                    return `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`;\n                }\n            }\n            catch (e) { }\n        }\n        // default to \"sub\" claim\n        logger.verbose(\"No client info in response\");\n        return accountId;\n    }\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAccountEntity(entity) {\n        if (!entity) {\n            return false;\n        }\n        return (entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"localAccountId\") &&\n            entity.hasOwnProperty(\"username\") &&\n            entity.hasOwnProperty(\"authorityType\"));\n    }\n    /**\n     * Helper function to determine whether 2 accountInfo objects represent the same account\n     * @param accountA\n     * @param accountB\n     * @param compareClaims - If set to true idTokenClaims will also be compared to determine account equality\n     */\n    static accountInfoIsEqual(accountA, accountB, compareClaims) {\n        if (!accountA || !accountB) {\n            return false;\n        }\n        let claimsMatch = true; // default to true so as to not fail comparison below if compareClaims: false\n        if (compareClaims) {\n            const accountAClaims = (accountA.idTokenClaims ||\n                {});\n            const accountBClaims = (accountB.idTokenClaims ||\n                {});\n            // issued at timestamp and nonce are expected to change each time a new id token is acquired\n            claimsMatch =\n                accountAClaims.iat === accountBClaims.iat &&\n                    accountAClaims.nonce === accountBClaims.nonce;\n        }\n        return (accountA.homeAccountId === accountB.homeAccountId &&\n            accountA.localAccountId === accountB.localAccountId &&\n            accountA.username === accountB.username &&\n            accountA.tenantId === accountB.tenantId &&\n            accountA.environment === accountB.environment &&\n            accountA.nativeAccountId === accountB.nativeAccountId &&\n            claimsMatch);\n    }\n}\n\nexport { AccountEntity };\n//# sourceMappingURL=AccountEntity.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { Separators, APP_METADATA } from '../../utils/Constants.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * APP_METADATA Cache\n *\n * Key:Value Schema:\n *\n * Key: appmetadata-<environment>-<client_id>\n *\n * Value:\n * {\n *      clientId: client ID of the application\n *      environment: entity that issued the token, represented as a full host\n *      familyId: Family ID identifier, '1' represents Microsoft Family\n * }\n */\nclass AppMetadataEntity {\n    /**\n     * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\n     */\n    generateAppMetadataKey() {\n        return AppMetadataEntity.generateAppMetadataCacheKey(this.environment, this.clientId);\n    }\n    /**\n     * Generate AppMetadata Cache Key\n     */\n    static generateAppMetadataCacheKey(environment, clientId) {\n        const appMetaDataKeyArray = [\n            APP_METADATA,\n            environment,\n            clientId,\n        ];\n        return appMetaDataKeyArray\n            .join(Separators.CACHE_KEY_SEPARATOR)\n            .toLowerCase();\n    }\n    /**\n     * Creates AppMetadataEntity\n     * @param clientId\n     * @param environment\n     * @param familyId\n     */\n    static createAppMetadataEntity(clientId, environment, familyId) {\n        const appMetadata = new AppMetadataEntity();\n        appMetadata.clientId = clientId;\n        appMetadata.environment = environment;\n        if (familyId) {\n            appMetadata.familyId = familyId;\n        }\n        return appMetadata;\n    }\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAppMetadataEntity(key, entity) {\n        if (!entity) {\n            return false;\n        }\n        return (key.indexOf(APP_METADATA) === 0 &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"environment\"));\n    }\n}\n\nexport { AppMetadataEntity };\n//# sourceMappingURL=AppMetadataEntity.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { AUTHORITY_METADATA_CONSTANTS } from '../../utils/Constants.mjs';\nimport { TimeUtils } from '../../utils/TimeUtils.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass AuthorityMetadataEntity {\n    constructor() {\n        this.expiresAt =\n            TimeUtils.nowSeconds() +\n                AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\n    }\n    /**\n     * Update the entity with new aliases, preferred_cache and preferred_network values\n     * @param metadata\n     * @param fromNetwork\n     */\n    updateCloudDiscoveryMetadata(metadata, fromNetwork) {\n        this.aliases = metadata.aliases;\n        this.preferred_cache = metadata.preferred_cache;\n        this.preferred_network = metadata.preferred_network;\n        this.aliasesFromNetwork = fromNetwork;\n    }\n    /**\n     * Update the entity with new endpoints\n     * @param metadata\n     * @param fromNetwork\n     */\n    updateEndpointMetadata(metadata, fromNetwork) {\n        this.authorization_endpoint = metadata.authorization_endpoint;\n        this.token_endpoint = metadata.token_endpoint;\n        this.end_session_endpoint = metadata.end_session_endpoint;\n        this.issuer = metadata.issuer;\n        this.endpointsFromNetwork = fromNetwork;\n        this.jwks_uri = metadata.jwks_uri;\n    }\n    /**\n     * Save the authority that was used to create this cache entry\n     * @param authority\n     */\n    updateCanonicalAuthority(authority) {\n        this.canonical_authority = authority;\n    }\n    /**\n     * Reset the exiresAt value\n     */\n    resetExpiresAt() {\n        this.expiresAt =\n            TimeUtils.nowSeconds() +\n                AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\n    }\n    /**\n     * Returns whether or not the data needs to be refreshed\n     */\n    isExpired() {\n        return this.expiresAt <= TimeUtils.nowSeconds();\n    }\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAuthorityMetadataEntity(key, entity) {\n        if (!entity) {\n            return false;\n        }\n        return (key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) === 0 &&\n            entity.hasOwnProperty(\"aliases\") &&\n            entity.hasOwnProperty(\"preferred_cache\") &&\n            entity.hasOwnProperty(\"preferred_network\") &&\n            entity.hasOwnProperty(\"canonical_authority\") &&\n            entity.hasOwnProperty(\"authorization_endpoint\") &&\n            entity.hasOwnProperty(\"token_endpoint\") &&\n            entity.hasOwnProperty(\"issuer\") &&\n            entity.hasOwnProperty(\"aliasesFromNetwork\") &&\n            entity.hasOwnProperty(\"endpointsFromNetwork\") &&\n            entity.hasOwnProperty(\"expiresAt\") &&\n            entity.hasOwnProperty(\"jwks_uri\"));\n    }\n}\n\nexport { AuthorityMetadataEntity };\n//# sourceMappingURL=AuthorityMetadataEntity.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass CacheRecord {\n    constructor(accountEntity, idTokenEntity, accessTokenEntity, refreshTokenEntity, appMetadataEntity) {\n        this.account = accountEntity || null;\n        this.idToken = idTokenEntity || null;\n        this.accessToken = accessTokenEntity || null;\n        this.refreshToken = refreshTokenEntity || null;\n        this.appMetadata = appMetadataEntity || null;\n    }\n}\n\nexport { CacheRecord };\n//# sourceMappingURL=CacheRecord.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { CredentialType, CacheType, Separators, Constants, AuthenticationScheme } from '../../utils/Constants.mjs';\nimport { createClientAuthError } from '../../error/ClientAuthError.mjs';\nimport { unexpectedCredentialType } from '../../error/ClientAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Base type for credentials to be stored in the cache: eg: ACCESS_TOKEN, ID_TOKEN etc\n *\n * Key:Value Schema:\n *\n * Key: <home_account_id*>-<environment>-<credential_type>-<client_id>-<realm*>-<target*>-<requestedClaims*>-<scheme*>\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      familyId: Family ID identifier, usually only used for refresh tokens\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\n *      tokenType: Matches the authentication scheme for which the token was issued (i.e. Bearer or pop)\n *      requestedClaimsHash: Matches the SHA 256 hash of the claims object included in the token request\n *      userAssertionHash: Matches the SHA 256 hash of the obo_assertion for the OBO flow\n * }\n */\nclass CredentialEntity {\n    /**\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\n     */\n    generateAccountId() {\n        return CredentialEntity.generateAccountIdForCacheKey(this.homeAccountId, this.environment);\n    }\n    /**\n     * Generate Credential Id key component as per the schema: <credential_type>-<client_id>-<realm>\n     */\n    generateCredentialId() {\n        return CredentialEntity.generateCredentialIdForCacheKey(this.credentialType, this.clientId, this.realm, this.familyId);\n    }\n    /**\n     * Generate target key component as per schema: <target>\n     */\n    generateTarget() {\n        return CredentialEntity.generateTargetForCacheKey(this.target);\n    }\n    /**\n     * generates credential key\n     */\n    generateCredentialKey() {\n        return CredentialEntity.generateCredentialCacheKey(this.homeAccountId, this.environment, this.credentialType, this.clientId, this.realm, this.target, this.familyId, this.tokenType, this.requestedClaimsHash);\n    }\n    /**\n     * returns the type of the cache (in this case credential)\n     */\n    generateType() {\n        switch (this.credentialType) {\n            case CredentialType.ID_TOKEN:\n                return CacheType.ID_TOKEN;\n            case CredentialType.ACCESS_TOKEN:\n            case CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME:\n                return CacheType.ACCESS_TOKEN;\n            case CredentialType.REFRESH_TOKEN:\n                return CacheType.REFRESH_TOKEN;\n            default: {\n                throw createClientAuthError(unexpectedCredentialType);\n            }\n        }\n    }\n    /**\n     * generates credential key\n     * <home_account_id*>-\\<environment>-<credential_type>-<client_id>-<realm\\*>-<target\\*>-<scheme\\*>\n     */\n    static generateCredentialCacheKey(homeAccountId, environment, credentialType, clientId, realm, target, familyId, tokenType, requestedClaimsHash) {\n        const credentialKey = [\n            this.generateAccountIdForCacheKey(homeAccountId, environment),\n            this.generateCredentialIdForCacheKey(credentialType, clientId, realm, familyId),\n            this.generateTargetForCacheKey(target),\n            this.generateClaimsHashForCacheKey(requestedClaimsHash),\n            this.generateSchemeForCacheKey(tokenType),\n        ];\n        return credentialKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n    /**\n     * generates Account Id for keys\n     * @param homeAccountId\n     * @param environment\n     */\n    static generateAccountIdForCacheKey(homeAccountId, environment) {\n        const accountId = [homeAccountId, environment];\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n    /**\n     * Generates Credential Id for keys\n     * @param credentialType\n     * @param realm\n     * @param clientId\n     * @param familyId\n     */\n    static generateCredentialIdForCacheKey(credentialType, clientId, realm, familyId) {\n        const clientOrFamilyId = credentialType === CredentialType.REFRESH_TOKEN\n            ? familyId || clientId\n            : clientId;\n        const credentialId = [\n            credentialType,\n            clientOrFamilyId,\n            realm || Constants.EMPTY_STRING,\n        ];\n        return credentialId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n    /**\n     * Generate target key component as per schema: <target>\n     */\n    static generateTargetForCacheKey(scopes) {\n        return (scopes || Constants.EMPTY_STRING).toLowerCase();\n    }\n    /**\n     * Generate requested claims key component as per schema: <requestedClaims>\n     */\n    static generateClaimsHashForCacheKey(requestedClaimsHash) {\n        return (requestedClaimsHash || Constants.EMPTY_STRING).toLowerCase();\n    }\n    /**\n     * Generate scheme key componenet as per schema: <scheme>\n     */\n    static generateSchemeForCacheKey(tokenType) {\n        /*\n         * PoP Tokens and SSH certs include scheme in cache key\n         * Cast to lowercase to handle \"bearer\" from ADFS\n         */\n        return tokenType &&\n            tokenType.toLowerCase() !==\n                AuthenticationScheme.BEARER.toLowerCase()\n            ? tokenType.toLowerCase()\n            : Constants.EMPTY_STRING;\n    }\n}\n\nexport { CredentialEntity };\n//# sourceMappingURL=CredentialEntity.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { CredentialEntity } from './CredentialEntity.mjs';\nimport { CredentialType } from '../../utils/Constants.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * ID_TOKEN Cache\n *\n * Key:Value Schema:\n *\n * Key Example: uid.utid-login.microsoftonline.com-idtoken-clientId-contoso.com-\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      realm: Full tenant or organizational identifier that the account belongs to\n * }\n */\nclass IdTokenEntity extends CredentialEntity {\n    /**\n     * Create IdTokenEntity\n     * @param homeAccountId\n     * @param authenticationResult\n     * @param clientId\n     * @param authority\n     */\n    static createIdTokenEntity(homeAccountId, environment, idToken, clientId, tenantId) {\n        const idTokenEntity = new IdTokenEntity();\n        idTokenEntity.credentialType = CredentialType.ID_TOKEN;\n        idTokenEntity.homeAccountId = homeAccountId;\n        idTokenEntity.environment = environment;\n        idTokenEntity.clientId = clientId;\n        idTokenEntity.secret = idToken;\n        idTokenEntity.realm = tenantId;\n        return idTokenEntity;\n    }\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isIdTokenEntity(entity) {\n        if (!entity) {\n            return false;\n        }\n        return (entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"credentialType\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"secret\") &&\n            entity[\"credentialType\"] === CredentialType.ID_TOKEN);\n    }\n}\n\nexport { IdTokenEntity };\n//# sourceMappingURL=IdTokenEntity.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { CredentialEntity } from './CredentialEntity.mjs';\nimport { CredentialType } from '../../utils/Constants.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * REFRESH_TOKEN Cache\n *\n * Key:Value Schema:\n *\n * Key Example: uid.utid-login.microsoftonline.com-refreshtoken-clientId--\n *\n * Value:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      familyId: Family ID identifier, '1' represents Microsoft Family\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\n * }\n */\nclass RefreshTokenEntity extends CredentialEntity {\n    /**\n     * Create RefreshTokenEntity\n     * @param homeAccountId\n     * @param authenticationResult\n     * @param clientId\n     * @param authority\n     */\n    static createRefreshTokenEntity(homeAccountId, environment, refreshToken, clientId, familyId, userAssertionHash) {\n        const rtEntity = new RefreshTokenEntity();\n        rtEntity.clientId = clientId;\n        rtEntity.credentialType = CredentialType.REFRESH_TOKEN;\n        rtEntity.environment = environment;\n        rtEntity.homeAccountId = homeAccountId;\n        rtEntity.secret = refreshToken;\n        rtEntity.userAssertionHash = userAssertionHash;\n        if (familyId)\n            rtEntity.familyId = familyId;\n        return rtEntity;\n    }\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isRefreshTokenEntity(entity) {\n        if (!entity) {\n            return false;\n        }\n        return (entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"credentialType\") &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"secret\") &&\n            entity[\"credentialType\"] === CredentialType.REFRESH_TOKEN);\n    }\n}\n\nexport { RefreshTokenEntity };\n//# sourceMappingURL=RefreshTokenEntity.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { SERVER_TELEM_CONSTANTS } from '../../utils/Constants.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass ServerTelemetryEntity {\n    constructor() {\n        this.failedRequests = [];\n        this.errors = [];\n        this.cacheHits = 0;\n    }\n    /**\n     * validates if a given cache entry is \"Telemetry\", parses <key,value>\n     * @param key\n     * @param entity\n     */\n    static isServerTelemetryEntity(key, entity) {\n        const validateKey = key.indexOf(SERVER_TELEM_CONSTANTS.CACHE_KEY) === 0;\n        let validateEntity = true;\n        if (entity) {\n            validateEntity =\n                entity.hasOwnProperty(\"failedRequests\") &&\n                    entity.hasOwnProperty(\"errors\") &&\n                    entity.hasOwnProperty(\"cacheHits\");\n        }\n        return validateKey && validateEntity;\n    }\n}\n\nexport { ServerTelemetryEntity };\n//# sourceMappingURL=ServerTelemetryEntity.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { DEFAULT_CRYPTO_IMPLEMENTATION } from '../crypto/ICrypto.mjs';\nimport { Logger, LogLevel } from '../logger/Logger.mjs';\nimport { Constants } from '../utils/Constants.mjs';\nimport { version } from '../packageMetadata.mjs';\nimport { AzureCloudInstance } from '../authority/AuthorityOptions.mjs';\nimport { DefaultStorageClass } from '../cache/CacheManager.mjs';\nimport { ProtocolMode } from '../authority/ProtocolMode.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { methodNotImplemented } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n// Token renewal offset default in seconds\nconst DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\nconst DEFAULT_SYSTEM_OPTIONS = {\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\n    preventCorsPreflight: false,\n};\nconst DEFAULT_LOGGER_IMPLEMENTATION = {\n    loggerCallback: () => {\n        // allow users to not set loggerCallback\n    },\n    piiLoggingEnabled: false,\n    logLevel: LogLevel.Info,\n    correlationId: Constants.EMPTY_STRING,\n};\nconst DEFAULT_CACHE_OPTIONS = {\n    claimsBasedCachingEnabled: false,\n};\nconst DEFAULT_NETWORK_IMPLEMENTATION = {\n    async sendGetRequestAsync() {\n        throw createClientAuthError(methodNotImplemented);\n    },\n    async sendPostRequestAsync() {\n        throw createClientAuthError(methodNotImplemented);\n    },\n};\nconst DEFAULT_LIBRARY_INFO = {\n    sku: Constants.SKU,\n    version: version,\n    cpu: Constants.EMPTY_STRING,\n    os: Constants.EMPTY_STRING,\n};\nconst DEFAULT_CLIENT_CREDENTIALS = {\n    clientSecret: Constants.EMPTY_STRING,\n    clientAssertion: undefined,\n};\nconst DEFAULT_AZURE_CLOUD_OPTIONS = {\n    azureCloudInstance: AzureCloudInstance.None,\n    tenant: `${Constants.DEFAULT_COMMON_TENANT}`,\n};\nconst DEFAULT_TELEMETRY_OPTIONS = {\n    application: {\n        appName: \"\",\n        appVersion: \"\",\n    },\n};\n/**\n * Function that sets the default options when not explicitly configured from app developer\n *\n * @param Configuration\n *\n * @returns Configuration\n */\nfunction buildClientConfiguration({ authOptions: userAuthOptions, systemOptions: userSystemOptions, loggerOptions: userLoggerOption, cacheOptions: userCacheOptions, storageInterface: storageImplementation, networkInterface: networkImplementation, cryptoInterface: cryptoImplementation, clientCredentials: clientCredentials, libraryInfo: libraryInfo, telemetry: telemetry, serverTelemetryManager: serverTelemetryManager, persistencePlugin: persistencePlugin, serializableCache: serializableCache, }) {\n    const loggerOptions = {\n        ...DEFAULT_LOGGER_IMPLEMENTATION,\n        ...userLoggerOption,\n    };\n    return {\n        authOptions: buildAuthOptions(userAuthOptions),\n        systemOptions: { ...DEFAULT_SYSTEM_OPTIONS, ...userSystemOptions },\n        loggerOptions: loggerOptions,\n        cacheOptions: { ...DEFAULT_CACHE_OPTIONS, ...userCacheOptions },\n        storageInterface: storageImplementation ||\n            new DefaultStorageClass(userAuthOptions.clientId, DEFAULT_CRYPTO_IMPLEMENTATION, new Logger(loggerOptions)),\n        networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\n        clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\n        libraryInfo: { ...DEFAULT_LIBRARY_INFO, ...libraryInfo },\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...telemetry },\n        serverTelemetryManager: serverTelemetryManager || null,\n        persistencePlugin: persistencePlugin || null,\n        serializableCache: serializableCache || null,\n    };\n}\n/**\n * Construct authoptions from the client and platform passed values\n * @param authOptions\n */\nfunction buildAuthOptions(authOptions) {\n    return {\n        clientCapabilities: [],\n        azureCloudOptions: DEFAULT_AZURE_CLOUD_OPTIONS,\n        skipAuthorityMetadataCache: false,\n        ...authOptions,\n    };\n}\n/**\n * Returns true if config has protocolMode set to ProtocolMode.OIDC, false otherwise\n * @param ClientConfiguration\n */\nfunction isOidcProtocolMode(config) {\n    return (config.authOptions.authority.options.protocolMode === ProtocolMode.OIDC);\n}\n\nexport { DEFAULT_SYSTEM_OPTIONS, buildClientConfiguration, isOidcProtocolMode };\n//# sourceMappingURL=ClientConfiguration.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { methodNotImplemented } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst DEFAULT_CRYPTO_IMPLEMENTATION = {\n    createNewGuid: () => {\n        throw createClientAuthError(methodNotImplemented);\n    },\n    base64Decode: () => {\n        throw createClientAuthError(methodNotImplemented);\n    },\n    base64Encode: () => {\n        throw createClientAuthError(methodNotImplemented);\n    },\n    async getPublicKeyThumbprint() {\n        throw createClientAuthError(methodNotImplemented);\n    },\n    async removeTokenBindingKey() {\n        throw createClientAuthError(methodNotImplemented);\n    },\n    async clearKeystore() {\n        throw createClientAuthError(methodNotImplemented);\n    },\n    async signJwt() {\n        throw createClientAuthError(methodNotImplemented);\n    },\n    async hashString() {\n        throw createClientAuthError(methodNotImplemented);\n    },\n};\n\nexport { DEFAULT_CRYPTO_IMPLEMENTATION };\n//# sourceMappingURL=ICrypto.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { TimeUtils } from '../utils/TimeUtils.mjs';\nimport { UrlString } from '../url/UrlString.mjs';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\nimport { invokeAsync } from '../utils/FunctionWrappers.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst KeyLocation = {\n    SW: \"sw\",\n    UHW: \"uhw\",\n};\n/** @internal */\nclass PopTokenGenerator {\n    constructor(cryptoUtils, performanceClient) {\n        this.cryptoUtils = cryptoUtils;\n        this.performanceClient = performanceClient;\n    }\n    /**\n     * Generates the req_cnf validated at the RP in the POP protocol for SHR parameters\n     * and returns an object containing the keyid, the full req_cnf string and the req_cnf string hash\n     * @param request\n     * @returns\n     */\n    async generateCnf(request, logger) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.PopTokenGenerateCnf, request.correlationId);\n        const reqCnf = await invokeAsync(this.generateKid.bind(this), PerformanceEvents.PopTokenGenerateCnf, logger, this.performanceClient, request.correlationId)(request);\n        const reqCnfString = this.cryptoUtils.base64Encode(JSON.stringify(reqCnf));\n        return {\n            kid: reqCnf.kid,\n            reqCnfString,\n            reqCnfHash: await this.cryptoUtils.hashString(reqCnfString),\n        };\n    }\n    /**\n     * Generates key_id for a SHR token request\n     * @param request\n     * @returns\n     */\n    async generateKid(request) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.PopTokenGenerateKid, request.correlationId);\n        const kidThumbprint = await this.cryptoUtils.getPublicKeyThumbprint(request);\n        return {\n            kid: kidThumbprint,\n            xms_ksl: KeyLocation.SW,\n        };\n    }\n    /**\n     * Signs the POP access_token with the local generated key-pair\n     * @param accessToken\n     * @param request\n     * @returns\n     */\n    async signPopToken(accessToken, keyId, request) {\n        return this.signPayload(accessToken, keyId, request);\n    }\n    /**\n     * Utility function to generate the signed JWT for an access_token\n     * @param payload\n     * @param kid\n     * @param request\n     * @param claims\n     * @returns\n     */\n    async signPayload(payload, keyId, request, claims) {\n        // Deconstruct request to extract SHR parameters\n        const { resourceRequestMethod, resourceRequestUri, shrClaims, shrNonce, } = request;\n        const resourceUrlString = resourceRequestUri\n            ? new UrlString(resourceRequestUri)\n            : undefined;\n        const resourceUrlComponents = resourceUrlString?.getUrlComponents();\n        return await this.cryptoUtils.signJwt({\n            at: payload,\n            ts: TimeUtils.nowSeconds(),\n            m: resourceRequestMethod?.toUpperCase(),\n            u: resourceUrlComponents?.HostNameAndPort,\n            nonce: shrNonce || this.cryptoUtils.createNewGuid(),\n            p: resourceUrlComponents?.AbsolutePath,\n            q: resourceUrlComponents?.QueryString\n                ? [[], resourceUrlComponents.QueryString]\n                : undefined,\n            client_claims: shrClaims || undefined,\n            ...claims,\n        }, keyId, request.correlationId);\n    }\n}\n\nexport { PopTokenGenerator };\n//# sourceMappingURL=PopTokenGenerator.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { Constants } from '../utils/Constants.mjs';\nimport { unexpectedError, postRequestFailed } from './AuthErrorCodes.mjs';\nimport * as AuthErrorCodes from './AuthErrorCodes.mjs';\nexport { AuthErrorCodes };\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst AuthErrorMessages = {\n    [unexpectedError]: \"Unexpected error in authentication.\",\n    [postRequestFailed]: \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\",\n};\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use AuthErrorCodes instead\n */\nconst AuthErrorMessage = {\n    unexpectedError: {\n        code: unexpectedError,\n        desc: AuthErrorMessages[unexpectedError],\n    },\n    postRequestFailed: {\n        code: postRequestFailed,\n        desc: AuthErrorMessages[postRequestFailed],\n    },\n};\n/**\n * General error class thrown by the MSAL.js library.\n */\nclass AuthError extends Error {\n    constructor(errorCode, errorMessage, suberror) {\n        const errorString = errorMessage\n            ? `${errorCode}: ${errorMessage}`\n            : errorCode;\n        super(errorString);\n        Object.setPrototypeOf(this, AuthError.prototype);\n        this.errorCode = errorCode || Constants.EMPTY_STRING;\n        this.errorMessage = errorMessage || Constants.EMPTY_STRING;\n        this.subError = suberror || Constants.EMPTY_STRING;\n        this.name = \"AuthError\";\n    }\n    setCorrelationId(correlationId) {\n        this.correlationId = correlationId;\n    }\n}\nfunction createAuthError(code, additionalMessage) {\n    return new AuthError(code, additionalMessage\n        ? `${AuthErrorMessages[code]} ${additionalMessage}`\n        : AuthErrorMessages[code]);\n}\n\nexport { AuthError, AuthErrorMessage, AuthErrorMessages, createAuthError };\n//# sourceMappingURL=AuthError.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst unexpectedError = \"unexpected_error\";\nconst postRequestFailed = \"post_request_failed\";\n\nexport { postRequestFailed, unexpectedError };\n//# sourceMappingURL=AuthErrorCodes.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { AuthError } from './AuthError.mjs';\nimport { clientInfoDecodingError, clientInfoEmptyError, tokenParsingError, nullOrEmptyToken, endpointResolutionError, networkError, openIdConfigError, hashNotDeserialized, invalidState, stateMismatch, stateNotFound, nonceMismatch, authTimeNotFound, maxAgeTranspired, multipleMatchingTokens, multipleMatchingAccounts, multipleMatchingAppMetadata, requestCannotBeMade, cannotRemoveEmptyScope, cannotAppendScopeSet, emptyInputScopeSet, deviceCodePollingCancelled, deviceCodeExpired, deviceCodeUnknownError, noAccountInSilentRequest, invalidCacheRecord, invalidCacheEnvironment, noAccountFound, noCryptoObject, unexpectedCredentialType, invalidAssertion, invalidClientCredential, tokenRefreshRequired, userTimeoutReached, tokenClaimsCnfRequiredForSignedJwt, authorizationCodeMissingFromServerResponse, bindingKeyNotRemoved, endSessionEndpointNotSupported, keyIdMissing, noNetworkConnectivity, userCanceled, missingTenantIdError, nestedAppAuthBridgeDisabled, methodNotImplemented } from './ClientAuthErrorCodes.mjs';\nimport * as ClientAuthErrorCodes from './ClientAuthErrorCodes.mjs';\nexport { ClientAuthErrorCodes };\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst ClientAuthErrorMessages = {\n    [clientInfoDecodingError]: \"The client info could not be parsed/decoded correctly\",\n    [clientInfoEmptyError]: \"The client info was empty\",\n    [tokenParsingError]: \"Token cannot be parsed\",\n    [nullOrEmptyToken]: \"The token is null or empty\",\n    [endpointResolutionError]: \"Endpoints cannot be resolved\",\n    [networkError]: \"Network request failed\",\n    [openIdConfigError]: \"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.\",\n    [hashNotDeserialized]: \"The hash parameters could not be deserialized\",\n    [invalidState]: \"State was not the expected format\",\n    [stateMismatch]: \"State mismatch error\",\n    [stateNotFound]: \"State not found\",\n    [nonceMismatch]: \"Nonce mismatch error\",\n    [authTimeNotFound]: \"Max Age was requested and the ID token is missing the auth_time variable.\" +\n        \" auth_time is an optional claim and is not enabled by default - it must be enabled.\" +\n        \" See https://aka.ms/msaljs/optional-claims for more information.\",\n    [maxAgeTranspired]: \"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.\",\n    [multipleMatchingTokens]: \"The cache contains multiple tokens satisfying the requirements. \" +\n        \"Call AcquireToken again providing more requirements such as authority or account.\",\n    [multipleMatchingAccounts]: \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\",\n    [multipleMatchingAppMetadata]: \"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata\",\n    [requestCannotBeMade]: \"Token request cannot be made without authorization code or refresh token.\",\n    [cannotRemoveEmptyScope]: \"Cannot remove null or empty scope from ScopeSet\",\n    [cannotAppendScopeSet]: \"Cannot append ScopeSet\",\n    [emptyInputScopeSet]: \"Empty input ScopeSet cannot be processed\",\n    [deviceCodePollingCancelled]: \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\",\n    [deviceCodeExpired]: \"Device code is expired.\",\n    [deviceCodeUnknownError]: \"Device code stopped polling for unknown reasons.\",\n    [noAccountInSilentRequest]: \"Please pass an account object, silent flow is not supported without account information\",\n    [invalidCacheRecord]: \"Cache record object was null or undefined.\",\n    [invalidCacheEnvironment]: \"Invalid environment when attempting to create cache entry\",\n    [noAccountFound]: \"No account found in cache for given key.\",\n    [noCryptoObject]: \"No crypto object detected.\",\n    [unexpectedCredentialType]: \"Unexpected credential type.\",\n    [invalidAssertion]: \"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515\",\n    [invalidClientCredential]: \"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential\",\n    [tokenRefreshRequired]: \"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.\",\n    [userTimeoutReached]: \"User defined timeout for device code polling reached\",\n    [tokenClaimsCnfRequiredForSignedJwt]: \"Cannot generate a POP jwt if the token_claims are not populated\",\n    [authorizationCodeMissingFromServerResponse]: \"Server response does not contain an authorization code to proceed\",\n    [bindingKeyNotRemoved]: \"Could not remove the credential's binding key from storage.\",\n    [endSessionEndpointNotSupported]: \"The provided authority does not support logout\",\n    [keyIdMissing]: \"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.\",\n    [noNetworkConnectivity]: \"No network connectivity. Check your internet connection.\",\n    [userCanceled]: \"User cancelled the flow.\",\n    [missingTenantIdError]: \"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.\",\n    [methodNotImplemented]: \"This method has not been implemented\",\n    [nestedAppAuthBridgeDisabled]: \"The nested app auth bridge is disabled\",\n};\n/**\n * String constants used by error codes and messages.\n * @deprecated Use ClientAuthErrorCodes instead\n */\nconst ClientAuthErrorMessage = {\n    clientInfoDecodingError: {\n        code: clientInfoDecodingError,\n        desc: ClientAuthErrorMessages[clientInfoDecodingError],\n    },\n    clientInfoEmptyError: {\n        code: clientInfoEmptyError,\n        desc: ClientAuthErrorMessages[clientInfoEmptyError],\n    },\n    tokenParsingError: {\n        code: tokenParsingError,\n        desc: ClientAuthErrorMessages[tokenParsingError],\n    },\n    nullOrEmptyToken: {\n        code: nullOrEmptyToken,\n        desc: ClientAuthErrorMessages[nullOrEmptyToken],\n    },\n    endpointResolutionError: {\n        code: endpointResolutionError,\n        desc: ClientAuthErrorMessages[endpointResolutionError],\n    },\n    networkError: {\n        code: networkError,\n        desc: ClientAuthErrorMessages[networkError],\n    },\n    unableToGetOpenidConfigError: {\n        code: openIdConfigError,\n        desc: ClientAuthErrorMessages[openIdConfigError],\n    },\n    hashNotDeserialized: {\n        code: hashNotDeserialized,\n        desc: ClientAuthErrorMessages[hashNotDeserialized],\n    },\n    invalidStateError: {\n        code: invalidState,\n        desc: ClientAuthErrorMessages[invalidState],\n    },\n    stateMismatchError: {\n        code: stateMismatch,\n        desc: ClientAuthErrorMessages[stateMismatch],\n    },\n    stateNotFoundError: {\n        code: stateNotFound,\n        desc: ClientAuthErrorMessages[stateNotFound],\n    },\n    nonceMismatchError: {\n        code: nonceMismatch,\n        desc: ClientAuthErrorMessages[nonceMismatch],\n    },\n    authTimeNotFoundError: {\n        code: authTimeNotFound,\n        desc: ClientAuthErrorMessages[authTimeNotFound],\n    },\n    maxAgeTranspired: {\n        code: maxAgeTranspired,\n        desc: ClientAuthErrorMessages[maxAgeTranspired],\n    },\n    multipleMatchingTokens: {\n        code: multipleMatchingTokens,\n        desc: ClientAuthErrorMessages[multipleMatchingTokens],\n    },\n    multipleMatchingAccounts: {\n        code: multipleMatchingAccounts,\n        desc: ClientAuthErrorMessages[multipleMatchingAccounts],\n    },\n    multipleMatchingAppMetadata: {\n        code: multipleMatchingAppMetadata,\n        desc: ClientAuthErrorMessages[multipleMatchingAppMetadata],\n    },\n    tokenRequestCannotBeMade: {\n        code: requestCannotBeMade,\n        desc: ClientAuthErrorMessages[requestCannotBeMade],\n    },\n    removeEmptyScopeError: {\n        code: cannotRemoveEmptyScope,\n        desc: ClientAuthErrorMessages[cannotRemoveEmptyScope],\n    },\n    appendScopeSetError: {\n        code: cannotAppendScopeSet,\n        desc: ClientAuthErrorMessages[cannotAppendScopeSet],\n    },\n    emptyInputScopeSetError: {\n        code: emptyInputScopeSet,\n        desc: ClientAuthErrorMessages[emptyInputScopeSet],\n    },\n    DeviceCodePollingCancelled: {\n        code: deviceCodePollingCancelled,\n        desc: ClientAuthErrorMessages[deviceCodePollingCancelled],\n    },\n    DeviceCodeExpired: {\n        code: deviceCodeExpired,\n        desc: ClientAuthErrorMessages[deviceCodeExpired],\n    },\n    DeviceCodeUnknownError: {\n        code: deviceCodeUnknownError,\n        desc: ClientAuthErrorMessages[deviceCodeUnknownError],\n    },\n    NoAccountInSilentRequest: {\n        code: noAccountInSilentRequest,\n        desc: ClientAuthErrorMessages[noAccountInSilentRequest],\n    },\n    invalidCacheRecord: {\n        code: invalidCacheRecord,\n        desc: ClientAuthErrorMessages[invalidCacheRecord],\n    },\n    invalidCacheEnvironment: {\n        code: invalidCacheEnvironment,\n        desc: ClientAuthErrorMessages[invalidCacheEnvironment],\n    },\n    noAccountFound: {\n        code: noAccountFound,\n        desc: ClientAuthErrorMessages[noAccountFound],\n    },\n    noCryptoObj: {\n        code: noCryptoObject,\n        desc: ClientAuthErrorMessages[noCryptoObject],\n    },\n    unexpectedCredentialType: {\n        code: unexpectedCredentialType,\n        desc: ClientAuthErrorMessages[unexpectedCredentialType],\n    },\n    invalidAssertion: {\n        code: invalidAssertion,\n        desc: ClientAuthErrorMessages[invalidAssertion],\n    },\n    invalidClientCredential: {\n        code: invalidClientCredential,\n        desc: ClientAuthErrorMessages[invalidClientCredential],\n    },\n    tokenRefreshRequired: {\n        code: tokenRefreshRequired,\n        desc: ClientAuthErrorMessages[tokenRefreshRequired],\n    },\n    userTimeoutReached: {\n        code: userTimeoutReached,\n        desc: ClientAuthErrorMessages[userTimeoutReached],\n    },\n    tokenClaimsRequired: {\n        code: tokenClaimsCnfRequiredForSignedJwt,\n        desc: ClientAuthErrorMessages[tokenClaimsCnfRequiredForSignedJwt],\n    },\n    noAuthorizationCodeFromServer: {\n        code: authorizationCodeMissingFromServerResponse,\n        desc: ClientAuthErrorMessages[authorizationCodeMissingFromServerResponse],\n    },\n    bindingKeyNotRemovedError: {\n        code: bindingKeyNotRemoved,\n        desc: ClientAuthErrorMessages[bindingKeyNotRemoved],\n    },\n    logoutNotSupported: {\n        code: endSessionEndpointNotSupported,\n        desc: ClientAuthErrorMessages[endSessionEndpointNotSupported],\n    },\n    keyIdMissing: {\n        code: keyIdMissing,\n        desc: ClientAuthErrorMessages[keyIdMissing],\n    },\n    noNetworkConnectivity: {\n        code: noNetworkConnectivity,\n        desc: ClientAuthErrorMessages[noNetworkConnectivity],\n    },\n    userCanceledError: {\n        code: userCanceled,\n        desc: ClientAuthErrorMessages[userCanceled],\n    },\n    missingTenantIdError: {\n        code: missingTenantIdError,\n        desc: ClientAuthErrorMessages[missingTenantIdError],\n    },\n    nestedAppAuthBridgeDisabled: {\n        code: nestedAppAuthBridgeDisabled,\n        desc: ClientAuthErrorMessages[nestedAppAuthBridgeDisabled],\n    },\n};\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nclass ClientAuthError extends AuthError {\n    constructor(errorCode, additionalMessage) {\n        super(errorCode, additionalMessage\n            ? `${ClientAuthErrorMessages[errorCode]}: ${additionalMessage}`\n            : ClientAuthErrorMessages[errorCode]);\n        this.name = \"ClientAuthError\";\n        Object.setPrototypeOf(this, ClientAuthError.prototype);\n    }\n}\nfunction createClientAuthError(errorCode, additionalMessage) {\n    return new ClientAuthError(errorCode, additionalMessage);\n}\n\nexport { ClientAuthError, ClientAuthErrorMessage, ClientAuthErrorMessages, createClientAuthError };\n//# sourceMappingURL=ClientAuthError.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst clientInfoDecodingError = \"client_info_decoding_error\";\nconst clientInfoEmptyError = \"client_info_empty_error\";\nconst tokenParsingError = \"token_parsing_error\";\nconst nullOrEmptyToken = \"null_or_empty_token\";\nconst endpointResolutionError = \"endpoints_resolution_error\";\nconst networkError = \"network_error\";\nconst openIdConfigError = \"openid_config_error\";\nconst hashNotDeserialized = \"hash_not_deserialized\";\nconst invalidState = \"invalid_state\";\nconst stateMismatch = \"state_mismatch\";\nconst stateNotFound = \"state_not_found\";\nconst nonceMismatch = \"nonce_mismatch\";\nconst authTimeNotFound = \"auth_time_not_found\";\nconst maxAgeTranspired = \"max_age_transpired\";\nconst multipleMatchingTokens = \"multiple_matching_tokens\";\nconst multipleMatchingAccounts = \"multiple_matching_accounts\";\nconst multipleMatchingAppMetadata = \"multiple_matching_appMetadata\";\nconst requestCannotBeMade = \"request_cannot_be_made\";\nconst cannotRemoveEmptyScope = \"cannot_remove_empty_scope\";\nconst cannotAppendScopeSet = \"cannot_append_scopeset\";\nconst emptyInputScopeSet = \"empty_input_scopeset\";\nconst deviceCodePollingCancelled = \"device_code_polling_cancelled\";\nconst deviceCodeExpired = \"device_code_expired\";\nconst deviceCodeUnknownError = \"device_code_unknown_error\";\nconst noAccountInSilentRequest = \"no_account_in_silent_request\";\nconst invalidCacheRecord = \"invalid_cache_record\";\nconst invalidCacheEnvironment = \"invalid_cache_environment\";\nconst noAccountFound = \"no_account_found\";\nconst noCryptoObject = \"no_crypto_object\";\nconst unexpectedCredentialType = \"unexpected_credential_type\";\nconst invalidAssertion = \"invalid_assertion\";\nconst invalidClientCredential = \"invalid_client_credential\";\nconst tokenRefreshRequired = \"token_refresh_required\";\nconst userTimeoutReached = \"user_timeout_reached\";\nconst tokenClaimsCnfRequiredForSignedJwt = \"token_claims_cnf_required_for_signedjwt\";\nconst authorizationCodeMissingFromServerResponse = \"authorization_code_missing_from_server_response\";\nconst bindingKeyNotRemoved = \"binding_key_not_removed\";\nconst endSessionEndpointNotSupported = \"end_session_endpoint_not_supported\";\nconst keyIdMissing = \"key_id_missing\";\nconst noNetworkConnectivity = \"no_network_connectivity\";\nconst userCanceled = \"user_canceled\";\nconst missingTenantIdError = \"missing_tenant_id_error\";\nconst methodNotImplemented = \"method_not_implemented\";\nconst nestedAppAuthBridgeDisabled = \"nested_app_auth_bridge_disabled\";\n\nexport { authTimeNotFound, authorizationCodeMissingFromServerResponse, bindingKeyNotRemoved, cannotAppendScopeSet, cannotRemoveEmptyScope, clientInfoDecodingError, clientInfoEmptyError, deviceCodeExpired, deviceCodePollingCancelled, deviceCodeUnknownError, emptyInputScopeSet, endSessionEndpointNotSupported, endpointResolutionError, hashNotDeserialized, invalidAssertion, invalidCacheEnvironment, invalidCacheRecord, invalidClientCredential, invalidState, keyIdMissing, maxAgeTranspired, methodNotImplemented, missingTenantIdError, multipleMatchingAccounts, multipleMatchingAppMetadata, multipleMatchingTokens, nestedAppAuthBridgeDisabled, networkError, noAccountFound, noAccountInSilentRequest, noCryptoObject, noNetworkConnectivity, nonceMismatch, nullOrEmptyToken, openIdConfigError, requestCannotBeMade, stateMismatch, stateNotFound, tokenClaimsCnfRequiredForSignedJwt, tokenParsingError, tokenRefreshRequired, unexpectedCredentialType, userCanceled, userTimeoutReached };\n//# sourceMappingURL=ClientAuthErrorCodes.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { AuthError } from './AuthError.mjs';\nimport { redirectUriEmpty, claimsRequestParsingError, authorityUriInsecure, urlParseError, urlEmptyError, emptyInputScopesError, invalidPromptValue, invalidClaims, tokenRequestEmpty, logoutRequestEmpty, invalidCodeChallengeMethod, pkceParamsMissing, invalidCloudDiscoveryMetadata, invalidAuthorityMetadata, untrustedAuthority, missingSshJwk, missingSshKid, missingNonceAuthenticationHeader, invalidAuthenticationHeader, cannotSetOIDCOptions, cannotAllowNativeBroker, authorityMismatch } from './ClientConfigurationErrorCodes.mjs';\nimport * as ClientConfigurationErrorCodes from './ClientConfigurationErrorCodes.mjs';\nexport { ClientConfigurationErrorCodes };\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst ClientConfigurationErrorMessages = {\n    [redirectUriEmpty]: \"A redirect URI is required for all calls, and none has been set.\",\n    [claimsRequestParsingError]: \"Could not parse the given claims request object.\",\n    [authorityUriInsecure]: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\",\n    [urlParseError]: \"URL could not be parsed into appropriate segments.\",\n    [urlEmptyError]: \"URL was empty or null.\",\n    [emptyInputScopesError]: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\",\n    [invalidPromptValue]: \"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest\",\n    [invalidClaims]: \"Given claims parameter must be a stringified JSON object.\",\n    [tokenRequestEmpty]: \"Token request was empty and not found in cache.\",\n    [logoutRequestEmpty]: \"The logout request was null or undefined.\",\n    [invalidCodeChallengeMethod]: 'code_challenge_method passed is invalid. Valid values are \"plain\" and \"S256\".',\n    [pkceParamsMissing]: \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\",\n    [invalidCloudDiscoveryMetadata]: \"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields\",\n    [invalidAuthorityMetadata]: \"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.\",\n    [untrustedAuthority]: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\",\n    [missingSshJwk]: \"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.\",\n    [missingSshKid]: \"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.\",\n    [missingNonceAuthenticationHeader]: \"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.\",\n    [invalidAuthenticationHeader]: \"Invalid authentication header provided\",\n    [cannotSetOIDCOptions]: \"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.\",\n    [cannotAllowNativeBroker]: \"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.\",\n    [authorityMismatch]: \"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority.\",\n};\n/**\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use ClientConfigurationErrorCodes instead\n */\nconst ClientConfigurationErrorMessage = {\n    redirectUriNotSet: {\n        code: redirectUriEmpty,\n        desc: ClientConfigurationErrorMessages[redirectUriEmpty],\n    },\n    claimsRequestParsingError: {\n        code: claimsRequestParsingError,\n        desc: ClientConfigurationErrorMessages[claimsRequestParsingError],\n    },\n    authorityUriInsecure: {\n        code: authorityUriInsecure,\n        desc: ClientConfigurationErrorMessages[authorityUriInsecure],\n    },\n    urlParseError: {\n        code: urlParseError,\n        desc: ClientConfigurationErrorMessages[urlParseError],\n    },\n    urlEmptyError: {\n        code: urlEmptyError,\n        desc: ClientConfigurationErrorMessages[urlEmptyError],\n    },\n    emptyScopesError: {\n        code: emptyInputScopesError,\n        desc: ClientConfigurationErrorMessages[emptyInputScopesError],\n    },\n    invalidPrompt: {\n        code: invalidPromptValue,\n        desc: ClientConfigurationErrorMessages[invalidPromptValue],\n    },\n    invalidClaimsRequest: {\n        code: invalidClaims,\n        desc: ClientConfigurationErrorMessages[invalidClaims],\n    },\n    tokenRequestEmptyError: {\n        code: tokenRequestEmpty,\n        desc: ClientConfigurationErrorMessages[tokenRequestEmpty],\n    },\n    logoutRequestEmptyError: {\n        code: logoutRequestEmpty,\n        desc: ClientConfigurationErrorMessages[logoutRequestEmpty],\n    },\n    invalidCodeChallengeMethod: {\n        code: invalidCodeChallengeMethod,\n        desc: ClientConfigurationErrorMessages[invalidCodeChallengeMethod],\n    },\n    invalidCodeChallengeParams: {\n        code: pkceParamsMissing,\n        desc: ClientConfigurationErrorMessages[pkceParamsMissing],\n    },\n    invalidCloudDiscoveryMetadata: {\n        code: invalidCloudDiscoveryMetadata,\n        desc: ClientConfigurationErrorMessages[invalidCloudDiscoveryMetadata],\n    },\n    invalidAuthorityMetadata: {\n        code: invalidAuthorityMetadata,\n        desc: ClientConfigurationErrorMessages[invalidAuthorityMetadata],\n    },\n    untrustedAuthority: {\n        code: untrustedAuthority,\n        desc: ClientConfigurationErrorMessages[untrustedAuthority],\n    },\n    missingSshJwk: {\n        code: missingSshJwk,\n        desc: ClientConfigurationErrorMessages[missingSshJwk],\n    },\n    missingSshKid: {\n        code: missingSshKid,\n        desc: ClientConfigurationErrorMessages[missingSshKid],\n    },\n    missingNonceAuthenticationHeader: {\n        code: missingNonceAuthenticationHeader,\n        desc: ClientConfigurationErrorMessages[missingNonceAuthenticationHeader],\n    },\n    invalidAuthenticationHeader: {\n        code: invalidAuthenticationHeader,\n        desc: ClientConfigurationErrorMessages[invalidAuthenticationHeader],\n    },\n    cannotSetOIDCOptions: {\n        code: cannotSetOIDCOptions,\n        desc: ClientConfigurationErrorMessages[cannotSetOIDCOptions],\n    },\n    cannotAllowNativeBroker: {\n        code: cannotAllowNativeBroker,\n        desc: ClientConfigurationErrorMessages[cannotAllowNativeBroker],\n    },\n    authorityMismatch: {\n        code: authorityMismatch,\n        desc: ClientConfigurationErrorMessages[authorityMismatch],\n    },\n};\n/**\n * Error thrown when there is an error in configuration of the MSAL.js library.\n */\nclass ClientConfigurationError extends AuthError {\n    constructor(errorCode) {\n        super(errorCode, ClientConfigurationErrorMessages[errorCode]);\n        this.name = \"ClientConfigurationError\";\n        Object.setPrototypeOf(this, ClientConfigurationError.prototype);\n    }\n}\nfunction createClientConfigurationError(errorCode) {\n    return new ClientConfigurationError(errorCode);\n}\n\nexport { ClientConfigurationError, ClientConfigurationErrorMessage, ClientConfigurationErrorMessages, createClientConfigurationError };\n//# sourceMappingURL=ClientConfigurationError.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst redirectUriEmpty = \"redirect_uri_empty\";\nconst claimsRequestParsingError = \"claims_request_parsing_error\";\nconst authorityUriInsecure = \"authority_uri_insecure\";\nconst urlParseError = \"url_parse_error\";\nconst urlEmptyError = \"empty_url_error\";\nconst emptyInputScopesError = \"empty_input_scopes_error\";\nconst invalidPromptValue = \"invalid_prompt_value\";\nconst invalidClaims = \"invalid_claims\";\nconst tokenRequestEmpty = \"token_request_empty\";\nconst logoutRequestEmpty = \"logout_request_empty\";\nconst invalidCodeChallengeMethod = \"invalid_code_challenge_method\";\nconst pkceParamsMissing = \"pkce_params_missing\";\nconst invalidCloudDiscoveryMetadata = \"invalid_cloud_discovery_metadata\";\nconst invalidAuthorityMetadata = \"invalid_authority_metadata\";\nconst untrustedAuthority = \"untrusted_authority\";\nconst missingSshJwk = \"missing_ssh_jwk\";\nconst missingSshKid = \"missing_ssh_kid\";\nconst missingNonceAuthenticationHeader = \"missing_nonce_authentication_header\";\nconst invalidAuthenticationHeader = \"invalid_authentication_header\";\nconst cannotSetOIDCOptions = \"cannot_set_OIDCOptions\";\nconst cannotAllowNativeBroker = \"cannot_allow_native_broker\";\nconst authorityMismatch = \"authority_mismatch\";\n\nexport { authorityMismatch, authorityUriInsecure, cannotAllowNativeBroker, cannotSetOIDCOptions, claimsRequestParsingError, emptyInputScopesError, invalidAuthenticationHeader, invalidAuthorityMetadata, invalidClaims, invalidCloudDiscoveryMetadata, invalidCodeChallengeMethod, invalidPromptValue, logoutRequestEmpty, missingNonceAuthenticationHeader, missingSshJwk, missingSshKid, pkceParamsMissing, redirectUriEmpty, tokenRequestEmpty, untrustedAuthority, urlEmptyError, urlParseError };\n//# sourceMappingURL=ClientConfigurationErrorCodes.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { Constants } from '../utils/Constants.mjs';\nimport { AuthError } from './AuthError.mjs';\nimport { noTokensFound, nativeAccountUnavailable, interactionRequired, consentRequired, loginRequired } from './InteractionRequiredAuthErrorCodes.mjs';\nimport * as InteractionRequiredAuthErrorCodes from './InteractionRequiredAuthErrorCodes.mjs';\nexport { InteractionRequiredAuthErrorCodes };\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\n */\nconst InteractionRequiredServerErrorMessage = [\n    interactionRequired,\n    consentRequired,\n    loginRequired,\n];\nconst InteractionRequiredAuthSubErrorMessage = [\n    \"message_only\",\n    \"additional_action\",\n    \"basic_action\",\n    \"user_password_expired\",\n    \"consent_required\",\n];\nconst InteractionRequiredAuthErrorMessages = {\n    [noTokensFound]: \"No refresh token found in the cache. Please sign-in.\",\n    [nativeAccountUnavailable]: \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\",\n};\n/**\n * Interaction required errors defined by the SDK\n * @deprecated Use InteractionRequiredAuthErrorCodes instead\n */\nconst InteractionRequiredAuthErrorMessage = {\n    noTokensFoundError: {\n        code: noTokensFound,\n        desc: InteractionRequiredAuthErrorMessages[noTokensFound],\n    },\n    native_account_unavailable: {\n        code: nativeAccountUnavailable,\n        desc: InteractionRequiredAuthErrorMessages[nativeAccountUnavailable],\n    },\n};\n/**\n * Error thrown when user interaction is required.\n */\nclass InteractionRequiredAuthError extends AuthError {\n    constructor(errorCode, errorMessage, subError, timestamp, traceId, correlationId, claims) {\n        super(errorCode, errorMessage, subError);\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\n        this.timestamp = timestamp || Constants.EMPTY_STRING;\n        this.traceId = traceId || Constants.EMPTY_STRING;\n        this.correlationId = correlationId || Constants.EMPTY_STRING;\n        this.claims = claims || Constants.EMPTY_STRING;\n        this.name = \"InteractionRequiredAuthError\";\n    }\n}\n/**\n * Helper function used to determine if an error thrown by the server requires interaction to resolve\n * @param errorCode\n * @param errorString\n * @param subError\n */\nfunction isInteractionRequiredError(errorCode, errorString, subError) {\n    const isInteractionRequiredErrorCode = !!errorCode &&\n        InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\n    const isInteractionRequiredSubError = !!subError &&\n        InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\n    const isInteractionRequiredErrorDesc = !!errorString &&\n        InteractionRequiredServerErrorMessage.some((irErrorCode) => {\n            return errorString.indexOf(irErrorCode) > -1;\n        });\n    return (isInteractionRequiredErrorCode ||\n        isInteractionRequiredErrorDesc ||\n        isInteractionRequiredSubError);\n}\n/**\n * Creates an InteractionRequiredAuthError\n */\nfunction createInteractionRequiredAuthError(errorCode) {\n    return new InteractionRequiredAuthError(errorCode, InteractionRequiredAuthErrorMessages[errorCode]);\n}\n\nexport { InteractionRequiredAuthError, InteractionRequiredAuthErrorMessage, InteractionRequiredAuthSubErrorMessage, InteractionRequiredServerErrorMessage, createInteractionRequiredAuthError, isInteractionRequiredError };\n//# sourceMappingURL=InteractionRequiredAuthError.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n// Codes defined by MSAL\nconst noTokensFound = \"no_tokens_found\";\nconst nativeAccountUnavailable = \"native_account_unavailable\";\n// Codes potentially returned by server\nconst interactionRequired = \"interaction_required\";\nconst consentRequired = \"consent_required\";\nconst loginRequired = \"login_required\";\n\nexport { consentRequired, interactionRequired, loginRequired, nativeAccountUnavailable, noTokensFound };\n//# sourceMappingURL=InteractionRequiredAuthErrorCodes.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { AuthError } from './AuthError.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Error thrown when there is an error with the server code, for example, unavailability.\n */\nclass ServerError extends AuthError {\n    constructor(errorCode, errorMessage, subError) {\n        super(errorCode, errorMessage, subError);\n        this.name = \"ServerError\";\n        Object.setPrototypeOf(this, ServerError.prototype);\n    }\n}\n\nexport { ServerError };\n//# sourceMappingURL=ServerError.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { Constants } from '../utils/Constants.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Log message level.\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\n    LogLevel[LogLevel[\"Trace\"] = 4] = \"Trace\";\n})(LogLevel || (LogLevel = {}));\n/**\n * Class which facilitates logging of messages to a specific place.\n */\nclass Logger {\n    constructor(loggerOptions, packageName, packageVersion) {\n        // Current log level, defaults to info.\n        this.level = LogLevel.Info;\n        const defaultLoggerCallback = () => {\n            return;\n        };\n        const setLoggerOptions = loggerOptions || Logger.createDefaultLoggerOptions();\n        this.localCallback =\n            setLoggerOptions.loggerCallback || defaultLoggerCallback;\n        this.piiLoggingEnabled = setLoggerOptions.piiLoggingEnabled || false;\n        this.level =\n            typeof setLoggerOptions.logLevel === \"number\"\n                ? setLoggerOptions.logLevel\n                : LogLevel.Info;\n        this.correlationId =\n            setLoggerOptions.correlationId || Constants.EMPTY_STRING;\n        this.packageName = packageName || Constants.EMPTY_STRING;\n        this.packageVersion = packageVersion || Constants.EMPTY_STRING;\n    }\n    static createDefaultLoggerOptions() {\n        return {\n            loggerCallback: () => {\n                // allow users to not set loggerCallback\n            },\n            piiLoggingEnabled: false,\n            logLevel: LogLevel.Info,\n        };\n    }\n    /**\n     * Create new Logger with existing configurations.\n     */\n    clone(packageName, packageVersion, correlationId) {\n        return new Logger({\n            loggerCallback: this.localCallback,\n            piiLoggingEnabled: this.piiLoggingEnabled,\n            logLevel: this.level,\n            correlationId: correlationId || this.correlationId,\n        }, packageName, packageVersion);\n    }\n    /**\n     * Log message with required options.\n     */\n    logMessage(logMessage, options) {\n        if (options.logLevel > this.level ||\n            (!this.piiLoggingEnabled && options.containsPii)) {\n            return;\n        }\n        const timestamp = new Date().toUTCString();\n        // Add correlationId to logs if set, correlationId provided on log messages take precedence\n        const logHeader = `[${timestamp}] : [${options.correlationId || this.correlationId || \"\"}]`;\n        const log = `${logHeader} : ${this.packageName}@${this.packageVersion} : ${LogLevel[options.logLevel]} - ${logMessage}`;\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": Constants.EMPTY_STRING}${options.context ? `:${options.context}` : Constants.EMPTY_STRING}`)(logMessage);\n        this.executeCallback(options.logLevel, log, options.containsPii || false);\n    }\n    /**\n     * Execute callback with message.\n     */\n    executeCallback(level, message, containsPii) {\n        if (this.localCallback) {\n            this.localCallback(level, message, containsPii);\n        }\n    }\n    /**\n     * Logs error messages.\n     */\n    error(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs error messages with PII.\n     */\n    errorPii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs warning messages.\n     */\n    warning(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs warning messages with PII.\n     */\n    warningPii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs info messages.\n     */\n    info(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs info messages with PII.\n     */\n    infoPii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs verbose messages.\n     */\n    verbose(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs verbose messages with PII.\n     */\n    verbosePii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs trace messages.\n     */\n    trace(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs trace messages with PII.\n     */\n    tracePii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Returns whether PII Logging is enabled or not.\n     */\n    isPiiLoggingEnabled() {\n        return this.piiLoggingEnabled || false;\n    }\n}\n\nexport { LogLevel, Logger };\n//# sourceMappingURL=Logger.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\n/* eslint-disable header/header */\nconst name = \"@azure/msal-common\";\nconst version = \"14.2.0\";\n\nexport { name, version };\n//# sourceMappingURL=packageMetadata.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { createClientConfigurationError } from '../error/ClientConfigurationError.mjs';\nimport { StringUtils } from '../utils/StringUtils.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { Constants, OIDC_SCOPES } from '../utils/Constants.mjs';\nimport { emptyInputScopesError } from '../error/ClientConfigurationErrorCodes.mjs';\nimport { cannotAppendScopeSet, cannotRemoveEmptyScope, emptyInputScopeSet } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\n * to ensure uniqueness of strings.\n */\nclass ScopeSet {\n    constructor(inputScopes) {\n        // Filter empty string and null/undefined array items\n        const scopeArr = inputScopes\n            ? StringUtils.trimArrayEntries([...inputScopes])\n            : [];\n        const filteredInput = scopeArr\n            ? StringUtils.removeEmptyStringsFromArray(scopeArr)\n            : [];\n        // Validate and filter scopes (validate function throws if validation fails)\n        this.validateInputScopes(filteredInput);\n        this.scopes = new Set(); // Iterator in constructor not supported by IE11\n        filteredInput.forEach((scope) => this.scopes.add(scope));\n    }\n    /**\n     * Factory method to create ScopeSet from space-delimited string\n     * @param inputScopeString\n     * @param appClientId\n     * @param scopesRequired\n     */\n    static fromString(inputScopeString) {\n        const scopeString = inputScopeString || Constants.EMPTY_STRING;\n        const inputScopes = scopeString.split(\" \");\n        return new ScopeSet(inputScopes);\n    }\n    /**\n     * Creates the set of scopes to search for in cache lookups\n     * @param inputScopeString\n     * @returns\n     */\n    static createSearchScopes(inputScopeString) {\n        const scopeSet = new ScopeSet(inputScopeString);\n        if (!scopeSet.containsOnlyOIDCScopes()) {\n            scopeSet.removeOIDCScopes();\n        }\n        else {\n            scopeSet.removeScope(Constants.OFFLINE_ACCESS_SCOPE);\n        }\n        return scopeSet;\n    }\n    /**\n     * Used to validate the scopes input parameter requested  by the developer.\n     * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\n     */\n    validateInputScopes(inputScopes) {\n        // Check if scopes are required but not given or is an empty array\n        if (!inputScopes || inputScopes.length < 1) {\n            throw createClientConfigurationError(emptyInputScopesError);\n        }\n    }\n    /**\n     * Check if a given scope is present in this set of scopes.\n     * @param scope\n     */\n    containsScope(scope) {\n        const lowerCaseScopes = this.printScopesLowerCase().split(\" \");\n        const lowerCaseScopesSet = new ScopeSet(lowerCaseScopes);\n        // compare lowercase scopes\n        return scope\n            ? lowerCaseScopesSet.scopes.has(scope.toLowerCase())\n            : false;\n    }\n    /**\n     * Check if a set of scopes is present in this set of scopes.\n     * @param scopeSet\n     */\n    containsScopeSet(scopeSet) {\n        if (!scopeSet || scopeSet.scopes.size <= 0) {\n            return false;\n        }\n        return (this.scopes.size >= scopeSet.scopes.size &&\n            scopeSet.asArray().every((scope) => this.containsScope(scope)));\n    }\n    /**\n     * Check if set of scopes contains only the defaults\n     */\n    containsOnlyOIDCScopes() {\n        let defaultScopeCount = 0;\n        OIDC_SCOPES.forEach((defaultScope) => {\n            if (this.containsScope(defaultScope)) {\n                defaultScopeCount += 1;\n            }\n        });\n        return this.scopes.size === defaultScopeCount;\n    }\n    /**\n     * Appends single scope if passed\n     * @param newScope\n     */\n    appendScope(newScope) {\n        if (newScope) {\n            this.scopes.add(newScope.trim());\n        }\n    }\n    /**\n     * Appends multiple scopes if passed\n     * @param newScopes\n     */\n    appendScopes(newScopes) {\n        try {\n            newScopes.forEach((newScope) => this.appendScope(newScope));\n        }\n        catch (e) {\n            throw createClientAuthError(cannotAppendScopeSet);\n        }\n    }\n    /**\n     * Removes element from set of scopes.\n     * @param scope\n     */\n    removeScope(scope) {\n        if (!scope) {\n            throw createClientAuthError(cannotRemoveEmptyScope);\n        }\n        this.scopes.delete(scope.trim());\n    }\n    /**\n     * Removes default scopes from set of scopes\n     * Primarily used to prevent cache misses if the default scopes are not returned from the server\n     */\n    removeOIDCScopes() {\n        OIDC_SCOPES.forEach((defaultScope) => {\n            this.scopes.delete(defaultScope);\n        });\n    }\n    /**\n     * Combines an array of scopes with the current set of scopes.\n     * @param otherScopes\n     */\n    unionScopeSets(otherScopes) {\n        if (!otherScopes) {\n            throw createClientAuthError(emptyInputScopeSet);\n        }\n        const unionScopes = new Set(); // Iterator in constructor not supported in IE11\n        otherScopes.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));\n        this.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));\n        return unionScopes;\n    }\n    /**\n     * Check if scopes intersect between this set and another.\n     * @param otherScopes\n     */\n    intersectingScopeSets(otherScopes) {\n        if (!otherScopes) {\n            throw createClientAuthError(emptyInputScopeSet);\n        }\n        // Do not allow OIDC scopes to be the only intersecting scopes\n        if (!otherScopes.containsOnlyOIDCScopes()) {\n            otherScopes.removeOIDCScopes();\n        }\n        const unionScopes = this.unionScopeSets(otherScopes);\n        const sizeOtherScopes = otherScopes.getScopeCount();\n        const sizeThisScopes = this.getScopeCount();\n        const sizeUnionScopes = unionScopes.size;\n        return sizeUnionScopes < sizeThisScopes + sizeOtherScopes;\n    }\n    /**\n     * Returns size of set of scopes.\n     */\n    getScopeCount() {\n        return this.scopes.size;\n    }\n    /**\n     * Returns the scopes as an array of string values\n     */\n    asArray() {\n        const array = [];\n        this.scopes.forEach((val) => array.push(val));\n        return array;\n    }\n    /**\n     * Prints scopes into a space-delimited string\n     */\n    printScopes() {\n        if (this.scopes) {\n            const scopeArr = this.asArray();\n            return scopeArr.join(\" \");\n        }\n        return Constants.EMPTY_STRING;\n    }\n    /**\n     * Prints scopes into a space-delimited lower-case string (used for caching)\n     */\n    printScopesLowerCase() {\n        return this.printScopes().toLowerCase();\n    }\n}\n\nexport { ScopeSet };\n//# sourceMappingURL=ScopeSet.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Enumeration of operations that are instrumented by have their performance measured by the PerformanceClient.\n *\n * @export\n * @enum {number}\n */\nconst PerformanceEvents = {\n    /**\n     * acquireTokenByCode API (msal-browser and msal-node).\n     * Used to acquire tokens by trading an authorization code against the token endpoint.\n     */\n    AcquireTokenByCode: \"acquireTokenByCode\",\n    /**\n     * acquireTokenByRefreshToken API (msal-browser and msal-node).\n     * Used to renew an access token using a refresh token against the token endpoint.\n     */\n    AcquireTokenByRefreshToken: \"acquireTokenByRefreshToken\",\n    /**\n     * acquireTokenSilent API (msal-browser and msal-node).\n     * Used to silently acquire a new access token (from the cache or the network).\n     */\n    AcquireTokenSilent: \"acquireTokenSilent\",\n    /**\n     * acquireTokenSilentAsync (msal-browser).\n     * Internal API for acquireTokenSilent.\n     */\n    AcquireTokenSilentAsync: \"acquireTokenSilentAsync\",\n    /**\n     * acquireTokenPopup (msal-browser).\n     * Used to acquire a new access token interactively through pop ups\n     */\n    AcquireTokenPopup: \"acquireTokenPopup\",\n    /**\n     * getPublicKeyThumbprint API in CryptoOpts class (msal-browser).\n     * Used to generate a public/private keypair and generate a public key thumbprint for pop requests.\n     */\n    CryptoOptsGetPublicKeyThumbprint: \"cryptoOptsGetPublicKeyThumbprint\",\n    /**\n     * signJwt API in CryptoOpts class (msal-browser).\n     * Used to signed a pop token.\n     */\n    CryptoOptsSignJwt: \"cryptoOptsSignJwt\",\n    /**\n     * acquireToken API in the SilentCacheClient class (msal-browser).\n     * Used to read access tokens from the cache.\n     */\n    SilentCacheClientAcquireToken: \"silentCacheClientAcquireToken\",\n    /**\n     * acquireToken API in the SilentIframeClient class (msal-browser).\n     * Used to acquire a new set of tokens from the authorize endpoint in a hidden iframe.\n     */\n    SilentIframeClientAcquireToken: \"silentIframeClientAcquireToken\",\n    /**\n     * acquireToken API in SilentRereshClient (msal-browser).\n     * Used to acquire a new set of tokens from the token endpoint using a refresh token.\n     */\n    SilentRefreshClientAcquireToken: \"silentRefreshClientAcquireToken\",\n    /**\n     * ssoSilent API (msal-browser).\n     * Used to silently acquire an authorization code and set of tokens using a hidden iframe.\n     */\n    SsoSilent: \"ssoSilent\",\n    /**\n     * getDiscoveredAuthority API in StandardInteractionClient class (msal-browser).\n     * Used to load authority metadata for a request.\n     */\n    StandardInteractionClientGetDiscoveredAuthority: \"standardInteractionClientGetDiscoveredAuthority\",\n    /**\n     * acquireToken APIs in msal-browser.\n     * Used to make an /authorize endpoint call with native brokering enabled.\n     */\n    FetchAccountIdWithNativeBroker: \"fetchAccountIdWithNativeBroker\",\n    /**\n     * acquireToken API in NativeInteractionClient class (msal-browser).\n     * Used to acquire a token from Native component when native brokering is enabled.\n     */\n    NativeInteractionClientAcquireToken: \"nativeInteractionClientAcquireToken\",\n    /**\n     * Time spent creating default headers for requests to token endpoint\n     */\n    BaseClientCreateTokenRequestHeaders: \"baseClientCreateTokenRequestHeaders\",\n    /**\n     * Time spent sending/waiting for the response of a request to the token endpoint\n     */\n    RefreshTokenClientExecutePostToTokenEndpoint: \"refreshTokenClientExecutePostToTokenEndpoint\",\n    AuthorizationCodeClientExecutePostToTokenEndpoint: \"authorizationCodeClientExecutePostToTokenEndpoint\",\n    /**\n     * Used to measure the time taken for completing embedded-broker handshake (PW-Broker).\n     */\n    BrokerHandhshake: \"brokerHandshake\",\n    /**\n     * acquireTokenByRefreshToken API in BrokerClientApplication (PW-Broker) .\n     */\n    AcquireTokenByRefreshTokenInBroker: \"acquireTokenByRefreshTokenInBroker\",\n    /**\n     * Time taken for token acquisition by broker\n     */\n    AcquireTokenByBroker: \"acquireTokenByBroker\",\n    /**\n     * Time spent on the network for refresh token acquisition\n     */\n    RefreshTokenClientExecuteTokenRequest: \"refreshTokenClientExecuteTokenRequest\",\n    /**\n     * Time taken for acquiring refresh token , records RT size\n     */\n    RefreshTokenClientAcquireToken: \"refreshTokenClientAcquireToken\",\n    /**\n     * Time taken for acquiring cached refresh token\n     */\n    RefreshTokenClientAcquireTokenWithCachedRefreshToken: \"refreshTokenClientAcquireTokenWithCachedRefreshToken\",\n    /**\n     * acquireTokenByRefreshToken API in RefreshTokenClient (msal-common).\n     */\n    RefreshTokenClientAcquireTokenByRefreshToken: \"refreshTokenClientAcquireTokenByRefreshToken\",\n    /**\n     * Helper function to create token request body in RefreshTokenClient (msal-common).\n     */\n    RefreshTokenClientCreateTokenRequestBody: \"refreshTokenClientCreateTokenRequestBody\",\n    /**\n     * acquireTokenFromCache (msal-browser).\n     * Internal API for acquiring token from cache\n     */\n    AcquireTokenFromCache: \"acquireTokenFromCache\",\n    SilentFlowClientAcquireCachedToken: \"silentFlowClientAcquireCachedToken\",\n    SilentFlowClientGenerateResultFromCacheRecord: \"silentFlowClientGenerateResultFromCacheRecord\",\n    /**\n     * acquireTokenBySilentIframe (msal-browser).\n     * Internal API for acquiring token by silent Iframe\n     */\n    AcquireTokenBySilentIframe: \"acquireTokenBySilentIframe\",\n    /**\n     * Internal API for initializing base request in BaseInteractionClient (msal-browser)\n     */\n    InitializeBaseRequest: \"initializeBaseRequest\",\n    /**\n     * Internal API for initializing silent request in SilentCacheClient (msal-browser)\n     */\n    InitializeSilentRequest: \"initializeSilentRequest\",\n    InitializeClientApplication: \"initializeClientApplication\",\n    /**\n     * Helper function in SilentIframeClient class (msal-browser).\n     */\n    SilentIframeClientTokenHelper: \"silentIframeClientTokenHelper\",\n    /**\n     * SilentHandler\n     */\n    SilentHandlerInitiateAuthRequest: \"silentHandlerInitiateAuthRequest\",\n    SilentHandlerMonitorIframeForHash: \"silentHandlerMonitorIframeForHash\",\n    SilentHandlerLoadFrame: \"silentHandlerLoadFrame\",\n    SilentHandlerLoadFrameSync: \"silentHandlerLoadFrameSync\",\n    /**\n     * Helper functions in StandardInteractionClient class (msal-browser)\n     */\n    StandardInteractionClientCreateAuthCodeClient: \"standardInteractionClientCreateAuthCodeClient\",\n    StandardInteractionClientGetClientConfiguration: \"standardInteractionClientGetClientConfiguration\",\n    StandardInteractionClientInitializeAuthorizationRequest: \"standardInteractionClientInitializeAuthorizationRequest\",\n    StandardInteractionClientInitializeAuthorizationCodeRequest: \"standardInteractionClientInitializeAuthorizationCodeRequest\",\n    /**\n     * getAuthCodeUrl API (msal-browser and msal-node).\n     */\n    GetAuthCodeUrl: \"getAuthCodeUrl\",\n    /**\n     * Functions from InteractionHandler (msal-browser)\n     */\n    HandleCodeResponseFromServer: \"handleCodeResponseFromServer\",\n    HandleCodeResponseFromHash: \"handleCodeResponseFromHash\",\n    UpdateTokenEndpointAuthority: \"updateTokenEndpointAuthority\",\n    /**\n     * APIs in Authorization Code Client (msal-common)\n     */\n    AuthClientAcquireToken: \"authClientAcquireToken\",\n    AuthClientExecuteTokenRequest: \"authClientExecuteTokenRequest\",\n    AuthClientCreateTokenRequestBody: \"authClientCreateTokenRequestBody\",\n    AuthClientCreateQueryString: \"authClientCreateQueryString\",\n    /**\n     * Generate functions in PopTokenGenerator (msal-common)\n     */\n    PopTokenGenerateCnf: \"popTokenGenerateCnf\",\n    PopTokenGenerateKid: \"popTokenGenerateKid\",\n    /**\n     * handleServerTokenResponse API in ResponseHandler (msal-common)\n     */\n    HandleServerTokenResponse: \"handleServerTokenResponse\",\n    /**\n     * Authority functions\n     */\n    AuthorityFactoryCreateDiscoveredInstance: \"authorityFactoryCreateDiscoveredInstance\",\n    AuthorityResolveEndpointsAsync: \"authorityResolveEndpointsAsync\",\n    AuthorityResolveEndpointsFromLocalSources: \"authorityResolveEndpointsFromLocalSources\",\n    AuthorityGetCloudDiscoveryMetadataFromNetwork: \"authorityGetCloudDiscoveryMetadataFromNetwork\",\n    AuthorityUpdateCloudDiscoveryMetadata: \"authorityUpdateCloudDiscoveryMetadata\",\n    AuthorityGetEndpointMetadataFromNetwork: \"authorityGetEndpointMetadataFromNetwork\",\n    AuthorityUpdateEndpointMetadata: \"authorityUpdateEndpointMetadata\",\n    AuthorityUpdateMetadataWithRegionalInformation: \"authorityUpdateMetadataWithRegionalInformation\",\n    /**\n     * Region Discovery functions\n     */\n    RegionDiscoveryDetectRegion: \"regionDiscoveryDetectRegion\",\n    RegionDiscoveryGetRegionFromIMDS: \"regionDiscoveryGetRegionFromIMDS\",\n    RegionDiscoveryGetCurrentVersion: \"regionDiscoveryGetCurrentVersion\",\n    AcquireTokenByCodeAsync: \"acquireTokenByCodeAsync\",\n    GetEndpointMetadataFromNetwork: \"getEndpointMetadataFromNetwork\",\n    GetCloudDiscoveryMetadataFromNetworkMeasurement: \"getCloudDiscoveryMetadataFromNetworkMeasurement\",\n    HandleRedirectPromiseMeasurement: \"handleRedirectPromiseMeasurement\",\n    UpdateCloudDiscoveryMetadataMeasurement: \"updateCloudDiscoveryMetadataMeasurement\",\n    UsernamePasswordClientAcquireToken: \"usernamePasswordClientAcquireToken\",\n    NativeMessageHandlerHandshake: \"nativeMessageHandlerHandshake\",\n    NativeGenerateAuthResult: \"nativeGenerateAuthResult\",\n    RemoveHiddenIframe: \"removeHiddenIframe\",\n    /**\n     * Cache operations\n     */\n    ClearTokensAndKeysWithClaims: \"clearTokensAndKeysWithClaims\",\n    CacheManagerGetRefreshToken: \"cacheManagerGetRefreshToken\",\n    /**\n     * Crypto Operations\n     */\n    GeneratePkceCodes: \"generatePkceCodes\",\n    GenerateCodeVerifier: \"generateCodeVerifier\",\n    GenerateCodeChallengeFromVerifier: \"generateCodeChallengeFromVerifier\",\n    Sha256Digest: \"sha256Digest\",\n    GetRandomValues: \"getRandomValues\",\n};\n/**\n * State of the performance event.\n *\n * @export\n * @enum {number}\n */\nconst PerformanceEventStatus = {\n    NotStarted: 0,\n    InProgress: 1,\n    Completed: 2,\n};\nconst IntFields = new Set([\n    \"accessTokenSize\",\n    \"durationMs\",\n    \"idTokenSize\",\n    \"matsSilentStatus\",\n    \"matsHttpStatus\",\n    \"refreshTokenSize\",\n    \"queuedTimeMs\",\n    \"startTimeMs\",\n    \"status\",\n]);\n\nexport { IntFields, PerformanceEventStatus, PerformanceEvents };\n//# sourceMappingURL=PerformanceEvent.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { createClientConfigurationError } from '../error/ClientConfigurationError.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { StringUtils } from '../utils/StringUtils.mjs';\nimport { AADAuthorityConstants, Constants, ServerResponseType } from '../utils/Constants.mjs';\nimport { urlEmptyError, urlParseError, authorityUriInsecure } from '../error/ClientConfigurationErrorCodes.mjs';\nimport { hashNotDeserialized } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Url object class which can perform various transformations on url strings.\n */\nclass UrlString {\n    get urlString() {\n        return this._urlString;\n    }\n    constructor(url) {\n        this._urlString = url;\n        if (!this._urlString) {\n            // Throws error if url is empty\n            throw createClientConfigurationError(urlEmptyError);\n        }\n        if (!this.getHash()) {\n            this._urlString = UrlString.canonicalizeUri(url);\n        }\n    }\n    /**\n     * Ensure urls are lower case and end with a / character.\n     * @param url\n     */\n    static canonicalizeUri(url) {\n        if (url) {\n            let lowerCaseUrl = url.toLowerCase();\n            if (StringUtils.endsWith(lowerCaseUrl, \"?\")) {\n                lowerCaseUrl = lowerCaseUrl.slice(0, -1);\n            }\n            else if (StringUtils.endsWith(lowerCaseUrl, \"?/\")) {\n                lowerCaseUrl = lowerCaseUrl.slice(0, -2);\n            }\n            if (!StringUtils.endsWith(lowerCaseUrl, \"/\")) {\n                lowerCaseUrl += \"/\";\n            }\n            return lowerCaseUrl;\n        }\n        return url;\n    }\n    /**\n     * Throws if urlString passed is not a valid authority URI string.\n     */\n    validateAsUri() {\n        // Attempts to parse url for uri components\n        let components;\n        try {\n            components = this.getUrlComponents();\n        }\n        catch (e) {\n            throw createClientConfigurationError(urlParseError);\n        }\n        // Throw error if URI or path segments are not parseable.\n        if (!components.HostNameAndPort || !components.PathSegments) {\n            throw createClientConfigurationError(urlParseError);\n        }\n        // Throw error if uri is insecure.\n        if (!components.Protocol ||\n            components.Protocol.toLowerCase() !== \"https:\") {\n            throw createClientConfigurationError(authorityUriInsecure);\n        }\n    }\n    /**\n     * Given a url and a query string return the url with provided query string appended\n     * @param url\n     * @param queryString\n     */\n    static appendQueryString(url, queryString) {\n        if (!queryString) {\n            return url;\n        }\n        return url.indexOf(\"?\") < 0\n            ? `${url}?${queryString}`\n            : `${url}&${queryString}`;\n    }\n    /**\n     * Returns a url with the hash removed\n     * @param url\n     */\n    static removeHashFromUrl(url) {\n        return UrlString.canonicalizeUri(url.split(\"#\")[0]);\n    }\n    /**\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\n     * @param href The url\n     * @param tenantId The tenant id to replace\n     */\n    replaceTenantPath(tenantId) {\n        const urlObject = this.getUrlComponents();\n        const pathArray = urlObject.PathSegments;\n        if (tenantId &&\n            pathArray.length !== 0 &&\n            (pathArray[0] === AADAuthorityConstants.COMMON ||\n                pathArray[0] === AADAuthorityConstants.ORGANIZATIONS)) {\n            pathArray[0] = tenantId;\n        }\n        return UrlString.constructAuthorityUriFromObject(urlObject);\n    }\n    /**\n     * Returns the anchor part(#) of the URL\n     */\n    getHash() {\n        return UrlString.parseHash(this.urlString);\n    }\n    /**\n     * Parses out the components from a url string.\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\n     */\n    getUrlComponents() {\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\n        const regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\n        // If url string does not match regEx, we throw an error\n        const match = this.urlString.match(regEx);\n        if (!match) {\n            throw createClientConfigurationError(urlParseError);\n        }\n        // Url component object\n        const urlComponents = {\n            Protocol: match[1],\n            HostNameAndPort: match[4],\n            AbsolutePath: match[5],\n            QueryString: match[7],\n        };\n        let pathSegments = urlComponents.AbsolutePath.split(\"/\");\n        pathSegments = pathSegments.filter((val) => val && val.length > 0); // remove empty elements\n        urlComponents.PathSegments = pathSegments;\n        if (urlComponents.QueryString &&\n            urlComponents.QueryString.endsWith(\"/\")) {\n            urlComponents.QueryString = urlComponents.QueryString.substring(0, urlComponents.QueryString.length - 1);\n        }\n        return urlComponents;\n    }\n    static getDomainFromUrl(url) {\n        const regEx = RegExp(\"^([^:/?#]+://)?([^/?#]*)\");\n        const match = url.match(regEx);\n        if (!match) {\n            throw createClientConfigurationError(urlParseError);\n        }\n        return match[2];\n    }\n    static getAbsoluteUrl(relativeUrl, baseUrl) {\n        if (relativeUrl[0] === Constants.FORWARD_SLASH) {\n            const url = new UrlString(baseUrl);\n            const baseComponents = url.getUrlComponents();\n            return (baseComponents.Protocol +\n                \"//\" +\n                baseComponents.HostNameAndPort +\n                relativeUrl);\n        }\n        return relativeUrl;\n    }\n    /**\n     * Parses hash string from given string. Returns empty string if no hash symbol is found.\n     * @param hashString\n     */\n    static parseHash(hashString) {\n        const hashIndex1 = hashString.indexOf(\"#\");\n        const hashIndex2 = hashString.indexOf(\"#/\");\n        if (hashIndex2 > -1) {\n            return hashString.substring(hashIndex2 + 2);\n        }\n        else if (hashIndex1 > -1) {\n            return hashString.substring(hashIndex1 + 1);\n        }\n        return Constants.EMPTY_STRING;\n    }\n    /**\n     * Parses query string from given string. Returns empty string if no query symbol is found.\n     * @param queryString\n     */\n    static parseQueryString(queryString) {\n        const queryIndex1 = queryString.indexOf(\"?\");\n        const queryIndex2 = queryString.indexOf(\"/?\");\n        if (queryIndex2 > -1) {\n            return queryString.substring(queryIndex2 + 2);\n        }\n        else if (queryIndex1 > -1) {\n            return queryString.substring(queryIndex1 + 1);\n        }\n        return Constants.EMPTY_STRING;\n    }\n    /**\n     * Parses query server response string from given string.\n     * Extract hash between '?code=' and '#' if trailing '# is present.\n     * Returns empty string if no query symbol is found.\n     * @param queryString\n     */\n    static parseQueryServerResponse(queryString) {\n        const queryIndex1 = queryString.indexOf(\"?code\");\n        const queryIndex2 = queryString.indexOf(\"/?code\");\n        const hashIndex = queryString.indexOf(\"#\");\n        if (queryIndex2 > -1 && hashIndex > -1) {\n            return queryString.substring(queryIndex2 + 2, hashIndex);\n        }\n        else if (queryIndex2 > -1) {\n            return queryString.substring(queryIndex2 + 2);\n        }\n        else if (queryIndex1 > -1 && hashIndex > -1) {\n            return queryString.substring(queryIndex1 + 1, hashIndex);\n        }\n        else if (queryIndex1 > -1) {\n            return queryString.substring(queryIndex1 + 1);\n        }\n        return Constants.EMPTY_STRING;\n    }\n    static constructAuthorityUriFromObject(urlObject) {\n        return new UrlString(urlObject.Protocol +\n            \"//\" +\n            urlObject.HostNameAndPort +\n            \"/\" +\n            urlObject.PathSegments.join(\"/\"));\n    }\n    /**\n     * Returns URL hash as server auth code response object.\n     */\n    static getDeserializedHash(hash) {\n        // Check if given hash is empty\n        if (!hash) {\n            return {};\n        }\n        // Strip the # symbol if present\n        const parsedHash = UrlString.parseHash(hash);\n        // If # symbol was not present, above will return empty string, so give original hash value\n        const deserializedHash = StringUtils.queryStringToObject(parsedHash || hash);\n        // Check if deserialization didn't work\n        if (!deserializedHash) {\n            throw createClientAuthError(hashNotDeserialized);\n        }\n        return deserializedHash;\n    }\n    /**\n     * Returns URL query string as server auth code response object.\n     */\n    static getDeserializedQueryString(query) {\n        // Check if given query is empty\n        if (!query) {\n            return {};\n        }\n        // Strip the ? symbol if present\n        const parsedQueryString = UrlString.parseQueryString(query);\n        // If ? symbol was not present, above will return empty string, so give original query value\n        const deserializedQueryString = StringUtils.queryStringToObject(parsedQueryString || query);\n        // Check if deserialization didn't work\n        if (!deserializedQueryString) {\n            throw createClientAuthError(hashNotDeserialized);\n        }\n        return deserializedQueryString;\n    }\n    /**\n     * Returns either deserialized query string or deserialized hash, depending on the serverResponseType\n     * as a server auth code response object.\n     */\n    static getDeserializedCodeResponse(serverResponseType, hashFragment) {\n        const hashUrlString = new UrlString(hashFragment);\n        let serverParams;\n        if (serverResponseType === ServerResponseType.QUERY) {\n            serverParams = UrlString.getDeserializedQueryString(hashFragment);\n        }\n        else {\n            serverParams = UrlString.getDeserializedHash(hashUrlString.getHash());\n        }\n        return serverParams;\n    }\n    /**\n     * Check if the hash of the URL string contains known properties\n     */\n    static hashContainsKnownProperties(hash) {\n        if (!hash || hash.indexOf(\"=\") < 0) {\n            // Hash doesn't contain key/value pairs\n            return false;\n        }\n        const parameters = UrlString.getDeserializedHash(hash);\n        return !!(parameters.code ||\n            parameters.error_description ||\n            parameters.error ||\n            parameters.state);\n    }\n}\n\nexport { UrlString };\n//# sourceMappingURL=UrlString.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst Constants = {\n    LIBRARY_NAME: \"MSAL.JS\",\n    SKU: \"msal.js.common\",\n    // Prefix for all library cache entries\n    CACHE_PREFIX: \"msal\",\n    // default authority\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\n    DEFAULT_COMMON_TENANT: \"common\",\n    // ADFS String\n    ADFS: \"adfs\",\n    DSTS: \"dstsv2\",\n    // Default AAD Instance Discovery Endpoint\n    AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\n    // CIAM URL\n    CIAM_AUTH_URL: \".ciamlogin.com\",\n    AAD_TENANT_DOMAIN_SUFFIX: \".onmicrosoft.com\",\n    // Resource delimiter - used for certain cache entries\n    RESOURCE_DELIM: \"|\",\n    // Placeholder for non-existent account ids/objects\n    NO_ACCOUNT: \"NO_ACCOUNT\",\n    // Claims\n    CLAIMS: \"claims\",\n    // Consumer UTID\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\n    // Default scopes\n    OPENID_SCOPE: \"openid\",\n    PROFILE_SCOPE: \"profile\",\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\n    EMAIL_SCOPE: \"email\",\n    // Default response type for authorization code flow\n    CODE_RESPONSE_TYPE: \"code\",\n    CODE_GRANT_TYPE: \"authorization_code\",\n    RT_GRANT_TYPE: \"refresh_token\",\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\n    AUTHORIZATION_PENDING: \"authorization_pending\",\n    NOT_DEFINED: \"not_defined\",\n    EMPTY_STRING: \"\",\n    NOT_APPLICABLE: \"N/A\",\n    FORWARD_SLASH: \"/\",\n    IMDS_ENDPOINT: \"http://169.254.169.254/metadata/instance/compute/location\",\n    IMDS_VERSION: \"2020-06-01\",\n    IMDS_TIMEOUT: 2000,\n    AZURE_REGION_AUTO_DISCOVER_FLAG: \"TryAutoDetect\",\n    REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: \"login.microsoft.com\",\n    REGIONAL_AUTH_NON_MSI_QUERY_STRING: \"allowestsrnonmsi=true\",\n    KNOWN_PUBLIC_CLOUDS: [\n        \"login.microsoftonline.com\",\n        \"login.windows.net\",\n        \"login.microsoft.com\",\n        \"sts.windows.net\",\n    ],\n    TOKEN_RESPONSE_TYPE: \"token\",\n    ID_TOKEN_RESPONSE_TYPE: \"id_token\",\n    SHR_NONCE_VALIDITY: 240,\n    INVALID_INSTANCE: \"invalid_instance\",\n};\nconst HttpStatus = {\n    SUCCESS_RANGE_START: 200,\n    SUCCESS_RANGE_END: 299,\n    REDIRECT: 302,\n    CLIENT_ERROR_RANGE_START: 400,\n    CLIENT_ERROR_RANGE_END: 499,\n    SERVER_ERROR_RANGE_START: 500,\n    SERVER_ERROR_RANGE_END: 599,\n};\nconst OIDC_DEFAULT_SCOPES = [\n    Constants.OPENID_SCOPE,\n    Constants.PROFILE_SCOPE,\n    Constants.OFFLINE_ACCESS_SCOPE,\n];\nconst OIDC_SCOPES = [...OIDC_DEFAULT_SCOPES, Constants.EMAIL_SCOPE];\n/**\n * Request header names\n */\nconst HeaderNames = {\n    CONTENT_TYPE: \"Content-Type\",\n    RETRY_AFTER: \"Retry-After\",\n    CCS_HEADER: \"X-AnchorMailbox\",\n    WWWAuthenticate: \"WWW-Authenticate\",\n    AuthenticationInfo: \"Authentication-Info\",\n    X_MS_REQUEST_ID: \"x-ms-request-id\",\n    X_MS_HTTP_VERSION: \"x-ms-httpver\",\n};\n/**\n * Persistent cache keys MSAL which stay while user is logged in.\n */\nconst PersistentCacheKeys = {\n    ID_TOKEN: \"idtoken\",\n    CLIENT_INFO: \"client.info\",\n    ADAL_ID_TOKEN: \"adal.idtoken\",\n    ERROR: \"error\",\n    ERROR_DESC: \"error.description\",\n    ACTIVE_ACCOUNT: \"active-account\",\n    ACTIVE_ACCOUNT_FILTERS: \"active-account-filters\", // new cache entry for active_account for a more robust version for browser\n};\n/**\n * String constants related to AAD Authority\n */\nconst AADAuthorityConstants = {\n    COMMON: \"common\",\n    ORGANIZATIONS: \"organizations\",\n    CONSUMERS: \"consumers\",\n};\n/**\n * Keys in the hashParams sent by AAD Server\n */\nconst AADServerParamKeys = {\n    CLIENT_ID: \"client_id\",\n    REDIRECT_URI: \"redirect_uri\",\n    RESPONSE_TYPE: \"response_type\",\n    RESPONSE_MODE: \"response_mode\",\n    GRANT_TYPE: \"grant_type\",\n    CLAIMS: \"claims\",\n    SCOPE: \"scope\",\n    ERROR: \"error\",\n    ERROR_DESCRIPTION: \"error_description\",\n    ACCESS_TOKEN: \"access_token\",\n    ID_TOKEN: \"id_token\",\n    REFRESH_TOKEN: \"refresh_token\",\n    EXPIRES_IN: \"expires_in\",\n    STATE: \"state\",\n    NONCE: \"nonce\",\n    PROMPT: \"prompt\",\n    SESSION_STATE: \"session_state\",\n    CLIENT_INFO: \"client_info\",\n    CODE: \"code\",\n    CODE_CHALLENGE: \"code_challenge\",\n    CODE_CHALLENGE_METHOD: \"code_challenge_method\",\n    CODE_VERIFIER: \"code_verifier\",\n    CLIENT_REQUEST_ID: \"client-request-id\",\n    X_CLIENT_SKU: \"x-client-SKU\",\n    X_CLIENT_VER: \"x-client-VER\",\n    X_CLIENT_OS: \"x-client-OS\",\n    X_CLIENT_CPU: \"x-client-CPU\",\n    X_CLIENT_CURR_TELEM: \"x-client-current-telemetry\",\n    X_CLIENT_LAST_TELEM: \"x-client-last-telemetry\",\n    X_MS_LIB_CAPABILITY: \"x-ms-lib-capability\",\n    X_APP_NAME: \"x-app-name\",\n    X_APP_VER: \"x-app-ver\",\n    POST_LOGOUT_URI: \"post_logout_redirect_uri\",\n    ID_TOKEN_HINT: \"id_token_hint\",\n    DEVICE_CODE: \"device_code\",\n    CLIENT_SECRET: \"client_secret\",\n    CLIENT_ASSERTION: \"client_assertion\",\n    CLIENT_ASSERTION_TYPE: \"client_assertion_type\",\n    TOKEN_TYPE: \"token_type\",\n    REQ_CNF: \"req_cnf\",\n    OBO_ASSERTION: \"assertion\",\n    REQUESTED_TOKEN_USE: \"requested_token_use\",\n    ON_BEHALF_OF: \"on_behalf_of\",\n    FOCI: \"foci\",\n    CCS_HEADER: \"X-AnchorMailbox\",\n    RETURN_SPA_CODE: \"return_spa_code\",\n    NATIVE_BROKER: \"nativebroker\",\n    LOGOUT_HINT: \"logout_hint\",\n};\n/**\n * Claims request keys\n */\nconst ClaimsRequestKeys = {\n    ACCESS_TOKEN: \"access_token\",\n    XMS_CC: \"xms_cc\",\n};\n/**\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\n */\nconst PromptValue = {\n    LOGIN: \"login\",\n    SELECT_ACCOUNT: \"select_account\",\n    CONSENT: \"consent\",\n    NONE: \"none\",\n    CREATE: \"create\",\n    NO_SESSION: \"no_session\",\n};\n/**\n * SSO Types - generated to populate hints\n */\nconst SSOTypes = {\n    ACCOUNT: \"account\",\n    SID: \"sid\",\n    LOGIN_HINT: \"login_hint\",\n    ID_TOKEN: \"id_token\",\n    DOMAIN_HINT: \"domain_hint\",\n    ORGANIZATIONS: \"organizations\",\n    CONSUMERS: \"consumers\",\n    ACCOUNT_ID: \"accountIdentifier\",\n    HOMEACCOUNT_ID: \"homeAccountIdentifier\",\n};\n/**\n * allowed values for codeVerifier\n */\nconst CodeChallengeMethodValues = {\n    PLAIN: \"plain\",\n    S256: \"S256\",\n};\n/**\n * allowed values for server response type\n */\nconst ServerResponseType = {\n    QUERY: \"query\",\n    FRAGMENT: \"fragment\",\n};\n/**\n * allowed values for response_mode\n */\nconst ResponseMode = {\n    ...ServerResponseType,\n    FORM_POST: \"form_post\",\n};\n/**\n * allowed grant_type\n */\nconst GrantType = {\n    IMPLICIT_GRANT: \"implicit\",\n    AUTHORIZATION_CODE_GRANT: \"authorization_code\",\n    CLIENT_CREDENTIALS_GRANT: \"client_credentials\",\n    RESOURCE_OWNER_PASSWORD_GRANT: \"password\",\n    REFRESH_TOKEN_GRANT: \"refresh_token\",\n    DEVICE_CODE_GRANT: \"device_code\",\n    JWT_BEARER: \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n};\n/**\n * Account types in Cache\n */\nconst CacheAccountType = {\n    MSSTS_ACCOUNT_TYPE: \"MSSTS\",\n    ADFS_ACCOUNT_TYPE: \"ADFS\",\n    MSAV1_ACCOUNT_TYPE: \"MSA\",\n    GENERIC_ACCOUNT_TYPE: \"Generic\", // NTLM, Kerberos, FBA, Basic etc\n};\n/**\n * Separators used in cache\n */\nconst Separators = {\n    CACHE_KEY_SEPARATOR: \"-\",\n    CLIENT_INFO_SEPARATOR: \".\",\n};\n/**\n * Credential Type stored in the cache\n */\nconst CredentialType = {\n    ID_TOKEN: \"IdToken\",\n    ACCESS_TOKEN: \"AccessToken\",\n    ACCESS_TOKEN_WITH_AUTH_SCHEME: \"AccessToken_With_AuthScheme\",\n    REFRESH_TOKEN: \"RefreshToken\",\n};\n/**\n * Combine all cache types\n */\nconst CacheType = {\n    ADFS: 1001,\n    MSA: 1002,\n    MSSTS: 1003,\n    GENERIC: 1004,\n    ACCESS_TOKEN: 2001,\n    REFRESH_TOKEN: 2002,\n    ID_TOKEN: 2003,\n    APP_METADATA: 3001,\n    UNDEFINED: 9999,\n};\n/**\n * More Cache related constants\n */\nconst APP_METADATA = \"appmetadata\";\nconst CLIENT_INFO = \"client_info\";\nconst THE_FAMILY_ID = \"1\";\nconst AUTHORITY_METADATA_CONSTANTS = {\n    CACHE_KEY: \"authority-metadata\",\n    REFRESH_TIME_SECONDS: 3600 * 24, // 24 Hours\n};\nconst AuthorityMetadataSource = {\n    CONFIG: \"config\",\n    CACHE: \"cache\",\n    NETWORK: \"network\",\n    HARDCODED_VALUES: \"hardcoded_values\",\n};\nconst SERVER_TELEM_CONSTANTS = {\n    SCHEMA_VERSION: 5,\n    MAX_CUR_HEADER_BYTES: 80,\n    MAX_LAST_HEADER_BYTES: 330,\n    MAX_CACHED_ERRORS: 50,\n    CACHE_KEY: \"server-telemetry\",\n    CATEGORY_SEPARATOR: \"|\",\n    VALUE_SEPARATOR: \",\",\n    OVERFLOW_TRUE: \"1\",\n    OVERFLOW_FALSE: \"0\",\n    UNKNOWN_ERROR: \"unknown_error\",\n};\n/**\n * Type of the authentication request\n */\nconst AuthenticationScheme = {\n    BEARER: \"Bearer\",\n    POP: \"pop\",\n    SSH: \"ssh-cert\",\n};\n/**\n * Constants related to throttling\n */\nconst ThrottlingConstants = {\n    // Default time to throttle RequestThumbprint in seconds\n    DEFAULT_THROTTLE_TIME_SECONDS: 60,\n    // Default maximum time to throttle in seconds, overrides what the server sends back\n    DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,\n    // Prefix for storing throttling entries\n    THROTTLING_PREFIX: \"throttling\",\n    // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling\n    X_MS_LIB_CAPABILITY_VALUE: \"retry-after, h429\",\n};\nconst Errors = {\n    INVALID_GRANT_ERROR: \"invalid_grant\",\n    CLIENT_MISMATCH_ERROR: \"client_mismatch\",\n};\n/**\n * Password grant parameters\n */\nconst PasswordGrantConstants = {\n    username: \"username\",\n    password: \"password\",\n};\n/**\n * Response codes\n */\nconst ResponseCodes = {\n    httpSuccess: 200,\n    httpBadRequest: 400,\n};\n/**\n * Region Discovery Sources\n */\nconst RegionDiscoverySources = {\n    FAILED_AUTO_DETECTION: \"1\",\n    INTERNAL_CACHE: \"2\",\n    ENVIRONMENT_VARIABLE: \"3\",\n    IMDS: \"4\",\n};\n/**\n * Region Discovery Outcomes\n */\nconst RegionDiscoveryOutcomes = {\n    CONFIGURED_MATCHES_DETECTED: \"1\",\n    CONFIGURED_NO_AUTO_DETECTION: \"2\",\n    CONFIGURED_NOT_DETECTED: \"3\",\n    AUTO_DETECTION_REQUESTED_SUCCESSFUL: \"4\",\n    AUTO_DETECTION_REQUESTED_FAILED: \"5\",\n};\n/**\n * Specifies the reason for fetching the access token from the identity provider\n */\nconst CacheOutcome = {\n    // When a token is found in the cache or the cache is not supposed to be hit when making the request\n    NOT_APPLICABLE: \"0\",\n    // When the token request goes to the identity provider because force_refresh was set to true. Also occurs if claims were requested\n    FORCE_REFRESH_OR_CLAIMS: \"1\",\n    // When the token request goes to the identity provider because no cached access token exists\n    NO_CACHED_ACCESS_TOKEN: \"2\",\n    // When the token request goes to the identity provider because cached access token expired\n    CACHED_ACCESS_TOKEN_EXPIRED: \"3\",\n    // When the token request goes to the identity provider because refresh_in was used and the existing token needs to be refreshed\n    PROACTIVELY_REFRESHED: \"4\",\n};\nconst JsonTypes = {\n    Jwt: \"JWT\",\n    Jwk: \"JWK\",\n    Pop: \"pop\",\n};\nconst ONE_DAY_IN_MS = 86400000;\n\nexport { AADAuthorityConstants, AADServerParamKeys, APP_METADATA, AUTHORITY_METADATA_CONSTANTS, AuthenticationScheme, AuthorityMetadataSource, CLIENT_INFO, CacheAccountType, CacheOutcome, CacheType, ClaimsRequestKeys, CodeChallengeMethodValues, Constants, CredentialType, Errors, GrantType, HeaderNames, HttpStatus, JsonTypes, OIDC_DEFAULT_SCOPES, OIDC_SCOPES, ONE_DAY_IN_MS, PasswordGrantConstants, PersistentCacheKeys, PromptValue, RegionDiscoveryOutcomes, RegionDiscoverySources, ResponseCodes, ResponseMode, SERVER_TELEM_CONSTANTS, SSOTypes, Separators, ServerResponseType, THE_FAMILY_ID, ThrottlingConstants };\n//# sourceMappingURL=Constants.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Wraps a function with a performance measurement.\n * Usage: invoke(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\n * @param callback\n * @param eventName\n * @param logger\n * @param telemetryClient\n * @param correlationId\n * @returns\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst invoke = (callback, eventName, logger, telemetryClient, correlationId) => {\n    return (...args) => {\n        logger.trace(`Executing function ${eventName}`);\n        const inProgressEvent = telemetryClient?.startMeasurement(eventName, correlationId);\n        try {\n            const result = callback(...args);\n            inProgressEvent?.end({\n                success: true,\n            });\n            logger.trace(`Returning result from ${eventName}`);\n            return result;\n        }\n        catch (e) {\n            logger.trace(`Error occurred in ${eventName}`);\n            try {\n                logger.trace(JSON.stringify(e));\n            }\n            catch (e) {\n                logger.trace(\"Unable to print error message.\");\n            }\n            inProgressEvent?.end({\n                success: false,\n            });\n            throw e;\n        }\n    };\n};\n/**\n * Wraps an async function with a performance measurement.\n * Usage: invokeAsync(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\n * @param callback\n * @param eventName\n * @param logger\n * @param telemetryClient\n * @param correlationId\n * @returns\n * @internal\n *\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst invokeAsync = (callback, eventName, logger, telemetryClient, correlationId) => {\n    return (...args) => {\n        logger.trace(`Executing function ${eventName}`);\n        const inProgressEvent = telemetryClient?.startMeasurement(eventName, correlationId);\n        telemetryClient?.setPreQueueTime(eventName, correlationId);\n        return callback(...args)\n            .then((response) => {\n            logger.trace(`Returning result from ${eventName}`);\n            inProgressEvent?.end({\n                success: true,\n            });\n            return response;\n        })\n            .catch((e) => {\n            logger.trace(`Error occurred in ${eventName}`);\n            try {\n                logger.trace(JSON.stringify(e));\n            }\n            catch (e) {\n                logger.trace(\"Unable to print error message.\");\n            }\n            inProgressEvent?.end({\n                success: false,\n            });\n            throw e;\n        });\n    };\n};\n\nexport { invoke, invokeAsync };\n//# sourceMappingURL=FunctionWrappers.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\nimport { Constants } from './Constants.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { noCryptoObject, invalidState } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Class which provides helpers for OAuth 2.0 protocol specific values\n */\nclass ProtocolUtils {\n    /**\n     * Appends user state with random guid, or returns random guid.\n     * @param userState\n     * @param randomGuid\n     */\n    static setRequestState(cryptoObj, userState, meta) {\n        const libraryState = ProtocolUtils.generateLibraryState(cryptoObj, meta);\n        return userState\n            ? `${libraryState}${Constants.RESOURCE_DELIM}${userState}`\n            : libraryState;\n    }\n    /**\n     * Generates the state value used by the common library.\n     * @param randomGuid\n     * @param cryptoObj\n     */\n    static generateLibraryState(cryptoObj, meta) {\n        if (!cryptoObj) {\n            throw createClientAuthError(noCryptoObject);\n        }\n        // Create a state object containing a unique id and the timestamp of the request creation\n        const stateObj = {\n            id: cryptoObj.createNewGuid(),\n        };\n        if (meta) {\n            stateObj.meta = meta;\n        }\n        const stateString = JSON.stringify(stateObj);\n        return cryptoObj.base64Encode(stateString);\n    }\n    /**\n     * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\n     * @param state\n     * @param cryptoObj\n     */\n    static parseRequestState(cryptoObj, state) {\n        if (!cryptoObj) {\n            throw createClientAuthError(noCryptoObject);\n        }\n        if (!state) {\n            throw createClientAuthError(invalidState);\n        }\n        try {\n            // Split the state between library state and user passed state and decode them separately\n            const splitState = state.split(Constants.RESOURCE_DELIM);\n            const libraryState = splitState[0];\n            const userState = splitState.length > 1\n                ? splitState.slice(1).join(Constants.RESOURCE_DELIM)\n                : Constants.EMPTY_STRING;\n            const libraryStateString = cryptoObj.base64Decode(libraryState);\n            const libraryStateObj = JSON.parse(libraryStateString);\n            return {\n                userRequestState: userState || Constants.EMPTY_STRING,\n                libraryState: libraryStateObj,\n            };\n        }\n        catch (e) {\n            throw createClientAuthError(invalidState);\n        }\n    }\n}\n\nexport { ProtocolUtils };\n//# sourceMappingURL=ProtocolUtils.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * @hidden\n */\nclass StringUtils {\n    /**\n     * Check if stringified object is empty\n     * @param strObj\n     */\n    static isEmptyObj(strObj) {\n        if (strObj) {\n            try {\n                const obj = JSON.parse(strObj);\n                return Object.keys(obj).length === 0;\n            }\n            catch (e) { }\n        }\n        return true;\n    }\n    static startsWith(str, search) {\n        return str.indexOf(search) === 0;\n    }\n    static endsWith(str, search) {\n        return (str.length >= search.length &&\n            str.lastIndexOf(search) === str.length - search.length);\n    }\n    /**\n     * Parses string into an object.\n     *\n     * @param query\n     */\n    static queryStringToObject(query) {\n        const obj = {};\n        const params = query.split(\"&\");\n        const decode = (s) => decodeURIComponent(s.replace(/\\+/g, \" \"));\n        params.forEach((pair) => {\n            if (pair.trim()) {\n                const [key, value] = pair.split(/=(.+)/g, 2); // Split on the first occurence of the '=' character\n                if (key && value) {\n                    obj[decode(key)] = decode(value);\n                }\n            }\n        });\n        return obj;\n    }\n    /**\n     * Trims entries in an array.\n     *\n     * @param arr\n     */\n    static trimArrayEntries(arr) {\n        return arr.map((entry) => entry.trim());\n    }\n    /**\n     * Removes empty strings from array\n     * @param arr\n     */\n    static removeEmptyStringsFromArray(arr) {\n        return arr.filter((entry) => {\n            return !!entry;\n        });\n    }\n    /**\n     * Attempts to parse a string into JSON\n     * @param str\n     */\n    static jsonParseHelper(str) {\n        try {\n            return JSON.parse(str);\n        }\n        catch (e) {\n            return null;\n        }\n    }\n    /**\n     * Tests if a given string matches a given pattern, with support for wildcards and queries.\n     * @param pattern Wildcard pattern to string match. Supports \"*\" for wildcards and \"?\" for queries\n     * @param input String to match against\n     */\n    static matchPattern(pattern, input) {\n        /**\n         * Wildcard support: https://stackoverflow.com/a/3117248/4888559\n         * Queries: replaces \"?\" in string with escaped \"\\?\" for regex test\n         */\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        const regex = new RegExp(pattern\n            .replace(/\\\\/g, \"\\\\\\\\\")\n            .replace(/\\*/g, \"[^ ]*\")\n            .replace(/\\?/g, \"\\\\?\"));\n        return regex.test(input);\n    }\n}\n\nexport { StringUtils };\n//# sourceMappingURL=StringUtils.mjs.map\n","/*! @azure/msal-common v14.2.0 2023-10-20 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Utility class which exposes functions for managing date and time operations.\n */\nclass TimeUtils {\n    /**\n     * return the current time in Unix time (seconds).\n     */\n    static nowSeconds() {\n        // Date.getTime() returns in milliseconds.\n        return Math.round(new Date().getTime() / 1000.0);\n    }\n    /**\n     * check if a token is expired based on given UTC time in seconds.\n     * @param expiresOn\n     */\n    static isTokenExpired(expiresOn, offset) {\n        // check for access token expiry\n        const expirationSec = Number(expiresOn) || 0;\n        const offsetCurrentTimeSec = TimeUtils.nowSeconds() + offset;\n        // If current time + offset is greater than token expiration time, then token is expired.\n        return offsetCurrentTimeSec > expirationSec;\n    }\n    /**\n     * If the current time is earlier than the time that a token was cached at, we must discard the token\n     * i.e. The system clock was turned back after acquiring the cached token\n     * @param cachedAt\n     * @param offset\n     */\n    static wasClockTurnedBack(cachedAt) {\n        const cachedAtSec = Number(cachedAt);\n        return cachedAtSec > TimeUtils.nowSeconds();\n    }\n    /**\n     * Waits for t number of milliseconds\n     * @param t number\n     * @param value T\n     */\n    static delay(t, value) {\n        return new Promise((resolve) => setTimeout(() => resolve(value), t));\n    }\n}\n\nexport { TimeUtils };\n//# sourceMappingURL=TimeUtils.mjs.map\n"],"names":["activeEffectScope","EffectScope","constructor","detached","this","_active","effects","cleanups","parent","index","scopes","push","active","run","fn","currentEffectScope","on","off","stop","fromParent","i","l","length","last","pop","recordEffectScope","effect","scope","getCurrentScope","createDep","dep","Set","w","n","wasTracked","trackOpBit","newTracked","initDepMarkers","deps","finalizeDepMarkers","ptr","delete","targetMap","WeakMap","effectTrackDepth","maxMarkerBits","activeEffect","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","ReactiveEffect","scheduler","lastShouldTrack","shouldTrack","cleanupEffect","deferStop","onStop","effect2","trackStack","pauseTracking","resetTracking","track","target","type","key","depsMap","get","set","Map","eventInfo","trackEffects","debuggerEventExtraInfo","shouldTrack2","has","add","trigger","newValue","oldValue","oldTarget","values","newLength","Number","forEach","key2","triggerEffects","computed","triggerEffect","allowRecurse","isNonTrackableKeys","builtInSymbols","Object","getOwnPropertyNames","filter","map","get$1","createGetter","shallowGet","readonlyGet","arrayInstrumentations","createArrayInstrumentations","instrumentations","args","arr","toRaw","res","apply","hasOwnProperty","obj","isReadonly2","shallow","receiver","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","Reflect","isRef","value","readonly","reactive","set$1","createSetter","shallowSet","isReadonly","isShallow","hadKey","result","deleteProperty","has$1","ownKeys","mutableHandlers","readonlyHandlers","shallowReactiveHandlers","toShallow","getProto","v","getPrototypeOf","rawTarget","rawKey","has2","wrap","toReadonly","toReactive","call","size","proto","get2","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","method","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","next","done","createReadonlyMethod","createInstrumentations","mutableInstrumentations2","shallowInstrumentations2","readonlyInstrumentations2","shallowReadonlyInstrumentations2","iteratorMethods","mutableInstrumentations","readonlyInstrumentations","shallowInstrumentations","shallowReadonlyInstrumentations","createInstrumentationGetter","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","targetTypeMap","rawType","getTargetType","isExtensible","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","Proxy","isReactive","isProxy","raw","markRaw","trackRefValue","ref2","triggerRefValue","newVal","r","__v_isRef","ref","createRef","rawValue","RefImpl","__v_isShallow","_rawValue","_value","useDirectValue","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","ComputedRefImpl","getter","_setter","isSSR","_dirty","_cacheable","self","getterOrOptions","debugOptions","setter","onlyGetter","cRef","callWithErrorHandling","instance","err","handleError","callWithAsyncErrorHandling","catch","throwInDev","contextVNode","vnode","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","config","errorHandler","logError","console","error","isFlushing","isFlushPending","queue","flushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","nextTick","p","then","bind","findInsertionIndex","id","start","end","middle","middleJobId","getId","queueJob","job","includes","splice","queueFlush","flushJobs","invalidateJob","indexOf","queuePostFlushCb","cb","flushPreFlushCbs","seen","pre","flushPostFlushCbs","deduped","sort","a","b","Infinity","comparator","diff","emit","event","rawArgs","isUnmounted","props","isModelListener","startsWith","modelArg","slice","modifiersKey","number","trim","handlerName","handler","onceHandler","emitted","normalizeEmitsOptions","comp","asMixin","cache","emitsCache","cached","emits","normalized","hasExtends","extendEmits","raw2","normalizedFromExtend","mixins","extends","isEmitListener","options","replace","toLowerCase","currentRenderingInstance","currentScopeId","setCurrentRenderingInstance","prev","__scopeId","pushScopeId","popScopeId","withCtx","ctx","isNonScopedSlot","_n","renderFnWithContext","_d","setBlockTracking","prevInstance","_c","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","render","renderCache","data","setupState","inheritAttrs","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","render2","getFunctionalFallthrough","blockStack","createVNode","Comment","root","keys","some","filterModelListeners","cloneVNode","dirs","concat","transition","shouldUpdateComponent","prevVNode","nextVNode","optimized","prevProps","children","prevChildren","component","nextProps","nextChildren","patchFlag","emitsOptions","$stable","hasPropsChanged","dynamicProps","nextKeys","updateHOCHostEl","el","subTree","isSuspense","__isSuspense","queueEffectWithSuspense","suspense","pendingBranch","INITIAL_WATCHER_VALUE","watch","source","doWatch","immediate","deep","flush","onTrack","onTrigger","_a","currentInstance","cleanup","forceTrigger","isMultiSource","s","traverse","onCleanup","baseGetter","ssrCleanup","isInSSRComponentSetup","useSSRContext","__watcherHandles","Array","fill","queuePostRenderEffect","uid","unwatch","instanceWatch","publicThis","createPathGetter","setCurrentInstance","unsetCurrentInstance","path","segments","split","invokeDirectiveHook","name","bindings","oldBindings","binding","hook","dir","useTransitionState","state","isMounted","isLeaving","isUnmounting","leavingVNodes","onMounted","onBeforeUnmount","TransitionHookValidator","Function","BaseTransitionPropsValidators","mode","String","appear","Boolean","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","BaseTransitionImpl","setup","getCurrentInstance","prevTransitionKey","default","getTransitionRawChildren","child","hasFound","c","rawProps","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","isSameVNodeType","leavingHooks","afterLeave","update","delayLeave","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","_leaveCb","BaseTransition","create","callHook","callAsyncHook","every","hook2","hooks","beforeEnter","leavingVNode","enter","afterHook","cancelHook","called","_enterCb","cancelled","leave","remove","clone","vnode2","isKeepAlive","ssContent","ssFallback","keepComment","parentKey","ret","keyedFragmentCount","Fragment","isAsyncWrapper","__asyncLoader","__isKeepAlive","RegExp","matches","pattern","test","onActivated","registerKeepAliveHook","onDeactivated","wrappedHook","__wdc","current","isDeactivated","injectHook","injectToKeepAliveRoot","keepAliveRoot","injected","onUnmounted","resetShapeFlag","getInnerChild","prepend","__weh","unshift","createHook","lifecycle","onBeforeMount","onBeforeUpdate","onUpdated","onServerPrefetch","onRenderTriggered","onRenderTracked","onErrorCaptured","COMPONENTS","resolveComponent","maybeSelfReference","resolveAsset","NULL_DYNAMIC_COMPONENT","for","warnMissing","selfName","getComponentName","registry","getPublicInstance","isStatefulComponent","getExposeProxy","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","refs","$parent","$root","$emit","$options","resolveMergedOptions","$forceUpdate","f","$nextTick","$watch","hasSetupBinding","__isScriptSetup","PublicInstanceProxyHandlers","_","accessCache","normalizedProps","shouldCacheAccess","publicGetter","cssModule","globalProperties","__cssModules","defineProperty","descriptor","normalizePropsOrEmits","reduce","applyOptions","beforeCreate","dataOptions","computedOptions","methods","watchOptions","provide","provideOptions","inject","injectOptions","created","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","serverPrefetch","expose","components","directives","filters","checkDuplicateProperties","resolveInjections","methodHandler","opt","enumerable","configurable","createWatcher","provides","registerLifecycleHook","register","_hook","exposed","val","normalizeInject","from","h","base","extendsOptions","globalMixins","optionsCache","optionMergeStrategies","resolved","m","mergeOptions","to","strats","strat","internalOptionMergeStrats","mergeDataFn","mergeEmitsOrPropsOptions","mergeObjectOptions","mergeAsArray","mergeWatchOptions","mergeInject","merged","createAppContext","app","isNativeTag","NO","performance","warnHandler","compilerOptions","propsCache","uid$1","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","_instance","version","use","plugin","install","mixin","directive","mount","rootContainer","isHydrate","isSVG","__vue_app__","unmount","runWithContext","currentApp","parentProvides","defaultValue","treatDefaultAsFactory","arguments","initProps","isStateful","InternalObjectKey","propsDefaults","setFullProps","updateProps","rawPrevProps","rawCurrentProps","hasAttrsChanged","kebabKey","resolvePropValue","propsToUpdate","camelizedKey","needCastKeys","rawCastValues","camelKey","castValues","isAbsent","hasDefault","skipFactory","normalizePropsOptions","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","getType","ctor","match","toString","isSameType","expectedTypes","findIndex","t","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","updateSlots","needDeletionCheck","deletionComparisonTarget","setRef","rawRef","oldRawRef","parentSuspense","isUnmount","refValue","owner","oldRef","_isString","_isRef","doSet","existing","k","initFeatureFlags","createRenderer","baseCreateRenderer","createHydrationFns","__VUE__","insert","hostInsert","hostRemove","patchProp","hostPatchProp","createElement","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","insertStaticContent","hostInsertStaticContent","patch","n1","n2","container","anchor","parentComponent","slotScopeIds","dynamicChildren","getNextHostNode","Text","processText","processCommentNode","Static","mountStaticNode","processFragment","processElement","processComponent","process","internals","moveStaticNode","removeStaticNode","mountElement","patchElement","vnodeHook","is","mountChildren","scopeId","unmountChildren","onVnodeBeforeMount","invokeVNodeHook","needCallTransitionHooks","onVnodeMounted","parentVNode","cloneIfMounted","oldProps","newProps","toggleRecurse","onVnodeBeforeUpdate","areChildrenSVG","patchBlockChildren","patchChildren","patchProps","class","style","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","fragmentSlotScopeIds","traverseStaticChildren","activate","mountComponent","updateComponent","initialVNode","createComponentInstance","renderer","setupComponent","asyncDep","registerDep","setupRenderEffect","placeholder","asyncResolved","updateComponentPreRender","componentUpdateFn","bu","u","originNext","nextTree","prevTree","bm","isAsyncWrapperVNode","hydrateNode","hydrateSubTree","scopedInitialVNode","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","move","moveType","needTransition","remove2","performLeave","doRemove","deactivate","shouldInvokeDirs","shouldInvokeVnodeHook","onVnodeBeforeUnmount","unmountComponent","onVnodeUnmounted","removeFragment","performRemove","bum","um","suspenseId","pendingId","_vnode","mt","mc","pc","pbc","o","createApp","allowed","ch1","ch2","len","arrI","isTeleport","__isTeleport","currentBlock","openBlock","disableTracking","closeBlock","isBlockTreeEnabled","setupBlock","createElementBlock","createBaseVNode","createBlock","isVNode","__v_isVNode","normalizeKey","normalizeRef","ref_key","ref_for","isBlockNode","needFullChildrenNormalization","__v_skip","targetAnchor","staticCount","normalizeChildren","normalize","_createVNode","cloned","isClassComponent","__vccOpts","guardReactiveProps","klass","extraProps","mergeRef","mergedProps","mergeProps","ce","createTextVNode","text","flag","createStaticVNode","content","numberOfNodes","createCommentVNode","asBlock","memo","slot","slotFlag","toMerge","incoming","emptyAppContext","exposeProxy","setupContext","attrsProxy","slotsProxy","bc","da","rtg","rtc","sp","internalSetCurrentInstance","globalCurrentInstanceSetters","settersKey","compile","installWithProxy","setupResult","setupStatefulComponent","createSetupContext","resolvedResult","handleSetupResult","e","finishComponentSetup","__ssrInlineRender","ssrRender","skipOptions","template","isCustomElement","delimiters","componentCompilerOptions","finalCompilerOptions","getAttrsProxy","includeInferred","displayName","__name","propsOrChildren","prototype","ssrContextKey","svgNS","doc","document","templateContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","multiple","setAttribute","createTextNode","node","nodeValue","textContent","querySelector","selector","before","previousSibling","lastChild","cloneNode","innerHTML","wrapper","firstChild","appendChild","patchClass","transitionClasses","_vtc","join","removeAttribute","className","patchStyle","isCssString","setStyle","currentDisplay","display","cssText","importantRE","setProperty","prefixed","autoPrefix","prefixes","prefixCache","rawName","xlinkNS","patchAttr","removeAttributeNS","setAttributeNS","isBoolean","patchDOMProp","tagName","getAttribute","needRemove","addEventListener","removeEventListener","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","parseName","invoker","createInvoker","optionsModifierRE","cachedNow","getNow","Date","now","initialValue","_vts","attached","patchStopImmediatePropagation","originalStop","stopImmediatePropagation","_stopped","nativeOnRE","shouldSetAsProp","_trueValue","_falseValue","HTMLElement","TRANSITION","ANIMATION","Transition","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","TransitionPropsValidators","h2","hasExplicitCallback","baseProps","durations","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","_isLeaving","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","NumberOf","cls","classList","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","setTimeout","timeout","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","window","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","max","hasTransform","delays","d","toMs","body","offsetHeight","positionMap","newPositionMap","TransitionGroupImpl","moveClass","hasCSSTransform","callPendingCbs","recordPosition","movedChildren","applyTranslation","transform","webkitTransform","transitionDuration","_moveCb","propertyName","cssTransitionProps","getBoundingClientRect","oldPos","newPos","dx","left","dy","top","nodeType","rendererOptions","ensureRenderer","containerOrSelector","normalizeContainer","SVGElement","Element","makeMap","str","expectsLowerCase","list","EMPTY_OBJ","EMPTY_ARR","NOOP","onRE","isOn","extend","assign","hasOwn","isArray","isMap","toTypeString","isSet","isDate","isRegExp","isFunction","isString","isSymbol","isObject","isPromise","objectToString","toRawType","isPlainObject","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","hit","camelizeRE","camelize","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","toHandlerKey","hasChanged","invokeArrayFns","fns","arg","def","looseToNumber","parseFloat","isNaN","toNumber","NaN","_globalThis","getGlobalThis","globalThis","g","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","normalizeStyle","item","parseStringStyle","listDelimiterRE","propertyDelimiterRE","styleCommentRE","tmp","normalizeClass","specialBooleanAttrs","isSpecialBooleanAttr","includeBooleanAttr","looseCompareArrays","equal","looseEqual","aValidType","bValidType","getTime","aKeysCount","bKeysCount","aHasKey","bHasKey","looseIndexOf","toDisplayString","JSON","stringify","replacer","_key","entries","val2","exports","sfc","kindOf","thing","kindOfTest","typeOfTest","isUndefined","isBuffer","isArrayBuffer","isArrayBufferView","ArrayBuffer","isView","buffer","isNumber","toStringTag","isFile","isBlob","isFileList","isStream","pipe","isFormData","kind","FormData","append","isURLSearchParams","allOwnKeys","findKey","_global","isContextDefined","merge","caseless","assignValue","targetKey","stripBOM","charCodeAt","inherits","superConstructor","descriptors","toFlatObject","sourceObj","destObj","propFilter","endsWith","searchString","position","undefined","lastIndex","toArray","isTypedArray","TypedArray","Uint8Array","forEachEntry","generator","pair","matchAll","regExp","exec","isHTMLForm","toCamelCase","p1","p2","reduceDescriptors","reducer","getOwnPropertyDescriptors","reducedDescriptors","defineProperties","freezeMethods","writable","Error","toObjectSet","arrayOrString","delimiter","define","noop","toFiniteNumber","isFinite","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","generateString","alphabet","random","isSpecCompliantForm","toJSONObject","stack","visit","reducedValue","isAsyncFn","isThenable","utils","hasOwnProp","global","AxiosError","message","code","request","response","captureStackTrace","toJSON","description","fileName","lineNumber","columnNumber","status","prototype$1","customProps","axiosError","cause","httpAdapter","isVisitable","removeBrackets","renderKey","dots","token","isFlatArray","predicates","toFormData","formData","TypeError","metaTokens","indexes","option","visitor","defaultVisitor","_Blob","Blob","useBlob","convertValue","toISOString","Buffer","exposedHelpers","build","encode$1","charMap","encodeURIComponent","AxiosURLSearchParams","params","_pairs","encode","buildURL","url","_encode","serializeFn","serialize","serializedParams","hashmarkIndex","encoder","InterceptorManager","handlers","fulfilled","rejected","synchronous","runWhen","eject","InterceptorManager$1","transitionalDefaults","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","URLSearchParams$1","URLSearchParams","FormData$1","Blob$1","isStandardBrowserEnv","product","navigator","isStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","platform","isBrowser","classes","protocols","toURLEncodedForm","helpers","isNode","parsePropPath","arrayToObject","formDataToJSON","buildPath","isNumericKey","isLast","stringifySafely","parser","parse","defaults","transitional","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","setContentType","formSerializer","_FormData","env","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","defaults$1","ignoreDuplicateOf","parseHeaders","rawHeaders","parsed","line","substring","$internals","normalizeHeader","header","normalizeValue","parseTokens","tokens","tokensRE","isValidHeaderName","matchHeaderValue","isHeaderNameFilter","formatHeader","char","buildAccessors","accessorName","methodName","arg1","arg2","arg3","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_header","_rewrite","lHeader","setHeaders","matcher","deleted","deleteHeader","format","targets","asStrings","first","accessor","accessors","defineAccessor","mapped","headerValue","AxiosHeaders$1","transformData","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","reject","ERR_BAD_REQUEST","floor","cookies","write","expires","domain","secure","cookie","toGMTString","read","decodeURIComponent","isAbsoluteURL","combineURLs","baseURL","relativeURL","buildFullPath","requestedURL","isURLSameOrigin","msie","userAgent","urlParsingNode","originURL","resolveURL","href","protocol","host","search","hash","hostname","port","pathname","location","requestURL","parseProtocol","speedometer","samplesCount","bytes","timestamps","firstSampleTS","head","tail","chunkLength","startedAt","bytesCount","passed","round","progressEventReducer","listener","isDownloadStream","bytesNotified","_speedometer","loaded","total","lengthComputable","progressBytes","rate","inRange","progress","estimated","isXHRAdapterSupported","XMLHttpRequest","xhrAdapter","requestData","requestHeaders","onCanceled","cancelToken","unsubscribe","signal","auth","username","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","responseData","responseText","statusText","open","paramsSerializer","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","xsrfValue","withCredentials","setRequestHeader","onDownloadProgress","onUploadProgress","upload","cancel","abort","subscribe","aborted","send","knownAdapters","http","xhr","adapters","getAdapter","nameOrAdapter","throwIfCancellationRequested","throwIfRequested","dispatchRequest","reason","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","transport","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","VERSION","validators$1","deprecatedWarnings","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","validator","ERR_BAD_OPTION","formatMessage","desc","opts","ERR_DEPRECATED","warn","validators","Axios","instanceConfig","interceptors","configOrUrl","boolean","function","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","responseInterceptorChain","promise","chain","newConfig","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","Axios$1","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","CancelToken$1","spread","isAxiosError","payload","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","HttpStatusCode$1","createInstance","defaultConfig","axios","Cancel","all","promises","formToJSON","module","ThrottlingEntity","isThrottlingEntity","entity","validateKey","THROTTLING_PREFIX","validateEntity","BrowserCacheManager","CacheManager","clientId","cacheConfig","cryptoImpl","logger","staticAuthorityOptions","super","COOKIE_LIFE_MULTIPLIER","internalStorage","MemoryStorage","browserStorage","setupBrowserStorage","cacheLocation","temporaryCacheStorage","setupTemporaryCacheStorage","temporaryCacheLocation","cacheMigrationEnabled","migrateCacheEntries","createKeyMaps","LocalStorage","SessionStorage","BrowserStorage","B","verbose","idTokenKey","Constants","CACHE_PREFIX","ID_TOKEN","clientInfoKey","CLIENT_INFO","errorKey","ERROR","errorDescKey","ERROR_DESC","idTokenValue","getItem","clientInfoValue","errorValue","errorDescValue","keysToMigrate","cacheKey","migrateCacheEntry","newKey","setTemporaryCache","trace","accountKeys","ACCOUNT_KEYS","tokenKeys","TOKEN_KEYS","allKeys","getKeys","isCredentialKey","credObj","validateAndParseJson","IdTokenEntity","isIdTokenEntity","tracePii","idTokenEntity","toObject","updateCredentialCacheKey","addTokenKey","ACCESS_TOKEN","ACCESS_TOKEN_WITH_AUTH_SCHEME","AccessTokenEntity","isAccessTokenEntity","accessTokenEntity","REFRESH_TOKEN","RefreshTokenEntity","isRefreshTokenEntity","refreshTokenEntity","isAccountKey","accountObj","AccountEntity","isAccountEntity","addAccountKeyToMap","jsonValue","parsedJson","setItem","getAccount","accountKey","account","removeAccountKeyFromMap","parsedAccount","setAccount","generateAccountKey","getAccountKeys","removalIndex","removeAccount","removeIdToken","removeTokenKey","removeAccessToken","removeRefreshToken","getTokenKeys","idToken","accessToken","refreshToken","info","ClientAuthErrorCodes","unexpectedCredentialType","infoPii","idRemoval","accessRemoval","refreshRemoval","getIdTokenCredential","parsedIdToken","setIdTokenCredential","generateCredentialKey","getAccessTokenCredential","accessTokenKey","parsedAccessToken","setAccessTokenCredential","getRefreshTokenCredential","refreshTokenKey","parsedRefreshToken","setRefreshTokenCredential","getAppMetadata","appMetadataKey","parsedMetadata","AppMetadataEntity","isAppMetadataEntity","setAppMetadata","appMetadata","generateAppMetadataKey","getServerTelemetry","serverTelemetryKey","ServerTelemetryEntity","isServerTelemetryEntity","setServerTelemetry","serverTelemetry","getAuthorityMetadata","AuthorityMetadataEntity","isAuthorityMetadataEntity","getAuthorityMetadataKeys","isAuthorityMetadata","setWrapperMetadata","wrapperSKU","wrapperVersion","WRAPPER_SKU","WRAPPER_VER","getWrapperMetadata","sku","EMPTY_STRING","setAuthorityMetadata","getActiveAccount","activeAccountKeyFilters","generateCacheKey","ACTIVE_ACCOUNT_FILTERS","activeAccountValueFilters","activeAccountKeyLocal","ACTIVE_ACCOUNT","activeAccountValueLocal","activeAccount","getAccountInfoFilteredBy","localAccountId","setActiveAccount","activeAccountValueObj","homeAccountId","activeAccountKey","activeAccountValue","removeItem","getThrottlingCache","throttlingCacheKey","parsedThrottlingCache","setThrottlingCache","throttlingCache","getTemporaryCache","generateKey","storeAuthStateInCookie","itemCookie","getItemCookie","setItemCookie","clearItemCookie","containsKey","removeAllAccounts","removeAppMetadata","clearTokensAndKeysWithClaims","performanceClient","addQueueMeasurement","PerformanceEvent","ClearTokensAndKeysWithClaims","removedAccessTokens","credential","requestedClaimsHash","warning","cookieName","cookieValue","cookieStr","expireTime","getCookieExpirationTime","secureCookies","cookieList","clearMsalCookies","cookiePrefix","cookieKey","cookieLifeDays","today","expr","toUTCString","getCache","setCache","generatedKey","StringUtils","ADAL_ID_TOKEN","generateAuthorityKey","stateString","libraryState","stateId","ProtocolUtils","parseRequestState","AUTHORITY","generateNonceKey","NONCE_IDTOKEN","generateStateKey","REQUEST_STATE","getCachedAuthority","cachedState","stateCacheKey","authorityCacheKey","updateCacheEntries","nonce","authorityInstance","loginHint","nonceCacheKey","ccsCredential","CcsCredential","HOME_ACCOUNT_ID","CCS_CREDENTIAL","UPN","resetRequestCache","REQUEST_PARAMS","ORIGIN_URI","URL_HASH","CORRELATION_ID","NATIVE_REQUEST","setInteractionInProgress","cleanRequestByState","stateKey","cleanRequestByInteractionType","interactionType","stateValue","parsedState","BrowserProtocolUtils","extractBrowserRequestState","cacheCodeRequest","authCodeRequest","encodedValue","getCachedRequest","encodedTokenRequest","noTokenRequestCacheError","parsedRequest","errorPii","unableToParseTokenRequestCacheError","authority","cachedAuthority","noCachedAuthorityError","getCachedNativeRequest","cachedRequest","isInteractionInProgress","matchClientId","getInteractionInProgress","INTERACTION_STATUS_KEY","inProgress","interactionInProgress","getLegacyLoginHint","adalIdTokenString","msalIdTokenString","cachedIdTokenString","idTokenClaims","AuthToken","preferred_username","upn","currentCacheKey","updatedCacheKey","cacheItem","credentialType","getRedirectRequestContext","REDIRECT_CONTEXT","setRedirectRequestContext","hydrateCache","createIdTokenEntity","environment","tenantId","claimsHash","claims","hashString","createAccessTokenEntity","expiresOn","extExpiresOn","tokenType","sshKid","cacheRecord","CacheRecord","saveCacheRecord","DEFAULT_BROWSER_CACHE_MANAGER","cacheOptions","claimsBasedCachingEnabled","validateWindowStorage","windowStorage","storageNotSupported","cacheKeys","StubbedNetworkModule","sendGetRequestAsync","methodNotImplemented","sendPostRequestAsync","StubPerformanceMeasurement","startMeasurement","endMeasurement","flushMeasurement","StubPerformanceClient","generateId","measureName","correlationId","discard","increment","eventId","InProgress","libraryName","libraryVersion","startTimeMs","measurement","startPerformanceMeasurement","calculateQueuedTime","setPreQueueTime","discardMeasurements","removePerformanceCallback","addPerformanceCallback","emitEvents","addFields","incrementFields","cacheEventByCorrelationId","FetchClient","fetch","GET","getFetchHeaders","onLine","getRequestFailed","noNetworkConnectivity","getHeaderDict","json","failedToParseResponse","reqBody","POST","postRequestFailed","Headers","optionsHeaders","headerDict","DEFAULT_POPUP_TIMEOUT_MS","DEFAULT_IFRAME_TIMEOUT_MS","DEFAULT_REDIRECT_TIMEOUT_MS","DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS","buildConfiguration","userInputAuth","userInputCache","system","userInputSystem","telemetry","userInputTelemetry","isBrowserEnvironment","DEFAULT_AUTH_OPTIONS","DEFAULT_AUTHORITY","knownAuthorities","cloudDiscoveryMetadata","authorityMetadata","redirectUri","postLogoutRedirectUri","navigateToLoginRequestUrl","clientCapabilities","protocolMode","ProtocolMode","AAD","OIDCOptions","serverResponseType","FRAGMENT","defaultScopes","OPENID_SCOPE","PROFILE_SCOPE","OFFLINE_ACCESS_SCOPE","azureCloudOptions","azureCloudInstance","None","tenant","skipAuthorityMetadataCache","supportsNestedAppAuth","DEFAULT_CACHE_OPTIONS","DEFAULT_LOGGER_OPTIONS","loggerCallback","logLevel","Info","piiLoggingEnabled","DEFAULT_BROWSER_SYSTEM_OPTIONS","loggerOptions","networkClient","navigationClient","NavigationClient","loadFrameTimeout","windowHashTimeout","iframeHashTimeout","navigateFrameWait","redirectNavigationTimeout","asyncPopups","allowRedirectInIframe","allowNativeBroker","nativeBrokerHandshakeTimeout","pollIntervalMilliseconds","BrowserConstants","DEFAULT_POLL_INTERVAL_MS","providedSystemOptions","DEFAULT_TELEMETRY_OPTIONS","application","appName","appVersion","client","OIDC","Logger","ClientConfigurationErrorCodes","cannotSetOIDCOptions","cannotAllowNativeBroker","overlayedConfig","isOpenIdConfigResponse","isCloudInstanceDiscoveryResponse","isCloudInstanceDiscoveryErrorResponse","RegionDiscovery","networkInterface","detectRegion","environmentRegion","regionDiscoveryMetadata","RegionDiscoveryDetectRegion","autodetectedRegionName","region_source","ENVIRONMENT_VARIABLE","IMDS_OPTIONS","localIMDSVersionResponse","getRegionFromIMDS","RegionDiscoveryGetRegionFromIMDS","IMDS_VERSION","httpSuccess","IMDS","httpBadRequest","currentIMDSVersion","getCurrentVersion","RegionDiscoveryGetCurrentVersion","FAILED_AUTO_DETECTION","currentIMDSVersionResponse","IMDS_ENDPOINT","IMDS_TIMEOUT","Metadata","Authority","cacheManager","authorityOptions","canonicalAuthority","_canonicalAuthority","validateAsUri","region_used","region_outcome","regionDiscovery","getAuthorityType","authorityUri","HostNameAndPort","CIAM_AUTH_URL","AuthorityType","Ciam","pathSegments","PathSegments","ADFS","Adfs","DSTS","Dsts","Default","authorityType","canonicalAuthorityUrlComponents","urlString","UrlString","_canonicalAuthorityUrlComponents","getUrlComponents","hostnameAndPort","authorizationEndpoint","discoveryComplete","replacePath","metadata","authorization_endpoint","endpointResolutionError","tokenEndpoint","token_endpoint","deviceCodeEndpoint","endSessionEndpoint","end_session_endpoint","endSessionEndpointNotSupported","selfSignedJwtAudience","issuer","jwksUri","jwks_uri","canReplaceTenant","reservedTenantDomains","replaceTenant","endpoint","cachedAuthorityUrl","canonical_authority","cachedAuthorityUrlComponents","cachedAuthorityParts","currentAuthorityParts","currentPart","cachedPart","defaultOpenIdConfigurationEndpoint","canonicalAuthorityHost","isAliasOfKnownMicrosoftAuthority","resolveEndpointsAsync","AuthorityResolveEndpointsAsync","metadataEntity","getCurrentMetadataEntity","cloudDiscoverySource","updateCloudDiscoveryMetadata","AuthorityUpdateCloudDiscoveryMetadata","preferred_network","endpointSource","updateEndpointMetadata","AuthorityUpdateEndpointMetadata","updateCachedMetadata","getAuthorityMetadataByAlias","updateCanonicalAuthority","endpointMetadataResult","CACHE","resetExpiresAt","generateAuthorityMetadataCacheKey","preferred_cache","localMetadata","updateEndpointMetadataFromLocalSources","HARDCODED_VALUES","azureRegionConfiguration","azureRegion","hardcodedMetadata","updateMetadataWithRegionalInformation","AuthorityUpdateMetadataWithRegionalInformation","getEndpointMetadataFromNetwork","AuthorityGetEndpointMetadataFromNetwork","NETWORK","openIdConfigError","configMetadata","getEndpointMetadataFromConfig","CONFIG","getEndpointMetadataFromHardcodedValues","metadataEntityExpired","isExpired","isAuthoritySameType","endpointsFromNetwork","cachedParts","invalidAuthorityMetadata","openIdConfigurationEndpoint","isValidResponse","userConfiguredAzureRegion","AZURE_REGION_AUTO_DISCOVER_FLAG","CONFIGURED_NO_AUTO_DETECTION","replaceWithRegionalInformation","AUTO_DETECTION_REQUESTED_SUCCESSFUL","AUTO_DETECTION_REQUESTED_FAILED","localMetadataSource","updateCloudDiscoveryMetadataFromLocalSources","getCloudDiscoveryMetadataFromNetwork","AuthorityGetCloudDiscoveryMetadataFromNetwork","untrustedAuthority","verbosePii","NOT_APPLICABLE","getCloudDiscoveryMetadataFromConfig","aliasesFromNetwork","createCloudDiscoveryMetadataFromHost","parsedResponse","invalidCloudDiscoveryMetadata","isInKnownAuthorities","instanceDiscoveryEndpoint","AAD_INSTANCE_DISCOVERY_ENDPT","typedResponseBody","tenant_discovery_endpoint","INVALID_INSTANCE","error_description","AuthError","errorCode","errorMessage","typedError","getDomainFromUrl","generateAuthority","authorityString","authorityAzureCloudInstance","DEFAULT_COMMON_TENANT","aliases","getPreferredCache","isAlias","isPublicCloudAuthority","KNOWN_PUBLIC_CLOUDS","buildRegionalAuthorityString","region","queryString","authorityUrlInstance","authorityUrlParts","hostNameAndPort","REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX","constructAuthorityUriFromObject","regionalMetadata","REGIONAL_AUTH_NON_MSI_QUERY_STRING","transformCIAMAuthority","ciamAuthority","authorityUrl","authorityUrlComponents","tenantIdOrDomain","AAD_TENANT_DOMAIN_SUFFIX","formatAuthorityUri","FORWARD_SLASH","buildStaticAuthorityOptions","authOptions","rawCloudDiscoveryMetadata","COMMON","CONSUMERS","ORGANIZATIONS","ThrottlingUtils","generateThrottlingStorageKey","thumbprint","preProcess","throttleTime","ServerError","errorCodes","subError","postProcess","checkResponseStatus","checkResponseForRetryAfter","thumbprintValue","calculateThrottleTime","RETRY_AFTER","error_codes","suberror","time","currentSeconds","DEFAULT_THROTTLE_TIME_SECONDS","DEFAULT_MAX_THROTTLE_TIME_SECONDS","removeThrottle","homeAccountIdentifier","authenticationScheme","resourceRequestMethod","resourceRequestUri","shrClaims","NetworkManager","sendPostRequest","networkError","RequestValidator","validateRedirectUri","redirectUriEmpty","validatePrompt","prompt","promptValues","invalidPromptValue","validateClaims","invalidClaims","validateCodeChallengeParams","codeChallenge","codeChallengeMethod","pkceParamsMissing","validateCodeChallengeMethod","PLAIN","S256","invalidCodeChallengeMethod","sanitizeEQParams","eQParams","queryParams","fromEntries","kv","RequestParameterBuilder","parameters","addResponseTypeCode","RESPONSE_TYPE","CODE_RESPONSE_TYPE","addResponseTypeForTokenAndIdToken","TOKEN_RESPONSE_TYPE","ID_TOKEN_RESPONSE_TYPE","addResponseMode","responseMode","RESPONSE_MODE","QUERY","addNativeBroker","NATIVE_BROKER","addScopes","addOidcScopes","requestScopes","scopeSet","ScopeSet","SCOPE","printScopes","addClientId","CLIENT_ID","addRedirectUri","REDIRECT_URI","addPostLogoutRedirectUri","POST_LOGOUT_URI","addIdTokenHint","idTokenHint","ID_TOKEN_HINT","addDomainHint","domainHint","DOMAIN_HINT","addLoginHint","LOGIN_HINT","addCcsUpn","CCS_HEADER","addCcsOid","clientInfo","utid","addSid","sid","SID","addClaims","mergedClaims","addClientCapabilitiesToClaims","CLAIMS","addCorrelationId","CLIENT_REQUEST_ID","addLibraryInfo","libraryInfo","X_CLIENT_SKU","X_CLIENT_VER","os","X_CLIENT_OS","cpu","X_CLIENT_CPU","addApplicationTelemetry","appTelemetry","X_APP_NAME","X_APP_VER","addPrompt","PROMPT","addState","STATE","addNonce","NONCE","addCodeChallengeParams","CODE_CHALLENGE","CODE_CHALLENGE_METHOD","addAuthorizationCode","CODE","addDeviceCode","DEVICE_CODE","addRefreshToken","addCodeVerifier","codeVerifier","CODE_VERIFIER","addClientSecret","clientSecret","CLIENT_SECRET","addClientAssertion","clientAssertion","CLIENT_ASSERTION","addClientAssertionType","clientAssertionType","CLIENT_ASSERTION_TYPE","addOboAssertion","oboAssertion","OBO_ASSERTION","addRequestTokenUse","tokenUse","REQUESTED_TOKEN_USE","addGrantType","grantType","GRANT_TYPE","addClientInfo","addExtraQueryParameters","sanitizedEQParams","XMS_CC","addUsername","addPassword","addPopToken","cnfString","TOKEN_TYPE","POP","REQ_CNF","addSshJwk","sshJwkString","SSH","addServerTelemetry","serverTelemetryManager","X_CLIENT_CURR_TELEM","generateCurrentRequestHeaderValue","X_CLIENT_LAST_TELEM","generateLastRequestHeaderValue","addThrottling","X_MS_LIB_CAPABILITY","X_MS_LIB_CAPABILITY_VALUE","addLogoutHint","logoutHint","LOGOUT_HINT","createQueryString","queryParameterArray","BaseClient","configuration","cryptoUtils","cryptoInterface","storageInterface","networkManager","createTokenRequestHeaders","ccsCred","CONTENT_TYPE","URL_FORM_CONTENT_TYPE","systemOptions","preventCorsPreflight","executePostToTokenEndpoint","queuedEvent","refreshTokenSize","refresh_token","httpVerToken","X_MS_HTTP_VERSION","clearTelemetryCache","updateAuthority","updatedAuthority","createTokenQueryParameters","parameterBuilder","tokenQueryParameters","TokenCacheContext","tokenCache","cacheHasChanged","ResponseHandler","cacheStorage","cryptoObj","serializableCache","persistencePlugin","validateServerAuthorizationCodeResponse","serverResponseHash","stateNotFound","decodedServerResponseHash","decodedCachedState","invalidState","stateMismatch","InteractionRequiredAuthError","timestamp","trace_id","correlation_id","client_info","validateTokenResponse","serverResponse","refreshAccessToken","errString","serverError","SERVER_ERROR_RANGE_START","SERVER_ERROR_RANGE_END","CLIENT_ERROR_RANGE_START","CLIENT_ERROR_RANGE_END","handleServerTokenResponse","serverTokenResponse","reqTimestamp","authCodePayload","userAssertionHash","handlingRefreshTokenResponse","forceCacheRefreshTokenResponse","serverRequestId","requestStateObj","HandleServerTokenResponse","id_token","base64Decode","nonceMismatch","maxAge","authTime","auth_time","authTimeNotFound","generateHomeAccountId","key_id","generateCacheRecord","cacheContext","beforeCacheAccess","generateAuthenticationResult","storeInCache","afterCacheAccess","invalidCacheEnvironment","cachedIdToken","cachedAccount","tid","createAccount","cloudGraphHostName","cloud_graph_host_name","msGraphHost","msgraph_host","cachedAccessToken","access_token","responseScopes","fromString","expiresIn","expires_in","extExpiresIn","ext_expires_in","refreshIn","refresh_in","tokenExpirationSeconds","extendedTokenExpirationSeconds","refreshOnSeconds","token_type","cachedRefreshToken","createRefreshTokenEntity","foci","cachedAppMetadata","createAppMetadataEntity","fromTokenCache","requestState","requestId","refreshOn","familyId","popTokenGenerator","PopTokenGenerator","secret","keyId","keyIdMissing","signPopToken","asArray","extendedExpiresOn","oid","sub","spa_accountid","nativeAccountId","accountInfo","getAccountInfo","uniqueId","fromCache","userRequestState","spa_code","fromNativeBroker","AuthorizationCodeClient","includeRedirectUri","oidcDefaultScopes","getAuthCodeUrl","GetAuthCodeUrl","createAuthCodeUrlQueryString","AuthClientCreateQueryString","appendQueryString","acquireToken","AuthClientAcquireToken","requestCannotBeMade","TimeUtils","nowSeconds","executeTokenRequest","AuthClientExecuteTokenRequest","X_MS_REQUEST_ID","responseHandler","handleFragmentResponse","hashFragment","serverParams","getDeserializedCodeResponse","authorizationCodeMissingFromServerResponse","getLogoutUri","logoutRequest","logoutRequestEmpty","createLogoutUrlQueryString","queryParametersString","requestBody","createTokenRequestBody","AuthClientCreateTokenRequestBody","CLIENT_INFO_SEPARATOR","tokenBodyParameters","AuthorizationCodeClientExecutePostToTokenEndpoint","clientCredentials","assertion","assertionType","AUTHORIZATION_CODE_GRANT","reqCnfData","generateCnf","PopTokenGenerateCnf","reqCnfString","sshJwk","missingSshJwk","createNewGuid","isEmptyObj","enableSpaAuthorizationCode","RETURN_SPA_CODE","extraQueryParameters","extraScopesToConsent","SELECT_ACCOUNT","NONE","accountSid","extractAccountSid","accountLoginHintClaim","extractLoginHint","nativeBroker","reqCnfHash","login_hint","AuthorityFactory","createDiscoveredInstance","AuthorityFactoryCreateDiscoveredInstance","authorityUriFinal","acquireTokenAuthority","urlEmptyError","ServerTelemetryManager","telemetryRequest","cacheOutcome","apiId","wrapperVer","telemetryCacheKey","CACHE_KEY","CACHE_KEY_SEPARATOR","VALUE_SEPARATOR","platformFields","regionDiscoveryFields","getRegionDiscoveryFields","requestWithRegionDiscoveryFields","SCHEMA_VERSION","CATEGORY_SEPARATOR","lastRequests","getLastRequests","maxErrors","maxErrorsToSend","failedRequests","errors","errorCount","overflow","OVERFLOW_TRUE","OVERFLOW_FALSE","cacheHits","cacheFailedRequest","MAX_CACHED_ERRORS","shift","UNKNOWN_ERROR","incrementCacheHits","numErrorsFlushed","serverTelemEntity","serverTelemetryEntity","dataSize","MAX_LAST_HEADER_BYTES","regionUsed","regionSource","regionOutcome","updateRegionDiscoveryMetadata","setCacheOutcome","BaseInteractionClient","storageImpl","browserCrypto","eventHandler","nativeMessageHandler","MSAL_SKU","clearCacheOnLogout","accountInfoIsEqual","generateAccountCacheKey","clearKeystore","initializeBaseRequest","InitializeBaseRequest","validateRequestAuthority","validatedRequest","missingSshKid","BEARER","getRedirectUri","requestRedirectUri","getCurrentUri","getAbsoluteUrl","discoveredAuthority","getDiscoveredAuthority","authorityMismatch","initializeServerTelemetryManager","forceRefresh","telemetryPayload","requestAuthority","RANDOM_BYTE_ARR_LENGTH","async","generatePkceCodes","GeneratePkceCodes","generateCodeVerifier","GenerateCodeVerifier","generateCodeChallengeFromVerifier","GenerateCodeChallengeFromVerifier","verifier","challenge","GetRandomValues","pkceCodeVerifierB64","pkceNotCreated","pkceCodeVerifier","pkceHashedCodeVerifier","Sha256Digest","StandardInteractionClient","initializeAuthorizationCodeRequest","StandardInteractionClientInitializeAuthorizationCodeRequest","generatedPkceParams","S256_CODE_CHALLENGE_METHOD","initializeLogoutRequest","validLogoutRequest","getLogoutHintFromIdTokenClaims","createAuthCodeClient","requestAzureCloudOptions","StandardInteractionClientCreateAuthCodeClient","clientConfig","getClientConfiguration","StandardInteractionClientGetClientConfiguration","StandardInteractionClientGetDiscoveredAuthority","tokenRenewalOffsetSeconds","validateAndExtractStateFromHash","requestCorrelationId","noStateInHash","platformStateObj","unableToParseState","stateInteractionTypeMismatch","userAuthority","builtAuthority","initializeAuthorizationRequest","StandardInteractionClientInitializeAuthorizationRequest","browserState","setRequestState","baseRequest","legacyLoginHint","contentError","userSwitch","USER_INTERACTION_REQUIRED","USER_CANCEL","NO_NETWORK","PERSISTENT_ERROR","DISABLED","ACCOUNT_UNAVAILABLE","INVALID_METHOD_ERROR","NativeAuthErrorMessages","NativeAuthError","ext","setPrototypeOf","isFatalNativeAuthError","createNativeAuthError","InteractionRequiredAuthErrorCodes","nativeAccountUnavailable","userCancelled","RefreshTokenClient","RefreshTokenClientAcquireToken","RefreshTokenClientExecuteTokenRequest","forceCache","acquireTokenByRefreshToken","tokenRequestEmpty","RefreshTokenClientAcquireTokenByRefreshToken","noAccountInSilentRequest","isFOCI","isAppMetadataFOCI","acquireTokenWithCachedRefreshToken","RefreshTokenClientAcquireTokenWithCachedRefreshToken","noFamilyRTInCache","noTokensFound","clientMismatchErrorWithFamilyRT","INVALID_GRANT_ERROR","CLIENT_MISMATCH_ERROR","getRefreshToken","CacheManagerGetRefreshToken","refreshTokenRequest","RefreshTokenClientCreateTokenRequestBody","RefreshTokenClientExecutePostToTokenEndpoint","REFRESH_TOKEN_GRANT","SilentFlowClient","authResponse","acquireCachedToken","PROACTIVELY_REFRESHED","refreshTokenClient","ClientAuthError","tokenRefreshRequired","SilentFlowClientAcquireCachedToken","lastCacheOutcome","FORCE_REFRESH_OR_CLAIMS","readCacheRecord","NO_CACHED_ACCESS_TOKEN","wasClockTurnedBack","cachedAt","isTokenExpired","CACHED_ACCESS_TOKEN_EXPIRED","generateResultFromCacheRecord","SilentFlowClientGenerateResultFromCacheRecord","SilentCacheClient","silentRequest","SilentCacheClientAcquireToken","acquireTokenSilent_silentFlow","silentAuthClient","createSilentFlowClient","BrowserAuthError","cryptoKeyNotFound","logout","initializeSilentRequest","InitializeSilentRequest","BrokerServerParamKeys","BROKER_CLIENT_ID","BROKER_REDIRECT_URI","NativeInteractionClient","provider","accountId","nativeStorageImpl","nativeStorageManager","silentCacheClient","NativeInteractionClientAcquireToken","nativeATMeasurement","nativeRequest","initializeNativeRequest","acquireTokensFromCache","success","isNativeBroker","messageBody","GetToken","sendMessage","validatedResponse","validateNativeResponse","handleNativeResponse","subErrorCode","createSilentCacheRequest","noAccountFound","getBaseAccountInfo","fullAccount","acquireTokenRedirect","navigationOptions","noHistory","navigateExternal","handleRedirectPromise","createHomeAccountIdentifier","accountEntity","cacheAccount","cacheNativeTokens","generateScopes","generatePopAccessToken","shr","shrParameters","shrNonce","mats","addTelemetryFromNativeResponse","accountProperties","properties","fullAccountEntity","responseAccessToken","isResponseFromCache","removeAccountContext","SHR_NONCE_VALIDITY","nativeCacheRecord","getMATSFromResponse","extensionId","getExtensionId","extensionVersion","getExtensionVersion","matsBrokerVersion","broker_version","matsAccountJoinOnStart","account_join_on_start","matsAccountJoinOnEnd","account_join_on_end","matsDeviceJoin","device_join","matsPromptBehavior","prompt_behavior","matsApiErrorCode","api_error_code","matsUiVisible","ui_visible","matsSilentCode","silent_code","matsSilentBiSubCode","silent_bi_sub_code","matsSilentMessage","silent_message","matsSilentStatus","silent_status","matsHttpStatus","http_status","matsHttpEventCount","http_event_count","AuthErrorCodes","unexpectedError","MATS","is_cached","remainingProperties","appendScopes","getPrompt","ssoSilent","CONSENT","LOGIN","nativePromptNotSupported","windowTitleSubstring","title","extraParameters","extendedExpiryToken","handleExtraBrokerParams","MATS_TELEMETRY","reqCnf","kid","child_client_id","child_redirect_uri","brk_redirect_uri","NativeMessageHandler","handshakeTimeoutMs","resolvers","handshakeResolvers","messageChannel","MessageChannel","windowListener","onWindowMessage","handshakeEvent","NativeMessageHandlerHandshake","req","channel","CHANNEL_ID","responseId","port1","postMessage","createProvider","preferredProvider","PREFERRED_EXTENSION_ID","sendHandshakeRequest","backupProvider","HandshakeRequest","extensionHandshakeTimeoutMs","onmessage","onChannelMessage","origin","port2","timeoutId","close","extensionHandshakeTimedOut","nativeHandshakeTimeout","handshakeResolver","clearTimeout","extensionInstalled","nativeExtensionNotInstalled","resolver","Response","HandshakeResponse","isNativeAvailable","nativeExtensionProvider","InteractionHandler","authCodeModule","authModule","handleCodeResponseFromHash","locationHash","networkModule","HandleCodeResponseFromHash","hashEmptyError","authCodeResponse","handleCodeResponseFromServer","HandleCodeResponseFromServer","validateNonce","nonceKey","cachedNonce","cloud_instance_host_name","updateTokenEndpointAuthority","UpdateTokenEndpointAuthority","cachedCcsCred","checkCcsCredentials","tokenResponse","cloudInstanceHostname","cloudInstanceAuthorityUri","cloudInstanceAuthority","PopupClient","unloadWindow","nativeStorage","popupName","generatePopupName","popupWindowAttributes","acquireTokenPopupAsync","popup","openSizedPopup","generateLogoutPopupName","mainWindowRedirectUri","logoutPopupAsync","acquireTokenPopup","validRequest","Popup","preconnect","authClient","fetchNativeAccountIdMeasurement","FetchAccountIdWithNativeBroker","navigateUrl","interactionHandler","popupParameters","popupWindow","initiateAuthRequest","emitEvent","EventType","POPUP_OPENED","monitorPopupForHash","getDeserializedHash","nativeConnectionNotEstablished","nativeInteractionClient","finally","setCorrelationId","LOGOUT_START","logoutPopup","LOGOUT_SUCCESS","absoluteUrl","navigateInternal","logoutUri","openPopup","waitForLogoutPopup","LOGOUT_FAILURE","LOGOUT_END","requestUrl","emptyNavigateUri","maxTicks","ticks","intervalId","setInterval","closed","cleanPopup","clearInterval","serverResponseString","extractServerResponseStringFromPopup","hashContainsKnownProperties","hashDoesNotContainKnownProperties","monitorPopupTimeout","urlNavigate","popupParams","emptyWindowError","focus","currentWindow","popupWindowError","winLeft","screenLeft","screenX","winTop","screenTop","screenY","winWidth","innerWidth","documentElement","clientWidth","winHeight","innerHeight","clientHeight","width","popupSize","height","popupPosition","POPUP_WIDTH","POPUP_HEIGHT","preventDefault","POPUP_NAME_PREFIX","parseQueryServerResponse","RedirectHandler","redirectStartPage","redirectTimeout","onRedirectNavigate","navigate","RedirectClient","Redirect","handleBackButton","RESTORE_FROM_BFCACHE","getRedirectStartPage","responseHash","getRedirectResponseHash","loginRequestUrl","loginRequestUrlNormalized","removeHashFromUrl","currentUrlNormalized","handleHashResult","handleHash","replaceHash","isInIframe","processHashOnRedirect","homepage","getHomepage","isResponseHash","clearHash","cachedHash","currentAuthority","requestStartPage","SilentHandlerInitiateAuthRequest","loadFrame","SilentHandlerLoadFrame","loadFrameSync","SilentHandlerLoadFrameSync","monitorIframeForHash","iframe","SilentHandlerMonitorIframeForHash","monitorWindowTimeout","contentWindow","contentHash","removeHiddenIframe","RemoveHiddenIframe","frameHandle","createHiddenIframe","src","authFrame","visibility","border","getElementsByTagName","SilentIframeClient","SilentIframeClientAcquireToken","NO_SESSION","silentPromptValueError","Silent","silentTokenHelper","SilentIframeClientTokenHelper","silentLogoutUnsupported","msalFrame","SilentRefreshClient","SilentRefreshClientAcquireToken","createRefreshTokenClient","TokenCache","storage","loadExternalTokens","unableToLoadToken","cacheRecordAccount","createFromAccountInfo","loadIdToken","loadAccessToken","loadRefreshToken","loadAccount","requestHomeAccountId","HybridSpaAuthorizationCodeClient","SilentAuthCodeClient","authCodeRequired","cloudInstanceHostName","StandardController","operatingContext","atsAsyncMeasurement","getConfig","initialized","getLogger","redirectResponse","hybridAuthCodeResponses","CryptoOps","EventHandler","nativeCacheOptions","nativeInternalStorage","activeSilentTokenRequests","trackPageVisibility","trackPageVisibilityWithMeasurement","createController","controller","initialize","visibilityChangeCount","initMeasurement","InitializeClientApplication","INITIALIZE_START","INITIALIZE_END","blockAPICallsBeforeInitialize","foundServerResponse","loggedInAccounts","getAllAccounts","redirectResponseKey","HANDLE_REDIRECT_START","nativeClient","redirectClient","createRedirectClient","isLoggingIn","LOGIN_SUCCESS","ACQUIRE_TOKEN_SUCCESS","HANDLE_REDIRECT_END","ACQUIRE_TOKEN_FAILURE","LOGIN_FAILURE","getRequestCorrelationId","preflightBrowserEnvironmentCheck","isLoggedIn","ACQUIRE_TOKEN_START","LOGIN_START","canUseNative","getNativeAccountId","getBrowserStorage","atPopupMeasurement","AcquireTokenPopup","acquireTokenNative","popupClient","createPopupClient","accessTokenSize","idTokenSize","ssoSilentMeasurement","acquireTokenByCodeAsyncMeasurement","SsoSilent","SSO_SILENT_START","silentIframeClient","createSilentIframeClient","SSO_SILENT_SUCCESS","SSO_SILENT_FAILURE","acquireTokenByCode","ACQUIRE_TOKEN_BY_CODE_START","atbcMeasurement","AcquireTokenByCode","spaCodeAndNativeAccountIdPresent","hybridAuthCode","acquireTokenByCodeAsync","ACQUIRE_TOKEN_BY_CODE_SUCCESS","ACQUIRE_TOKEN_BY_CODE_FAILURE","unableToAcquireTokenFromNativePlatform","authCodeOrNativeAccountIdRequired","AcquireTokenByCodeAsync","silentAuthCodeClient","createSilentAuthCodeClient","silentTokenResult","tokenRenewalError","acquireTokenFromCache","commonRequest","AcquireTokenFromCache","cacheLookupPolicy","AccessToken","AccessTokenAndRefreshToken","AcquireTokenByRefreshToken","RefreshToken","RefreshTokenAndNetwork","silentRefreshClient","createSilentRefreshClient","acquireTokenBySilentIframe","AcquireTokenBySilentIframe","logoutRedirect","clearCache","cacheClient","createSilentCacheClient","accountFilter","getAccountByUsername","getAccountByHomeId","getAccountByLocalId","isAppEmbedded","blockNonBrowserEnvironment","blockRedirectInIframe","blockReloadInHiddenIframes","blockAcquireTokenInPopups","inMemRedirectUnavailable","preflightInteractiveRequest","addEventCallback","removeEventCallback","callbackId","enableAccountStorageEvents","disableAccountStorageEvents","getTokenCache","setLogger","initializeWrapperLibrary","setNavigationClient","getConfiguration","getPerformanceClient","isBrowserEnv","getEventHandler","loginRedirect","loginPopup","acquireTokenSilent","atsMeasurement","AcquireTokenSilent","noAccountError","silentRequestKey","cachedResponse","acquireTokenSilentAsync","AcquireTokenSilentAsync","requestWithCLP","cacheError","ACQUIRE_TOKEN_NETWORK_START","refreshTokenError","isServerError","isInteractionRequiredError","isInvalidGrantError","Skip","PKCS1_V15_KEYGEN_ALG","S256_HASH_ALG","MODULUS_LENGTH","PUBLIC_EXPONENT","keygenAlgorithmOptions","modulusLength","publicExponent","validateCryptoAvailable","cryptoNonExistent","sha256Digest","dataString","TextEncoder","crypto","subtle","digest","getRandomValues","dataBuffer","randomUUID","generateKeyPair","extractable","usages","exportJwk","exportKey","importJwk","importKey","sign","missingKidError","missingAlgError","JoseHeaderErrorMessages","JoseHeaderError","createJoseHeaderError","JoseHeader","typ","alg","getShrHeaderString","shrHeaderOptions","shrHeader","Pop","DatabaseStorage","dbName","tableName","dbOpen","openDB","indexedDB","createObjectStore","db","databaseUnavailable","closeConnection","validateDbIsOpen","databaseNotOpen","transaction","objectStore","dbGet","dbPut","put","dbDelete","dbGetKeys","getAllKeys","dbContainsKey","count","deleteDatabase","deleteDbRequest","AsyncMemoryStorage","storeName","inMemoryCache","indexedDBCache","handleDatabaseAccessError","clearInMemory","clearPersistent","dbDeleted","CryptoKeyStoreNames","asymmetricKeys","symmetricKeys","CryptoKeyStore","base64Encode","input","getPublicKeyThumbprint","publicKeyThumbMeasurement","CryptoOptsGetPublicKeyThumbprint","keyPair","EXTRACTABLE","POP_KEY_USAGES","publicKeyJwk","publicKey","pubKeyThumprintObj","kty","publicJwkString","getSortedObjectString","publicJwkHash","privateKeyJwk","privateKey","unextractablePrivateKey","requestMethod","requestUri","removeTokenBindingKey","keyFound","signJwt","signJwtMeasurement","CryptoOptsSignJwt","cachedKeyPair","publicKeyJwkString","encodedKeyIdThumbprint","encodedShrHeader","cnf","jwk","encodedPayload","tokenString","tokenBuffer","signatureBuffer","encodedSignature","signedJwt","plainText","hashBuffer","hashBytes","TextDecoder","decode","base64DecToArr","base64String","encodedString","invalidBase64String","binString","atob","codePointAt","urlEncode","urlEncodeArr","inputArr","base64EncArr","aBytes","x","fromCodePoint","ErrorLink","BrowserAuthErrorMessages","redirectInIframe","blockIframeReload","blockNestedPopups","iframeClosedPrematurely","authRequestNotSetError","invalidCacheType","nonBrowserEnvironment","uninitializedPublicClientApplication","BrowserAuthErrorMessage","pkceNotGenerated","cryptoDoesNotExist","emptyNavigateUriError","hashDoesNotContainStateError","hashDoesNotContainKnownPropertiesError","unableToParseStateError","stateInteractionTypeMismatchError","userCancelledError","monitorPopupTimeoutError","monitorIframeTimeoutError","redirectInIframeError","blockTokenRequestsInHiddenIframeError","blockAcquireTokenInPopupsError","iframeClosedPrematurelyError","silentLogoutUnsupportedError","authRequestNotSet","notInBrowserEnvironment","failedToParseNetworkResponse","unableToLoadTokenError","signingKeyNotFoundInStorage","authCodeOrNativeAccountRequired","spaCodeAndNativeAccountPresent","invalidBase64StringError","createBrowserAuthError","BrowserConfigurationAuthErrorMessages","stubbedPublicClientApplicationCalled","BrowserConfigurationAuthErrorMessage","storageNotSupportedError","stubPcaInstanceCalled","BrowserConfigurationAuthError","createBrowserConfigurationAuthError","eventCallbacks","listeningToStorageEvents","handleAccountCacheChange","eventType","cacheValue","parsedValue","ACCOUNT_ADDED","ACCOUNT_REMOVED","BaseOperatingContext","browserEnvironment","available","isAvailable","BridgeProxy","initializeNestedAppAuthBridge","nestedAppAuthBridge","responseEnvelope","bridgeRequests","find","element","messageType","getRandomId","log","getTokenInteractive","sendRequest","getTokenSilent","sdkName","sdkVersion","capabilities","TeamsAppOperatingContext","bridgeProxy","getModuleName","MODULE_NAME","ID","getBridgeProxy","StandardOperatingContext","ControllerFactory","createV3Controller","standard","teamsApp","operatingContexts","NestedAppAuthController","PublicClientApplication","createPublicClientApplication","factory","pca","standardOperatingContext","localId","userName","UnknownOperatingContextController","getBrowserCrypto","getRedirectResponse","UnknownOperatingContext","PublicClientNext","stubbedPublicClientApplication","EventMessageUtils","getInteractionStatusFromEvent","currentStatus","Login","AcquireToken","HandleRedirect","Logout","SignedHttpRequest","shrOptions","cryptoOps","generatePublicKeyThumbprint","generateKid","signRequest","publicKeyThumbprint","signPayload","removeKeys","PerformanceClient","applicationTelemetry","intFields","callbacks","eventsByCorrelationId","queueMeasurements","preQueueTimeByCorrelationId","getPreQueueTime","eventName","preQueueEvent","preQueueTime","currentTime","queueTime","manuallyCompleted","queueMeasurement","existingMeasurements","measurementArray","eventCorrelationId","performanceMeasurement","inProgressEvent","fields","rootEvent","isRoot","queueInfo","totalQueueTime","totalQueueCount","manuallyCompletedCount","getQueueInfo","discardCache","incompleteSubMeasurements","durationMs","finalEvent","incompleteSubsCount","subMeasurement","queuedTimeMs","queuedCount","queuedManuallyCompletedCount","Completed","truncateIntegralFields","counter","queueMeasurementForCorrelationId","events","BrowserPerformanceMeasurement","makeMeasureName","startMark","makeStartMark","endMark","makeEndMark","supportsBrowserPerformance","mark","measure","clearMarks","clearMeasures","getEntriesByName","flushMeasurements","measurements","entriesForMeasurement","BrowserPerformanceClient","getPageVisibility","visibilityState","deleteIncompleteSubMeasurements","isRootEvent","incompleteMeasurements","supportsBrowserPerformanceNow","startPageVisibility","endPageVisibility","resQueueTime","AuthenticationHeaderParser","getShrNonce","authenticationInfo","AuthenticationInfo","authenticationInfoChallenges","parseChallenges","nextnonce","invalidAuthenticationHeader","wwwAuthenticate","WWWAuthenticate","wwwAuthenticateChallenges","missingNonceAuthenticationHeader","schemeSeparator","challenges","substr","challengeMap","defaultNavigateWindow","INTERACTION_IN_PROGRESS_VALUE","NativeConstants","NativeExtensionMethod","BrowserCacheLocation","HTTP_REQUEST_TYPE","TemporaryCacheKeys","ACQUIRE_TOKEN_ACCOUNT","SESSION_STATE","RENEW_STATUS","SCOPES","StaticCacheKeys","InMemoryCacheKeys","ApiId","acquireTokenSilent_authCode","InteractionType","InteractionStatus","Startup","DEFAULT_REQUEST","KEY_FORMAT_JWK","WrapperSKU","React","Angular","DB_NAME","DB_VERSION","DB_TABLE_NAME","CacheLookupPolicy","meta","parseServerResponseFromHash","hashUrlString","getHash","history","replaceState","urlParts","isInPopup","opener","currentUrl","urlComponents","Protocol","isIframedApp","link","rel","URL","crossOrigin","extractTokenClaims","encodedToken","jswPayload","getJWSPayload","base64Decoded","tokenParsingError","authToken","nullOrEmptyToken","tokenPartsRegex","checkMaxAge","fiveMinuteSkew","maxAgeTranspired","CcsCredentialType","buildClientInfo","rawClientInfo","clientInfoEmptyError","decodedClientInfo","clientInfoDecodingError","buildClientInfoFromHomeAccountId","clientInfoParts","rawMetdataJSON","endpointMetadata","token_endpoint_auth_methods_supported","response_modes_supported","subject_types_supported","id_token_signing_alg_values_supported","response_types_supported","scopes_supported","request_uri_parameter_supported","userinfo_endpoint","device_authorization_endpoint","http_logout_supported","frontchannel_logout_supported","claims_supported","kerberos_endpoint","tenant_region_scope","cloud_instance_name","rbac_url","instanceDiscoveryMetadata","EndpointMetadata","InstanceDiscoveryMetadata","InstanceDiscoveryMetadataAliases","alias","getHardcodedAliasesForCanonicalAuthority","getCloudDiscoveryMetadataFromHardcodedValues","getAliasesFromConfigMetadata","getCloudDiscoveryMetadataFromNetworkResponse","AzureCloudInstance","AzurePublic","AzurePpe","AzureChina","AzureGermany","AzureUsGovernment","commonLogger","validAccounts","getAccountsFilteredBy","getAccountInfoFromEntity","allAccounts","accountEntities","getIdToken","idTokenClaimsMatchAccountFilter","matchLoginHint","matchSid","invalidCacheRecord","saveAccessToken","accessTokenFilter","realm","currentScopes","accessTokenKeyMatchesFilter","tokenEntity","credentialMatchesFilter","tokenScopeSet","intersectingScopeSets","allAccountKeys","matchingAccounts","matchHomeAccountId","matchLocalAccountId","matchUsername","matchEnvironment","matchRealm","matchNativeAccountId","matchAuthorityType","matchName","lowerCaseKey","clientIdValidation","familyIdValidation","matchUserAssertionHash","matchCredentialType","matchFamilyId","matchTarget","matchTokenType","matchKeyId","getAppMetadataFilteredBy","getAppMetadataFilteredByInternal","allCacheKeys","matchingAppMetadata","isAppMetadata","matchedEntity","removedAccounts","allTokenKeys","generateAccountId","removedCredentials","accessTokenWithAuthSchemeEntity","bindingKeyNotRemoved","readAccountFromCache","getAccessToken","readAppMetadataFromCache","idTokenFilter","idTokens","getIdTokensByFilter","numIdTokens","idTokenKeys","idTokenKeyMatchesFilter","inputKey","createSearchScopes","authScheme","accessTokenKeys","accessTokens","numAccessTokens","keyMustContainAllScopes","getAccessTokensByFilter","familyRT","refreshTokenFilter","refreshTokenKeys","refreshTokens","refreshTokenKeyMatchesFilter","numRefreshTokens","appMetadataFilter","appMetadataEntries","numAppMetadata","multipleMatchingAppMetadata","staticAliases","cloudMetadata","isNotAccessTokenCredential","entityScopeSet","containsScopeSet","DefaultStorageClass","requestedClaims","atEntity","tokenClaims","tokenClaimsCnfRequiredForSignedJwt","accountInterface","accountDetails","ADFS_ACCOUNT_TYPE","MSSTS_ACCOUNT_TYPE","GENERIC_ACCOUNT_TYPE","preferredUsername","email","emails","serverClientInfo","authType","accountA","accountB","compareClaims","claimsMatch","accountAClaims","accountBClaims","iat","generateAppMetadataCacheKey","appMetaDataKeyArray","expiresAt","REFRESH_TIME_SECONDS","fromNetwork","appMetadataEntity","CredentialEntity","generateAccountIdForCacheKey","generateCredentialId","generateCredentialIdForCacheKey","generateTarget","generateTargetForCacheKey","generateCredentialCacheKey","generateType","credentialKey","generateClaimsHashForCacheKey","generateSchemeForCacheKey","clientOrFamilyId","credentialId","rtEntity","DEFAULT_TOKEN_RENEWAL_OFFSET_SEC","DEFAULT_SYSTEM_OPTIONS","DEFAULT_LOGGER_IMPLEMENTATION","DEFAULT_NETWORK_IMPLEMENTATION","DEFAULT_LIBRARY_INFO","SKU","DEFAULT_CLIENT_CREDENTIALS","DEFAULT_AZURE_CLOUD_OPTIONS","buildClientConfiguration","userAuthOptions","userSystemOptions","userLoggerOption","userCacheOptions","storageImplementation","networkImplementation","cryptoImplementation","buildAuthOptions","isOidcProtocolMode","DEFAULT_CRYPTO_IMPLEMENTATION","KeyLocation","SW","UHW","PopTokenGenerateKid","kidThumbprint","xms_ksl","resourceUrlString","resourceUrlComponents","at","ts","AbsolutePath","q","QueryString","client_claims","AuthErrorMessages","AuthErrorMessage","errorString","createAuthError","additionalMessage","ClientAuthErrorMessages","hashNotDeserialized","multipleMatchingTokens","multipleMatchingAccounts","cannotRemoveEmptyScope","cannotAppendScopeSet","emptyInputScopeSet","deviceCodePollingCancelled","deviceCodeExpired","deviceCodeUnknownError","noCryptoObject","invalidAssertion","invalidClientCredential","userTimeoutReached","userCanceled","missingTenantIdError","nestedAppAuthBridgeDisabled","ClientAuthErrorMessage","unableToGetOpenidConfigError","invalidStateError","stateMismatchError","stateNotFoundError","nonceMismatchError","authTimeNotFoundError","tokenRequestCannotBeMade","removeEmptyScopeError","appendScopeSetError","emptyInputScopeSetError","DeviceCodePollingCancelled","DeviceCodeExpired","DeviceCodeUnknownError","NoAccountInSilentRequest","noCryptoObj","tokenClaimsRequired","noAuthorizationCodeFromServer","bindingKeyNotRemovedError","logoutNotSupported","userCanceledError","createClientAuthError","ClientConfigurationErrorMessages","claimsRequestParsingError","authorityUriInsecure","urlParseError","emptyInputScopesError","ClientConfigurationErrorMessage","redirectUriNotSet","emptyScopesError","invalidPrompt","invalidClaimsRequest","tokenRequestEmptyError","logoutRequestEmptyError","invalidCodeChallengeParams","ClientConfigurationError","createClientConfigurationError","InteractionRequiredServerErrorMessage","interactionRequired","consentRequired","loginRequired","InteractionRequiredAuthSubErrorMessage","InteractionRequiredAuthErrorMessages","InteractionRequiredAuthErrorMessage","noTokensFoundError","native_account_unavailable","traceId","isInteractionRequiredErrorCode","isInteractionRequiredSubError","isInteractionRequiredErrorDesc","irErrorCode","createInteractionRequiredAuthError","LogLevel","packageName","packageVersion","level","defaultLoggerCallback","setLoggerOptions","createDefaultLoggerOptions","localCallback","logMessage","containsPii","logHeader","executeCallback","Warning","warningPii","Verbose","Trace","isPiiLoggingEnabled","inputScopes","scopeArr","trimArrayEntries","filteredInput","removeEmptyStringsFromArray","validateInputScopes","inputScopeString","scopeString","containsOnlyOIDCScopes","removeScope","removeOIDCScopes","containsScope","lowerCaseScopes","printScopesLowerCase","lowerCaseScopesSet","defaultScopeCount","defaultScope","appendScope","newScope","newScopes","unionScopeSets","otherScopes","unionScopes","sizeOtherScopes","getScopeCount","sizeThisScopes","sizeUnionScopes","array","PerformanceEvents","BaseClientCreateTokenRequestHeaders","BrokerHandhshake","AcquireTokenByRefreshTokenInBroker","AcquireTokenByBroker","AuthorityResolveEndpointsFromLocalSources","GetEndpointMetadataFromNetwork","GetCloudDiscoveryMetadataFromNetworkMeasurement","HandleRedirectPromiseMeasurement","UpdateCloudDiscoveryMetadataMeasurement","UsernamePasswordClientAcquireToken","NativeGenerateAuthResult","PerformanceEventStatus","NotStarted","IntFields","_urlString","canonicalizeUri","lowerCaseUrl","replaceTenantPath","urlObject","pathArray","parseHash","regEx","relativeUrl","baseUrl","baseComponents","hashIndex1","hashIndex2","parseQueryString","queryIndex1","queryIndex2","hashIndex","parsedHash","deserializedHash","queryStringToObject","getDeserializedQueryString","query","parsedQueryString","deserializedQueryString","LIBRARY_NAME","DEFAULT_AUTHORITY_HOST","RESOURCE_DELIM","NO_ACCOUNT","CONSUMER_UTID","EMAIL_SCOPE","CODE_GRANT_TYPE","RT_GRANT_TYPE","FRAGMENT_RESPONSE_MODE","AUTHORIZATION_PENDING","NOT_DEFINED","HttpStatus","SUCCESS_RANGE_START","SUCCESS_RANGE_END","REDIRECT","OIDC_DEFAULT_SCOPES","OIDC_SCOPES","HeaderNames","PersistentCacheKeys","AADAuthorityConstants","AADServerParamKeys","ERROR_DESCRIPTION","EXPIRES_IN","ON_BEHALF_OF","FOCI","ClaimsRequestKeys","PromptValue","CREATE","SSOTypes","ACCOUNT","ACCOUNT_ID","HOMEACCOUNT_ID","CodeChallengeMethodValues","ServerResponseType","ResponseMode","FORM_POST","GrantType","IMPLICIT_GRANT","CLIENT_CREDENTIALS_GRANT","RESOURCE_OWNER_PASSWORD_GRANT","DEVICE_CODE_GRANT","JWT_BEARER","CacheAccountType","MSAV1_ACCOUNT_TYPE","Separators","CredentialType","CacheType","MSA","MSSTS","GENERIC","APP_METADATA","UNDEFINED","THE_FAMILY_ID","AUTHORITY_METADATA_CONSTANTS","AuthorityMetadataSource","SERVER_TELEM_CONSTANTS","MAX_CUR_HEADER_BYTES","AuthenticationScheme","ThrottlingConstants","Errors","PasswordGrantConstants","ResponseCodes","RegionDiscoverySources","INTERNAL_CACHE","RegionDiscoveryOutcomes","CONFIGURED_MATCHES_DETECTED","CONFIGURED_NOT_DETECTED","CacheOutcome","JsonTypes","Jwt","Jwk","invoke","telemetryClient","invokeAsync","userState","generateLibraryState","stateObj","splitState","libraryStateString","libraryStateObj","strObj","lastIndexOf","entry","jsonParseHelper","matchPattern","regex","offset","expirationSec","offsetCurrentTimeSec","cachedAtSec","delay"],"sourceRoot":""}